{"version":3,"sources":["UI/TabLikeHeader.js","UI/redux/actions.js","UI/redux/types.js","UI/LeftSideBar.js","UI/RightSideBar.js","UI/createZip.js","UI/VisModal.js","Implementation/Base/BaseComponent.js","Implementation/Base/BaseComponentConstants.js","Implementation/DataAccessComponent/StaticLocalVowlJSONLoader.js","Implementation/Base/BaseModel.js","Implementation/Models/ResourceRelationModel.js","Implementation/Base/globalHelper.js","Implementation/Models/Resource.js","Implementation/Models/Relation.js","Implementation/Parsers/VOWLParser.js","Implementation/Parsers/SparqlParser.js","Implementation/Models/VertexEdgeModel.js","Implementation/Models/Edge.js","Implementation/Models/Vertex.js","Implementation/Mappers/BaseVertexEdgeMapper.js","Implementation/Models/Node.js","Implementation/Models/Link.js","Implementation/Base/LanguageTools.js","Implementation/Models/NodeLinkModel.js","Implementation/Mappers/BaseNodeLinkMapper.js","UI/VisualItemConfigurator.js","UI/RenderingModuleConfig.js","Implementation/DataAccessComponent/DBPediaLoader.js","UI/DataAccessConfigurator.js","Implementation/DataAccessComponent/WikiDataLoader.js","UI/WikiDataAccessConfigurator.js","Implementation/Mappers/RDFNodeLinkMapper.js","Implementation/Parsers/WikiDataParserExample.js","Implementation/DataAccessComponent/OrkgDataLoader.js","UI/ORKGAccessConfigurator.js","Implementation/Parsers/ORKGParser.js","Implementation/Mappers/UMLNodeLinkMapper.js","Implementation/Mappers/VowlNodeLinkMapper.js","UI/PipeLineVis.js","Implementation/Renderes/gizmoRenderer/renderingElements/BasePrimitive.js","Implementation/Renderes/gizmoRenderer/renderingElements/NodePrimitive.js","Implementation/Renderes/gizmoRenderer/renderingElements/LinkPrimitive.js","Implementation/Renderes/gizmoRenderer/ShapeTools.js","Implementation/Renderes/gizmoRenderer/LineTools.js","Implementation/Renderes/gizmoRenderer/DrawTools.js","Implementation/Renderes/gizmoRenderer/Layout/ForceLayout.js","Implementation/Renderes/gizmoRenderer/Layout/BaseLayoutComponent.js","Implementation/Renderes/gizmoRenderer/Interactions/graphInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/nodeInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/linkInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/interactions.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/BasicRenderingHandler.js","Implementation/Renderes/gizmoRenderer/graph.js","Implementation/Renderes/gizmoRenderer/vowlGraph.js","Implementation/Renderes/gizmoRenderer/Interactions/ORKG_Interactions/graphInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/ORKG_Interactions/nodeInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/ORKG_Interactions/linkInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/ORKG_Interactions/interactions.js","Implementation/Renderes/gizmoRenderer/orkgGraph.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/VOWLRenderingHandler.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/RDFStyledRenderingHandler.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/UMLStyledRenderingHandler.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/OrkgRenderingHandler.js","UI/VisualizationPreview.js","UI/MainWidget.js","App.js","serviceWorker.js","UI/redux/store.js","store.js","index.js","UI/redux/rootReducer.js","demoBundle.zip"],"names":["IndicatorItem","styled","div","expanded","initialRendering","keyframes","props","collapsable","expand","CollapsableBodyContainer","minHeight","maxHeight","ButtonContainer","createHeader","pos","title","collapse","toggleFunction","style","width","color","backgroundColor","borderTopLeftRadius","borderTopRightRadius","marginLeft","key","size","className","duration","margin","flexGrow","display","alignSelf","height","borderRadius","padding","border","borderColor","float","right","top","position","zIndex","onClick","icon","faAngleLeft","fontSize","createBody","children","collapseable","id","marginBottom","borderBottomLeftRadius","borderBottomRightRadius","overflow","marginTop","TabLikeHeader","useState","setExpand","paddingRight","selectDataSource","sourceName","dispatch","type","payload","selectedDataSource","updateRenderingModuleConfiguration","LeftSideBar","componentDidUpdate","prevProps","prevState","state","setState","updateDimensions","innerHeight","window","collapseLeftSideBar","updateEvent","dataSourceSelected","name","vertexEdgeMapperSelected","selectedVertexEdgeMapper","selectVertexEdgeMapper","nodeLinkMapperSelected","selectedNodeLinkMapper","selectNodeLinkMapper","awailableSources","dataSources","availableSources","awailableVertexEdgeMappers","availableVertexEdgeMappers","availableNodeLinkMappers","undefined","defaultDataSource","defaultVertexEdgeMapper","defaultNodeLinkMapper","addEventListener","this","removeEventListener","ContentContainer","Container","borderWidth","borderStyle","textAlign","overflowY","overflowX","map","item","index","selectedName","Button","Component","connect","store","aside","RightSideBar","heightUpdateEvent","collapseSidebar","document","body","createZipBundle","param","execute","console","log","componentDefinitions","that","JSZipUtils","getBinaryContent","Bundle","err","data","JSZip","loadAsync","then","zip","imports","components","push","renderingModuleConfig","configSelected","renderingConfig","execFunctionDef","forEach","JSON","stringify","importDefs","im","file","generateAsync","blob","fileSaver","VisModal","windowHeight","Modal","isOpen","showDialog","toggle","onOpened","maxWidth","ModalHeader","paddingTop","ModalBody","BaseComponent","getResult","resultObject","setInputData","inputDataAsJsonObject","a","__run__","_postRun_","StaticLocalVowlJSONLoader","dataHandlerObject","theData","parse","ontologyFile","BaseModel","modelAsJsonObject","getResourceIdentifier","__resourceIdentifier","setResourceIdentifier","__isInMap__","identifier","__resourceIdentifier__","resourceObject","__isEqual__","b","ResourceRelationModel","error","addResource","resource","resourceMap","__mergeItem","__integrateResourceItem","resources","r1","r2","integrateResource","target","addRelation","relation","relationMap","relations","validIRI","str","test","get","url","Promise","fulfil","reject","xhr","XMLHttpRequest","overrideMimeType","onerror","onload","responseText","open","send","Resource","addAnnotation","value","lang","inputName","suffix","split","pref","tokens","length","i","prName","prefixMapperL2S","_annotations","languageSelector","tm","_resourceURI","_semanticType","_axioms","val","arguments","t","indexOf","subject","axiom","object","hasOwnProperty","src","addSemanticType","annoType","langType","ax","Relation","domains","ranges","domainRangePairs","r","d","domain","range","dom","ran","pair","VOWLParser","m","processedData","_preProcess","_processData","classArray","class","propArray","property","Map","cAttr","classAttribute","pAttr","propertyAttribute","superClasses","iri","equivalent","subproperty","inverse","resultingModelObject","model","dataObject","__processResources","__processRelations","resultingModel","modelResource","label","comment","eq","addAxiom","sc","modelRelation","addDomain","addRange","addDomainRangePair","resourceIdentifier","__processLabels","__processComments","__processResourceAxioms","__processRelationAxioms","__processRelationAttributes","SparqlParser","output","input","binds","results","bindings","labels","head","vars","res","aStatement","allStatements","concat","definitionMap","statement","predicate","subjectResource","propertyRelation","objectResource","ignoreSubjectResource","ignoreObjectResource","ignorePropertyRelation","VertexEdgeModel","addVertex","vertex","vertexeMap","__integrateVertexEdgeItem","vertices","addEdge","edge","edgeMap","edges","Edge","resourceReference","Vertex","__outgoingEdges","__incomingEdges","BaseVertexEdgeMapper","requestedInputType","hasCompatibleInput","__mapInputModel","modelData","veModel","__mapResourcesToVertex","__mapRelationsToEdge","__adjustEdgeDisplayName","_createVertexFromResource","aVertex","vMapper","vertexMapper","dataPath","dataItem","_createEdgeFromRelation","anEdge","eMapper","edgeMapper","__vertexType","__vertexEdgeIdentifier","__displayName","__edgeType","__domainRangePair","dataArray","mappedVertex","Object","keys","axiomsArray","vertexInMap","targetVertex","getVertexFromName","axiomEdge","__createAxiomEdge","srcVertex","axiomName","__edgeAxiom","__source","__target","addOutgoingEdge","addIncomingEdge","mappedEdge","newEdge","source","src_vertex","tar_vertex","tempVertex","clonedEdge","sourceEdge","Node","__outgoingLinks","__incomingLinks","__nodeType","__aggregatedLink","link","Array","isArray","Link","LanguageTools","prefixMap","IRI","textInLanguage","textObject","preferredLanguage","textForLanguage","searchLanguage","language","NodeLinkModel","addNode","node","nodeMap","__integrateNodeLinkItem","nodes","addLink","linkMap","links","tar","__SHADOWNODE","__hasEquivalentClasses","inLink","__SHADOWLINK","outLink","nodesToRemove","linksToRemove","n","idToRemove","splice","l","NodeLinkMapper","nlModel","__mapVerticesToNodes","_mapEdgesToLinks","_mergeAndSplitNodes","_introduceAuxiliaryNode","_autoAssignLinkTypesBasedOnTarget","__aggregateLinks","_createNodeFromVertex","aNode","nMapper","nodeMapper","_createLinkFromEdge","aLink","mapper","linkMapper","__linkType","__nodeLinkIdentifier","__linkAxiom","nodeMerge","nodeSplit","auxiliaryNodes","def","aggregate","allowAggregate","addAggregatedLink","removeShadowsFromModel","constraints","lT","cT","j","toLowerCase","auxLinks","auxNode","k","auxDef","_auxApplies","auxLink1","link1Def","auxLink2","link2Def","_mergeNodes","_splitNodes","splitDefs","linksToSplit","_splitAppliesOnTarget","cloneIterator","nodeToClone","newNode","mergeDefs","linksToMerge","_mergeApplies","srcNode","getNodeFromName","tarNode","mergeNodes","compares","validCompares","applies","hasDef","cons","linkData","compareValue","nodeTypesToApply","isNodeOfType","langRep","IRI2Label","src_node","tar_node","addOutgoingLink","addIncomingLink","RenderingModuleConfig","propagateState","handleCheckChange","renderGraphInteractionsConfig","FormGroup","check","Label","Input","checked","graph_mouseZoom","onChange","paddingLeft","disabled","graph_mouseDrag","renderNodeInteractionsConfig","node_mouseDrag","node_mouseHover","node_mouseSingleClick","node_mouseDoubleClick","renderLinkInteractionsConfig","link_mouseDrag","link_mouseHover","createVisualAppearanceConfigDropDowns","items","availableConfigs","DropdownItem","Dropdown","configSelectionOpen","DropdownToggle","caret","DropdownMenu","graphBgColor","availableRenderingConfigs","initialState","nodeLinkModel","readOnly","DBpediaProxyLoader","executePromisedQuery","query","setQuery","setGraph","graph","dbPediaGraph","setDBPediaURL","dbPediaURL","fullQuery","queryPromise","resolve","requestPath","encodeURIComponent","result","resultingDataObject","exampleQuery","teslaExample","DataAccessConfigurator","statePropagation","handleInputChange","newEntry","executeQuery","dbpediaHandler","DBPediaLoader","graphURL","endpointURL","queryResult","rows","cols","e","WikiDataLoader","setEndPointURL","wikiDataEndpointURL","accessHandler","edgeType","auxiliaryLinks","auxiliaryNode","BaseNodeLinkMapper","WikiDataExampleParser","bStatement","cStatement","dStatement","setRequestResourceId","requestResourceId","requestParameters","ORKGLoader","ORKGParser","_class","PipeLineVis","createPreviewVisualization","dataAccessHandlerExecuted","resourceRelationModel","vertexEdgeMapperExecuted","vertexEdgeModel","nodeLinkMapperExecuted","exportPipeline","createZip","propagate_DBPEdiaConfiguratorState","dataAccessHandler_DBPediaState","childState","configureNodeLinkMapper","moduleName","showModal","selectedModule","selectionType","executeNodeLinkMapper","basicNodeLinkMapper","vowlNodeLinkMapper","VowlNodeLinkMapper","rdfNodeLinkMapper","RDFNodeLinkMapper","umlNodeLinkMapper","UMLNodeLinkMapper","viewNodeLinkMapperOutput","configureVertexEdgeMapper","executeVertexEdgeMapper","basicVertexEdgeMapper","viewVertexEdgeMapperOutput","configureDataAccessHandler","viewDataAccessHandlerOutput","executeDataAccessHandler","dataAccess","parser","OrkgDataLoader","resourceModel","executeRenderingModule","configureRenderingModule","renderDataAccessHandler","renderVertexEdgeMapper","renderNodeLinkMapper","renderRenderingModule","alignItems","justifyContent","flexFlow","WikiDataAccessConfigurator","ORKGAccessConfigurator","replacer","BasePrimitive","cfgObj","__renderingConfig","__id","__drawTools","__visible","groupRoot","visible","drawTools","nameStr","NodePrimitive","incomingLinks","outgoingLinks","setPosition","x","y","updateRenderingPosition","attr","render","renderingElements","renderNode","renderingShape","renderingText","__numberOfLoops","__internalObjectType","__transition_animationDuration","selectAll","remove","removeAllRenderedElementsFromParent","LinkPrimitive","renderingLine","updateLinePosition","sourceNode","targetNode","__internalType","options","link_renderingType","propertyNodePostion","updatePropertyPosition","propertyContainer","arrowContainer","reloadPos","oldPos","renderLink","setInternalType","px","py","lineTools","computeShapeBasedCenterPoint","cx","cy","ShapeTools","getShapeRadius","shape","parseFloat","getShapeWidth","getShapeHeight","LineTools","computeIntersectionPointsWithProperty","offset","distOffset","parentShape","iP_Src","iP_Prop","iP_Tar","divisor","numberOfLoops","fairShareLoopAngleWithMargin","loopAngle","Math","min","dx","dy","labelRadian","atan2","labelAngle","__calculateAngle","startAngle","endAngle","radius","shapeTools","usedRadius","arcFrom","__calculateRadian","arcTo","x1","cos","y1","sin","x2","y2","offsetDirection","__computeNormalizedOffsetDirection","__shapeBasedIntersection","computeIntersectionPoints","domainOffset","parseInt","rangeOffset","angle","PI","radian","len","sqrt","IntPoint","cfg","renderingType","distanceToBorder","scale","distanceToBorderX","distanceToBorderY","abs","DrawTools","__directLineFunction","d3","line","__curveLineFunction","interpolate","__loopLineFunction","tension","drawDisplayName","group","text","_drawText","fontStyle","applyAdditionalOptions","config","addTitleForDisplayName","append","fontSizeOverWritesShapeSize","labelBBWidth","measureTextWidth","fontFamily","overwriteOffset","cropLongText","croppedText","cropText","drawNestedAttributes","refereceResource","nestedLinks","measureTextHeight","w","fontSizeProperty","getComputedStyle","getPropertyValue","linePosY","linePosX","nestedGroup","offsetVal","shift","subGroupProperty","subGroupNode","linkCFG","renderingConfigHandler","getLinkConfigFromType","nodeCFG","getNodeConfigFromType","renderShadowNode","propertyNode","fontPositionV","_text_vAlignCenter","fontPositionH","_text_hAlignCenter","_addStrokeElements","element","selector","applyShapeStyle","targetPrimitive","bgColor","renderBaseShape","roundedCorner","tok","getRenderingHandler","groupContainer","shapeConfig","displayName","__createLinkLine","drawArrowHead","__drawArrowHead","arrowHead","drawArrowTail","__drawArrowTail","arrowTail","drawPropertyNode","__createRenderingShapeForPropertyNode","itemId","dataObj","ref","__data__","elements","linkLine","parent","container","__drawArrowPrimitive","makerType","scaleFactor","vB_String","m1X","m1Y","m2X","m2Y","p1","p2","pathString","strokeColor","strokeWidth","fillColor","strokeStyle","linkType","curve","controlPoints","parentGroup","parentNode","centerPoint","getElementById","offsetWidth","offsetHeight","renderingTextElement","fontColor","textWidth","ratio","newTruncatedTextLength","truncatedText","floor","substring","ForceLayout","pauseForceLayoutAnimation","doPause","stopForce","resumeForce","recalculatePositions","renderedNodes","renderedLinks","createForceElements","force","forceLinks","forceNodes","getForceLink","getForceNode","layoutHandlerReference","distanceValue","charge","linkDistance","computeLinkDistance","linkStrength","layoutSize","gravity","on","resume","stop","alpha","updateLayoutSize","start","bb","svgRoot","getBoundingClientRect","GraphInteractions","enableMouseZoom","zoomEnabled","enableMouseDrag","dragEnabled","applyGraphInteractions","graphObject","zoom","scaleExtent","zoomed","sourceEvent","buttons","call","graphRoot","event","resetUserLayout","preventDefault","stopPropagation","graphContainer","zoomEventByMWheel","deltaY","transformAnimation","zoomFactor","graphTranslation","translate","transition","tween","tr","each","ease","NodeInteractions","setHoverEnabled","hasNodeHover","setNodeClickEnabled","hasNodeClick","setNodeDoubleClickEnabled","hasNodeDobleClick","setDragEnabled","hasNodeDragEnabeld","applyNodeInteractions","dragBehaviour","drag","origin","dragStart","dragEnd","hoverBehaviour","nodeHoverIn","nodeHoverOut","clickBehaviour","nodeClick","doubleClickBehavoir","nodeDoubleClick","fixed","LinkInteractions","hasLinkHover","hasPropertyHover","applyLinkInteractions","linkHoverIn","linkHoverOut","propertyHoverBehaviour","propertyHoverIn","propertyHoverOut","shapeRoot","mouseEntered","keepRendering","unblockRendering","lineColor","Interactions","graphInteractions","nodeInteractions","linkInteractions","redrawCall","warn","DefaultRenderingHandler","renderingConfigObject","defaultNodeCFG","defaultLinkCFG","strokeElement","overwritesShapeSize","lineStyle","lineWidth","overWriteOffset","GraphRenderer","setGraphBackgroundColor","setRenderingContainer","divId","divRoot","setDrawTools","tools","setModel","setRenderingConfig","setInteractionHandler","handler","interactionHandler","configureGraphInteractions","nodeDrag","nodeHover","linkDrag","linkHover","resetUserNavigation","initializeRenderingContainer","_clearRenderingContainers","_createRenderingContainers","_updateSVG_Size","divBoundingBox","divNode","_checkForPaddingInDivNode","_createLayers","root","layerNamePrefix","layerObject","layer","noError","createNodePrimitive","nodePrimitive","createLinkPrimitive","linkPrimitive","setSourceNode","setTargetNode","updateMultiLinkTypes","isMultiLink","out","redrawRenderingPrimitives","_drawRenderingPrimitivesForNodes","_drawRenderingPrimitivesForLinks","drawRenderingPrimitives","applyInteractions","layoutHandler","initializeLayoutEngine","linkContainer","createRenderingPrimitives","nodeContainer","GRAPH_TYPE","BasicRenderingHandler","typeClass","enter","classed","VOWLRenderer","createPrimitives","addCollapseExpandButton","collapseButton_mouseHoverIn","singleCirc","collapseButton_mouseHoverOut","collapseExapandGroup","offsetX","status","exploreSingleNode","getStatementsBySubject","idObj","orkgDataLoader","mapper_1","mapper_2","getDataFromApi","resourceId","newModel","initializeInteractions","renderingGroup","renderingAnimationGroup","idToFetch","nodeHasBeenExplored","incrementalData","setExploreAnimation","drawNewElements","singleNodeExploration","VOWLRenderingHandler","doubleStrokes","Literal","auxForDataTypeProperties","auxForObjectProperties","auxLink","UMLRenderingHandler","VisualizationPreview","renderingModule","RDFStyledRenderingHandler","UMLStyledRenderingHandler","OrkgGraph","OrkgRenderingHandler","dah","createRenderingElements","paddingBottom","expandedLeft","oldLeftExpanded","newWidth","oldWidth","leftWidth","MainWidget","minWidth","updateFlipFlop","leftSideBarExpanded","expandedRight","rightSideBarExpanded","leftSidebarWidth","rightWidth","rightSidebarWidth","oldLeftSidebarState","innerWidth","left","App","updateMainWidgetSize","leftSideBarUpdateEvent","windowWidth","rightSidebarExpanded","leftSidebarExpanded","oldLeftSideState","oldMainWidgetWidth","newMainWidgetWidth","rightSideBarUpdateEvent","heightLeft","heightRight","newHeight","max","mainWidgetHeight","componentInitialized","loading","Boolean","location","hostname","match","selectedDataSourceConfig","selectedVertexEdgeMapperConfig","selectedNodeLinkMapperConfig","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","history","createBrowserHistory","basename","process","createStore","combineReducers","router","connectRouter","applyMiddleware","thunk","routerMiddleware","configureStore","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.5d954d33.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst expandButtonAnimation = ({ expanded, initialRendering }) => {\n  if (!initialRendering) {\n    return keyframes`\n  from {\n    transform: rotate(${expanded ? -90 : 90}deg);\n  }\n  to {\n    transform: rotate(${expanded ? 90 : 270}deg);\n   \n  }\n`;\n  }\n  if (initialRendering) {\n    return keyframes`\n  from {\n    transform: rotate(90deg);\n  }\n  to {\n    transform: rotate(90deg);\n   \n  }\n`;\n  }\n};\n\nconst collapsableBodyContainerAnimation = ({\n  expand,\n  collapsable,\n  minHeight,\n  maxHeight\n}) => {\n  if (collapsable) {\n    return keyframes`\n  from {\n    height: ${expand ? minHeight : maxHeight}px;\n  }\n  to {\n    height: ${expand ? maxHeight : minHeight}px;\n   \n  }\n`;\n  }\n  if (!collapsable) {\n    return keyframes`\n  from {\n    height: ${minHeight}px;\n  }\n  to {\n    height: ${minHeight}px;\n   \n  }\n`;\n  }\n};\n\nconst indicatorItemAnimation = ({ expanded, initialRendering }) => {\n  if (!initialRendering) {\n    return keyframes`\n  0% {\n    opacity: ${expanded ? 1 : 0};\n  }\n  50% {\n    opacity: ${expanded ? 1 : 0};\n  }\n  100% {\n    opacity: ${expanded ? 0 : 1};\n  }\n \n`;\n  }\n};\n\nconst IndicatorItem = styled.div`\n  animation-name: ${indicatorItemAnimation};\n  animation-duration: 500ms;\n  opacity: ${props => (props.collapsable ? (props.expand ? 0 : 1) : 1)};\n`;\n\nconst CollapsableBodyContainer = styled.div`\n  animation-name: ${collapsableBodyContainerAnimation};\n  animation-duration: 400ms;\n  height: ${props =>\n    props.collapsable\n      ? props.expand\n        ? props.maxHeight\n        : props.minHeight\n      : props.minHeight}px;\n`;\n\nconst ButtonContainer = styled.div`\n  animation-name: ${expandButtonAnimation};\n  animation-duration: 400ms;\n  transform: rotate(${props => (props.expanded ? 90 : 270)}deg);\n`;\n\nconst TabLikeHeader = props => {\n  const [expand, setExpand] = useState(true);\n  const toggle = () => setExpand(!expand);\n  return (\n    <div style={{ paddingRight: \"10px\" }}>\n      {createHeader(\n        props,\n        props.position,\n        props.title,\n        props.collapsable,\n        expand,\n        toggle\n      )}\n      {createBody(\n        props,\n        props.title,\n        props.position,\n        props.children,\n        props.collapsable,\n        expand,\n        props.minHeight,\n        props.maxHeight\n      )}\n    </div>\n  );\n};\n\nconst createHeader = (\n  props,\n  pos,\n  title,\n  collapse = false,\n  expand,\n  toggleFunction\n) => {\n  return (\n    <div\n      style={{\n        width: \"200px\",\n        color: \"#fff\",\n        backgroundColor: \"#ad2f38\",\n        borderTopLeftRadius: \"5px\",\n        borderTopRightRadius: \"10px\",\n        marginLeft: pos === \"left\" ? 0 : \"50%\"\n      }}\n      key={\"containerHeaderKey\" + title}\n    >\n      {title}\n      {collapse ? (\n        <ButtonContainer\n          key={\"someKey\" + title}\n          size=\"sm\"\n          color=\"secondary\"\n          className=\"btn-secondary\"\n          expanded={expand}\n          duration={500}\n          style={{\n            margin: \"0 0\",\n            flexGrow: \"1\",\n            display: \"flex\",\n            alignSelf: \"center\",\n            width: \"20px\",\n            height: \"20px\",\n            borderRadius: \"20px\",\n            padding: 0,\n            border: \"solid 1px\",\n            borderColor: \"#525252\",\n            float: \"right\",\n            right: \"10px\",\n            top: \"2px\",\n            position: \"relative\",\n            zIndex: 100\n          }}\n          onClick={toggleFunction}\n        >\n          <Icon\n            icon={faAngleLeft}\n            className=\"align-self-center\"\n            style={{ marginLeft: \"4px\", fontSize: \"20px\" }}\n          />\n        </ButtonContainer>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\nconst createBody = (\n  props,\n  title,\n  pos,\n  children,\n  collapseable,\n  expand,\n  minHeight,\n  maxHeight\n) => {\n  return (\n    <CollapsableBodyContainer\n      id={\"tlh_bodyOf\" + title}\n      collapsable={collapseable}\n      expand={expand}\n      minHeight={minHeight}\n      maxHeight={maxHeight}\n      style={{\n        width: props.width ? props.width : \"250px\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        border: \"1px solid gray\",\n        borderTopLeftRadius: \"0px\",\n        borderTopRightRadius: \"10px\",\n        borderBottomLeftRadius: \"10px\",\n        borderBottomRightRadius: 0,\n        overflow: \"hidden\",\n        color: \"#505565\"\n      }}\n    >\n      {children}\n      {collapseable && !expand && (\n        <IndicatorItem\n          expanded={expand}\n          style={{\n            position: \"relative\",\n            float: \"right\",\n            marginTop: -maxHeight + minHeight - 15 + 5,\n            height: \"15px\",\n            width: \"100%\",\n            backgroundColor: \"#c4c4c4\",\n            borderRadius: \"15px\"\n          }}\n        />\n      )}\n    </CollapsableBodyContainer>\n  );\n};\n\nTabLikeHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  position: PropTypes.string,\n  collapsable: PropTypes.bool,\n  minHeight: PropTypes.number,\n  maxHeight: PropTypes.number,\n  children: PropTypes.any,\n  width:PropTypes.any\n};\n\nexport default TabLikeHeader;\n","import * as type from \"./types.js\";\nexport const selectDataSource = sourceName => dispatch => {\n  dispatch({\n    type: type.SELECT_DATASOURCE,\n    payload: { selectedDataSource: sourceName }\n  });\n};\nexport const selectVertexEdgeMapper = sourceName => dispatch => {\n  dispatch({\n    type: type.SELECT_VERTEXEDGE_MAPPER,\n    payload: { selectedVertexEdgeMapper: sourceName }\n  });\n};\nexport const selectNodeLinkMapper = sourceName => dispatch => {\n  dispatch({\n    type: type.SELECT_NODELINK_MAPPER,\n    payload: { selectedNodeLinkMapper: sourceName }\n  });\n};\n\nexport const createPreviewVisualization = val => dispatch => {\n  dispatch({\n    type: type.CREATE_PREVIEW_VISUALIZATION,\n    payload: { createPreviewVisualization: val }\n  });\n};\n\nexport const updateRenderingModuleConfiguration = payload => dispatch => {\n  dispatch({\n    type: type.UPDATE_RENDERING_MODULE_CONFIG,\n    payload: payload\n  });\n};\n","export const SELECT_DATASOURCE = \"SELECT_DATASOURCE\";\nexport const SELECT_VERTEXEDGE_MAPPER = \"SELECT_VERTEXEDGE_MAPPER\";\nexport const SELECT_NODELINK_MAPPER = \"SELECT_NODELINK_MAPPER\";\nexport const CREATE_PREVIEW_VISUALIZATION = \"CREATE_PREVIEW_VISUALIZATION\";\nexport const UPDATE_RENDERING_MODULE_CONFIG = \"UPDATE_RENDERING_MODULE_CONFIG\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"reactstrap\";\n\nimport TabLikeHeader from \"./TabLikeHeader\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Button } from \"reactstrap\";\nimport * as dataSources from \"../configs/datasources\";\nimport { connect } from \"react-redux\";\n\nimport {\n  selectDataSource,\n  selectVertexEdgeMapper,\n  selectNodeLinkMapper\n} from \"./redux/actions\";\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.awailableSources = dataSources.default.availableSources;\n    this.awailableVertexEdgeMappers =\n      dataSources.default.availableVertexEdgeMappers;\n    this.availableNodeLinkMappers =\n      dataSources.default.availableNodeLinkMappers;\n    this.state = {\n      expanded: true,\n      minHeight: 200,\n      title: props.title,\n      initialRendering: true,\n      selectedDataSource: undefined,\n      defaultDataSource: \"Ontology File\",\n      selectedVertexEdgeMapper: undefined,\n      defaultVertexEdgeMapper: \"Basic Mapper\",\n      innerHeight: 300,\n      selectedNodeLinkMapper: undefined,\n      defaultNodeLinkMapper: \"Basic Mapper\"\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevState.expanded !== this.state.expanded) {\n      this.setState({ initialRendering: false });\n    }\n  };\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  updateDimensions = () => {\n    this.setState({ innerHeight: window.innerHeight });\n  };\n\n  collapseLeftSideBar = () => {\n    this.props.updateEvent(!this.state.expanded);\n    this.setState({ expanded: !this.state.expanded });\n  };\n\n  dataSourceSelected = name => {\n    this.setState({ selectedDataSource: name });\n    this.props.selectDataSource(name);\n  };\n\n  vertexEdgeMapperSelected = name => {\n    this.setState({ selectedVertexEdgeMapper: name });\n    this.props.selectVertexEdgeMapper(name);\n  };\n\n  nodeLinkMapperSelected = name => {\n    this.setState({ selectedNodeLinkMapper: name });\n    this.props.selectNodeLinkMapper(name);\n  };\n\n  render() {\n    return (\n      <ContentContainer\n        id=\"LeftSidebarContainer\"\n        expanded={this.state.expanded}\n        initialRendering={this.state.initialRendering}\n        width={this.props.width}\n        style={{\n          width: this.props.width,\n          height: this.state.innerHeight - 20,\n          float: \"left\",\n          position: \"absolute\"\n        }}\n      >\n        <Container\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderBottomRightRadius: \"0\",\n            borderBottomLeftRadius: \"0\",\n            height: \"40px\",\n            marginLeft: \"5px\",\n            color: \"white\",\n            backgroundColor: \"#ad2f38\"\n          }}\n        >\n          <div style={{ width: this.props.width - 10, textAlign: \"center\" }}>\n            {this.state.title}\n          </div>\n        </Container>\n\n        <Container\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderTopRightRadius: \"0\",\n            borderTopLeftRadius: \"0\",\n            marginLeft: \"5px\",\n            color: \"black\",\n            backgroundColor: \"#ffffff\",\n            marginTop: \"-1px\",\n            position: \"relative\",\n            height: \"93%\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\"\n          }}\n        >\n          <div style={{ width: this.props.width - 20, textAlign: \"center\" }}>\n            <TabLikeHeader\n              title=\"Data Source \"\n              position=\"left\"\n              collapsable={false}\n              width={\"100%\"}\n            >\n              <div style={{ padding: \"10px\", display: \"grid\" }}>\n                {this.awailableSources.map((item, index) => {\n                  let selectedName = this.state.selectedDataSource;\n                  if (!selectedName) {\n                    selectedName = this.state.defaultDataSource;\n                  }\n                  return (\n                    <Button\n                      key={\"datasourceIte\" + index}\n                      style={{\n                        margin: \"5px\",\n                        borderRadius: \"0px\",\n                        borderTopRightRadius: \"10px\",\n                        borderBottomLeftRadius: \"10px\",\n                        backgroundColor:\n                          item === selectedName ? \"#ad2f38\" : \"#1e68a5\"\n                      }}\n                      onClick={() => {\n                        this.dataSourceSelected(item);\n                      }}\n                    >\n                      {item}\n                    </Button>\n                  );\n                })}\n              </div>\n            </TabLikeHeader>\n            <TabLikeHeader\n              title=\"Vertex Edge Mapper \"\n              position=\"left\"\n              collapsable={false}\n              width={\"100%\"}\n            >\n              <div style={{ padding: \"10px\", display: \"grid\" }}>\n                {this.awailableVertexEdgeMappers.map((item, index) => {\n                  let selectedName = this.state.selectedVertexEdgeMapper;\n                  if (!selectedName) {\n                    selectedName = this.state.defaultVertexEdgeMapper;\n                  }\n                  return (\n                    <Button\n                      key={\"datasourceIte\" + index}\n                      style={{\n                        margin: \"5px\",\n                        borderRadius: \"0px\",\n                        borderTopRightRadius: \"10px\",\n                        borderBottomLeftRadius: \"10px\",\n                        backgroundColor:\n                          item === selectedName ? \"#ad2f38\" : \"#1e68a5\"\n                      }}\n                      onClick={() => {\n                        this.vertexEdgeMapperSelected(item);\n                      }}\n                    >\n                      {item}\n                    </Button>\n                  );\n                })}\n              </div>\n            </TabLikeHeader>\n\n            <TabLikeHeader\n              title=\"Node Link Mapper \"\n              position=\"left\"\n              collapsable={false}\n              width={\"100%\"}\n            >\n              <div style={{ padding: \"10px\", display: \"grid\" }}>\n                {this.availableNodeLinkMappers.map((item, index) => {\n                  let selectedName = this.state.selectedNodeLinkMapper;\n                  if (!selectedName) {\n                    selectedName = this.state.defaultNodeLinkMapper;\n                  }\n                  return (\n                    <Button\n                      key={\"datasourceIte\" + index}\n                      style={{\n                        margin: \"5px\",\n                        borderRadius: \"0px\",\n                        borderTopRightRadius: \"10px\",\n                        borderBottomLeftRadius: \"10px\",\n                        backgroundColor:\n                          item === selectedName ? \"#ad2f38\" : \"#1e68a5\"\n                      }}\n                      onClick={() => {\n                        this.nodeLinkMapperSelected(item);\n                      }}\n                    >\n                      {item}\n                    </Button>\n                  );\n                })}\n              </div>\n            </TabLikeHeader>\n          </div>\n        </Container>\n      </ContentContainer>\n    );\n  }\n}\n\nLeftSideBar.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  updateEvent: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  selectDataSource: PropTypes.func.isRequired,\n  selectVertexEdgeMapper: PropTypes.func.isRequired,\n  selectNodeLinkMapper: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {\n    selectDataSource: payload => dispatch(selectDataSource(payload)),\n    selectVertexEdgeMapper: payload =>\n      dispatch(selectVertexEdgeMapper(payload)),\n    selectNodeLinkMapper: payload => dispatch(selectNodeLinkMapper(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar);\n\nconst expandContentContainerAnimation = ({ expanded, width }) => {\n  return keyframes`\n  from {\n    left: ${expanded ? -width : 0}px;\n  }\n  to {\n    left: ${expanded ? 0 : -width}px;\n   \n  }\n`;\n};\n\nconst ContentContainer = styled.div`\n  animation-name: ${expandContentContainerAnimation};\n  animation-duration: 400ms;\n  left: ${props => (props.expanded ? 0 : -props.width)}px;\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"reactstrap\";\n\nimport styled, { keyframes } from \"styled-components\";\n//\n// const expandButtonAnimation = ({ expanded, initialRendering }) => {\n//   if (!initialRendering) {\n//     return keyframes`\n//   from {\n//     transform: rotate(${expanded ? -180 : 0}deg);\n//   }\n//   to {\n//     transform: rotate(${expanded ? 0 : 180}deg);\n//\n//   }\n// `;\n//   }\n//   if (initialRendering) {\n//     return keyframes`\n//   from {\n//     transform: rotate(0deg);\n//   }\n//   to {\n//     transform: rotate(0deg);\n//\n//   }\n// `;\n//   }\n// };\n//\n// const ButtonContainer = styled.div`\n//   animation-name: ${expandButtonAnimation};\n//   animation-duration: 1000ms;\n//   transform: rotate(${props => (props.expanded ? 0 : 180)}deg);\n// `;\n\nconst expandContentContainerAnimation = ({ expanded, width }) => {\n  return keyframes`\n  from {\n    right: ${expanded ? -(width - 10) : 8}px;\n  }\n  to {\n    right: ${expanded ? 8 : -(width - 10)}px;\n   \n  }\n`;\n};\n\nconst ContentContainer = styled.aside`\n  animation-name: ${expandContentContainerAnimation};\n  animation-duration: 400ms;\n  right: ${props => (props.expanded ? 8 : -(props.width - 10))}px;\n`;\n\nexport default class RightSideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      minHeight: 200,\n      title: props.title,\n      initialRendering: true\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.overflowX = \"hidden\";\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevState.expanded !== this.state.expanded) {\n      this.setState({ initialRendering: false });\n    }\n\n    // check required height TODO\n    this.props.heightUpdateEvent();\n  };\n\n  componentWillUnmount() {\n    document.body.style.overflowX = \"auto\";\n  }\n\n  collapseSidebar = () => {\n    this.props.updateEvent(!this.state.expanded);\n    this.setState({ expanded: !this.state.expanded });\n  };\n\n  render() {\n    return (\n      <ContentContainer\n        id=\"RightSidebarContainer\"\n        expanded={this.state.expanded}\n        width={this.props.width}\n        initialRendering={this.state.initialRendering}\n        style={{\n          width: this.props.width,\n          position: \"absolute\",\n          height: window.innerHeight - 40,\n          display: \"none\"\n        }}\n      >\n        <Container\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderBottomRightRadius: \"0\",\n            borderBottomLeftRadius: \"0\",\n            height: \"40px\",\n            marginLeft: \"5px\",\n            color: \"white\",\n            backgroundColor: \"#ad2f38\"\n          }}\n        >\n          <div style={{ width: this.props.width - 10, textAlign: \"center\" }}>\n            {this.state.title}\n          </div>\n        </Container>\n        {/*<ButtonContainer*/}\n        {/*  size=\"sm\"*/}\n        {/*  expanded={this.state.expanded}*/}\n        {/*  duration={500}*/}\n        {/*  style={{*/}\n        {/*    backgroundColor: \"#2184cc\",*/}\n        {/*    margin: \"0 0\",*/}\n        {/*    flexGrow: \"1\",*/}\n        {/*    display: \"flex\",*/}\n        {/*    alignSelf: \"center\",*/}\n        {/*    width: \"30px\",*/}\n        {/*    height: \"30px\",*/}\n        {/*    borderRadius: \"30px\",*/}\n        {/*    padding: 0,*/}\n        {/*    border: \"solid 1px\",*/}\n        {/*    borderColor: \"#383838\",*/}\n        {/*    float: \"left\",*/}\n        {/*    position: \"relative\",*/}\n        {/*    top: \"-15px\",*/}\n        {/*    left: \"-8px\",*/}\n        {/*    zIndex: 100*/}\n        {/*  }}*/}\n        {/*  onClick={this.collapseSidebar}*/}\n        {/*>*/}\n        {/*  <Icon*/}\n        {/*    icon={faAngleLeft}*/}\n        {/*    rotation={180}*/}\n        {/*    className=\"align-self-center\"*/}\n        {/*    style={{ marginLeft: \"7px\", fontSize: \"28px\", color: \"white\" }}*/}\n        {/*  />*/}\n        {/*</ButtonContainer>*/}\n        <Container\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderTopRightRadius: \"0\",\n            borderTopLeftRadius: \"0\",\n            marginLeft: \"5px\",\n            color: \"black\",\n            backgroundColor: \"#ffffff\",\n            marginTop: \"-1px\",\n            height: \"90%\",\n            position: \"relative\"\n            // zIndex: -500\n          }}\n        >\n          <div style={{ width: this.props.width - 10, textAlign: \"center\" }}>\n            RightSide\n          </div>\n        </Container>\n      </ContentContainer>\n    );\n  }\n}\n\nRightSideBar.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  updateEvent: PropTypes.func.isRequired,\n  heightUpdateEvent: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired\n};\n","import JSZip from \"jszip\";\nimport JSZipUtils from \"jszip-utils\";\nimport * as Bundle from \"../demoBundle.zip\";\n\nimport * as fileSaver from \"file-saver\";\n\nexport default class createZipBundle {\n  constructor(param) {\n    this.componentDefinitions = param;\n  }\n  execute = () => {\n    console.log(\"Creating zip file \");\n    console.log(\"Has param\", this.componentDefinitions);\n    const that = this;\n    JSZipUtils.getBinaryContent(Bundle, function(err, data) {\n      if (err) {\n        throw err; // or handle err\n      }\n      JSZip.loadAsync(data).then(function(zip) {\n        // create import definitions for the pipeline;\n\n        const imports = [];\n        const components = [];\n\n        // define the imports for  the correct data handler and parser\n        if (that.componentDefinitions.selectedDataSource === \"Ontology File\") {\n          imports.push(\n            'import StaticLocalVowlJSONLoader from \"./Implementation/DataAccessComponent/StaticLocalVowlJSONLoader\"; '\n          );\n          imports.push(\n            'import VOWLParser from \"./Implementation/Parsers/VOWLParser\";'\n          );\n          components.push(\"const loader = new StaticLocalVowlJSONLoader()\");\n          components.push(\"const parser = new VOWLParser()\");\n        }\n        if (that.componentDefinitions.selectedDataSource === \"DBPedia\") {\n          imports.push(\n            'import DBPediaLoader from \"./Implementation/DataAccessComponent/DBPediaLoader\";'\n          );\n          imports.push(\n            'import SparqlParser from \"./Implementation/Parsers/SparqlParser\";'\n          );\n\n          components.push(\"const loader = new DBPediaLoader()\");\n          components.push(\"const parser = new SparqlParser()\");\n        }\n        if (that.componentDefinitions.selectedDataSource === \"WikiData\") {\n          // import WikiDataLoader from \"./Implementation/DataAccessComponent/WikiDataLoader\";\n          // import WikiDataExampleParser from \"./Implementation/Parsers/WikiDataParserExample\";\n          imports.push(\n            'import WikiDataLoader from \"./Implementation/DataAccessComponent/WikiDataLoader\";'\n          );\n          imports.push(\n            'import WikiDataExampleParser from \"./Implementation/Parsers/WikiDataParserExample\";'\n          );\n          components.push(\"const loader = new WikiDataLoader()\");\n          components.push(\"const parser = new WikiDataExampleParser()\");\n        }\n        if (that.componentDefinitions.selectedDataSource === \"ORKG\") {\n          imports.push(\n            'import OrkgDataLoader from \"./Implementation/DataAccessComponent/OrkgDataLoader\";'\n          );\n          imports.push(\n            'import ORKGParser from \"./Implementation/Parsers/ORKGParser\";'\n          );\n          components.push(\"const loader = new OrkgDataLoader()\");\n          components.push(\"const parser = new ORKGParser()\");\n        }\n\n        // define the imports for  the correct vertex edge mapper // here default\n        imports.push(\n          'import BaseVertexEdgeMapper from \"./Implementation/Mappers/BaseVertexEdgeMapper\";'\n        );\n\n        components.push(\"const mapper1 = new BaseVertexEdgeMapper()\");\n        // define the imports for  the correct node-link mapper // here default\n\n        if (\n          that.componentDefinitions.selectedNodeLinkMapper === \"Basic Mapper\"\n        ) {\n          imports.push(\n            'import BaseNodeLinkMapper from \"./Implementation/Mappers/BaseNodeLinkMapper\";'\n          );\n          components.push(\"const mapper2 = new BaseNodeLinkMapper()\");\n        }\n        if (that.componentDefinitions.selectedNodeLinkMapper === \"VOWL\") {\n          imports.push(\n            'import VowlNodeLinkMapper from \"./Implementation/Mappers/VowlNodeLinkMapper\";'\n          );\n          components.push(\"const mapper2 = new VowlNodeLinkMapper()\");\n        }\n        if (that.componentDefinitions.selectedNodeLinkMapper === \"RDF\") {\n          imports.push(\n            'import RDFNodeLinkMapper from \"./Implementation/Mappers/RDFNodeLinkMapper\";'\n          );\n          components.push(\"const mapper2 = new RDFNodeLinkMapper()\");\n        }\n        if (that.componentDefinitions.selectedNodeLinkMapper === \"UML\") {\n          imports.push(\n            'import UMLNodeLinkMapper from \"./Implementation/Mappers/UMLNodeLinkMapper\";'\n          );\n          components.push(\"const mapper2 = new UMLNodeLinkMapper()\");\n        }\n\n        // rendering module imports;\n        if (\n          that.componentDefinitions.renderingModuleConfig.configSelected ===\n          \"ORKG\"\n        ) {\n          imports.push(\n            'import OrkgGraph from \"./Implementation/Renderes/gizmoRenderer/orkgGraph\";'\n          );\n          components.push(\"const graph = new OrkgGraph()\");\n        } else {\n          imports.push(\n            'import VOWLRenderer from \"./Implementation/Renderes/gizmoRenderer/vowlGraph\";'\n          );\n          components.push(\"const graph = new VOWLRenderer()\");\n        }\n\n        //\n        // rendering handlers;\n        if (\n          that.componentDefinitions.renderingModuleConfig.configSelected ===\n          \"Default\"\n        ) {\n          imports.push(\n            'import BasicRenderingHandler from \"./Implementation/Renderes/gizmoRenderer/renderingConfigs/BasicRenderingHandler\";'\n          );\n          components.push(\n            \"const renderingConfig = new BasicRenderingHandler()\"\n          );\n        }\n        // rendering handlers;\n        if (\n          that.componentDefinitions.renderingModuleConfig.configSelected ===\n          \"VOWL\"\n        ) {\n          imports.push(\n            'import VOWLRenderingHandler from \"./Implementation/Renderes/gizmoRenderer/renderingConfigs/VOWLRenderingHandler\";'\n          );\n          components.push(\"const renderingConfig = new VOWLRenderingHandler()\");\n        }\n        if (\n          that.componentDefinitions.renderingModuleConfig.configSelected ===\n          \"RDF\"\n        ) {\n          imports.push(\n            'import RDFStyledRenderingHandler from \"./Implementation/Renderes/gizmoRenderer/renderingConfigs/RDFStyledRenderingHandler\";'\n          );\n          components.push(\n            \"const renderingConfig = new RDFStyledRenderingHandler()\"\n          );\n        }\n        if (\n          that.componentDefinitions.renderingModuleConfig.configSelected ===\n          \"UML\"\n        ) {\n          imports.push(\n            'import UMLStyledRenderingHandler from \"./Implementation/Renderes/gizmoRenderer/renderingConfigs/UMLStyledRenderingHandler\";'\n          );\n          components.push(\n            \"const renderingConfig = new UMLStyledRenderingHandler()\"\n          );\n        }\n\n        // console.log(imports);\n        // console.log(components);\n\n        const renderingConfig = that.componentDefinitions.renderingModuleConfig;\n\n        let execFunctionDef = \"\\n\\n\";\n        execFunctionDef +=\n          \"export default class Pipeline {\\n\\n\" +\n          \"executePipeline = () => {\\n\" +\n          ' console.log(\"Executing pipeline\");\\n';\n\n        // create the components from the components;\n\n        components.forEach(item => {\n          execFunctionDef += \"  \" + item + \"\\n\";\n        });\n\n        execFunctionDef += \"\\n\\n\";\n        execFunctionDef += \"graph.setRenderingConfig(renderingConfig);\\n\";\n\n        execFunctionDef +=\n          \"const config=\" +\n          JSON.stringify(renderingConfig, null, \"\\t\") +\n          \";\\n\";\n\n        execFunctionDef +=\n          'graph.setRenderingContainer(\"renderingContainer\");\\n' +\n          \"graph.configureGraphInteractions(config);\\n\";\n        // exec the pipeline;\n\n        execFunctionDef +=\n          \"  loader.execute().then(() => {\\n\" +\n          \"    parser.setInputData(loader.getResult());\\n\" +\n          \"    parser.execute().then(() => {});\\n\\n\" +\n          \"    mapper1.setInputData(parser.getResult());\\n\" +\n          \"    mapper1.execute().then(() => {\\n\" +\n          \"      mapper2.setInputData(mapper1.getResult());\\n\" +\n          \"      mapper2.execute().then(() => {\\n\" +\n          \"        graph.setModel(mapper2.getResult().resultingModel.getResult());\\n\" +\n          \"        // do the rendering magic\\n\" +\n          \"        graph.initializeRenderingContainer();\\n\" +\n          \"        graph.createRenderingElements();\\n\" +\n          \"        graph.drawRenderingPrimitives();\\n\" +\n          \"      });\\n\" +\n          \"    });\\n\" +\n          \"  });\\n\" +\n          \"}\";\n\n        execFunctionDef += \"};\";\n\n        let importDefs = \"\";\n        imports.forEach(im => {\n          importDefs += im + \"\\n\";\n        });\n\n        // console.log(importDefs);\n        // console.log(execFunctionDef);\n\n        // overwrite the pipeline.js file in the zip;\n        zip.file(\"src/pipeline.js\", importDefs + execFunctionDef);\n\n        // zip\n        //   .file(\"src/pipeline.js\")\n        //   .async(\"string\")\n        //   .then(function(data) {\n        //\n        //   });\n        // zip.generateAsync({ type: \"base64\" }).then(function(base64) {\n        //   window.location = \"data:application/zip;base64,\" + base64;\n        // });\n\n        zip.generateAsync({ type: \"blob\" }).then(function(blob) {\n          // 1) generate the zip file\n          fileSaver(blob, \"donatello-demo-pipeline.zip\");\n        });\n      });\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as PropTypes from \"prop-types\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\n\nclass VisModal extends Component {\n  state = {\n    windowHeight: 0\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = () => {};\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  updateDimensions = () => {\n    const offset = 28 * 2 + 65;\n    this.setState({ windowHeight: window.innerHeight - offset });\n  };\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.showDialog}\n        toggle={this.props.toggle}\n        size=\"lg\"\n        onOpened={() => {}}\n        style={{ maxWidth: \"90%\", marginBottom: 0 }}\n      >\n        <ModalHeader toggle={this.props.toggle}>\n          <div className=\"d-flex\" style={{ height: \"40px\" }}>\n            <div style={{ width: \"100%\", height: \"40px\", paddingTop: \"5px\" }}>\n              {this.props.title}\n            </div>\n          </div>\n        </ModalHeader>\n        <ModalBody\n          style={{\n            padding: \"0\",\n            minHeight: \"100px\",\n            height: this.state.windowHeight,\n            overflow: \"auto\"\n          }}\n        >\n          {this.props.children}\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nVisModal.propTypes = {\n  showDialog: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any\n};\n\nconst mapStateToProps = state => ({\n  store: state.store\n});\n\nexport default connect(mapStateToProps)(VisModal);\n","import * as $CONST from \"./BaseComponentConstants\";\n\nexport default class BaseComponent {\n  constructor() {\n    this.type = $CONST.TYPE_ABSTRACT_BASE_COMPONENT;\n    this.inputDataAsJsonObject = null;\n    this.resultObject = {};\n  }\n\n  /** -------------- EXPOSED FUNCTIONS -------------- DO NOT OVERWRITE **/\n  getResult = () => {\n    return this.resultObject;\n  };\n\n  setInputData = inputDataAsJsonObject => {\n    this.inputDataAsJsonObject = inputDataAsJsonObject;\n  };\n\n  execute = async () => {\n    if (!this.inputDataAsJsonObject) {\n      console.log(\"No JSON object given as data input \");\n      return;\n    }\n\n    await this.__run__();\n    this._postRun_();\n  };\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = () => {};\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n  _postRun_ = () => {\n    // Options do define post execution functions,\n  };\n}\n","export const TYPE_ABSTRACT_BASE_COMPONENT = \"TYPE_ABSTRACT_BASE_COMPONENT\";\n\n// DATA Access Handler\nexport const TYPE_VOWL_STATIC_LOCAL = \"TYPE_VOWL_STATIC_LOCAL\";\nexport const TYPE_DBPEDIA_PROXY = \"TYPE_DBPEDIA_PROXY\";\n\n// PARSERS\nexport const TYPE_VOWL_PARSER = \"TYPE_VOWL_PARSER\";\nexport const TYPE_SPARQL_PARSER = \"TYPE_SPARQL_PARSER\";\nexport const TYPE_REL_FINDER_DAH = \"TYPE_REL_FINDER_DAH\";\nexport const TYPE_SIMPLE_PROXY = \"TYPE_SIMPLE_PROXY\";\nexport const TYPE_SIMPLE_DIRECT_LOADER = \"TYPE_SIMPLE_DIRECT_LOADER\";\n\n// MODEL MODELS\nexport const TYPE_ABSTRACT_MODEL = \"TYPE_ABSTRACT_MODEL\";\nexport const TYPE_RESOURCE_RELATION_MODEL = \"TYPE_RESOURCE_RELATION_MODEL\";\nexport const TYPE_VERTEX_EDGE_MODEL = \"TYPE_VERTEX_EDGE_MODEL\";\nexport const TYPE_NODE_LINK_MODEL = \"TYPE_NODE_LINK_MODEL\";\n\n// // MAPPERS\nexport const TYPE_VERTEX_EDGE_MAPPER = \"TYPE_VERTEX_EDGE_MAPPER\";\nexport const TYPE_NODE_LINK_MAPPER = \"TYPE_NODE_LINK_MAPPER\";\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport * as ontologyFile from \"../../demoRequests/ontologyFile\";\nimport BaseComponent from \"../Base/BaseComponent\";\n\nexport default class StaticLocalVowlJSONLoader extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VOWL_STATIC_LOCAL;\n  }\n\n  execute = async () => {\n    await this.__run__();\n  };\n\n  getResult = () => {\n    return this.dataHandlerObject.theData;\n  };\n\n  __run__ = async () => {\n    if (!this.dataHandlerObject) {\n      this.dataHandlerObject = {};\n    }\n    this.dataHandlerObject.theData = JSON.parse(\n      JSON.stringify(ontologyFile.default)\n    );\n  };\n}\n","import * as $CONST from \"./BaseComponentConstants\";\n\nexport default class BaseModel {\n  constructor() {\n    this.type = $CONST.TYPE_ABSTRACT_MODEL; // default type;\n    this.modelAsJsonObject = null;\n    this.__resourceIdentifier = \"baseModelResourceIdentifier\"; //MUST CHANGE in derived models\n  }\n\n  /** -------------- EXPOSED FUNCTIONS -------------- DO NOT OVERWRITE **/\n  getResult = () => {\n    return this.modelAsJsonObject;\n  };\n\n  getResourceIdentifier = () => {\n    return this.__resourceIdentifier;\n  };\n\n  setResourceIdentifier = id => {\n    // this specifies the property name in the object  to which we look up in the map ;\n    this.__resourceIdentifier = id;\n  };\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __isInMap__ = (map, identifier) => {\n    return true; // if is in map (per default this blocks to add items to model)!\n  };\n\n  __resourceIdentifier__ = resourceObject => {\n    // returns a string for resourceIdentifier, should be unique;\n  };\n\n  __isEqual__ = (a, b) => {\n    // input a and b are objects with properties where some are maybe equal\n    return false;\n  };\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseModel from \"../Base/BaseModel\";\n\nexport default class ResourceRelationModel extends BaseModel {\n  constructor() {\n    super();\n\n    this.type = $CONST.TYPE_RESOURCE_RELATION_MODEL; // default type;\n\n    // initialize the model with array of resources and relations;\n    this.modelAsJsonObject = { resources: [], relations: [] };\n\n    // create mappers for resources and relations;\n    this.resourceMap = {};\n    this.relationMap = {};\n\n    this.__resourceIdentifier = \"__resourceIdentifier\"; // default, assume forced ids from outside;\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __isInMap__ = (map, identifier) => {\n    if (!identifier) {\n      console.error(\n        \"No Identifier Found in resource! give it unique ids as properties and set the resourceIdentifier name (setResourceIdentifier('ID'))\"\n      );\n    } else {\n      return !!map[identifier];\n    }\n\n    return true; // if is in map (per default this blocks to add items to model)!\n  };\n\n  __isEqual__ = (a, b) => {\n    // input a and b are objects with properties where some are maybe equal\n    return false;\n  };\n\n  __resourceIdentifier__ = resourceObject => {\n    return resourceObject[this.__resourceIdentifier];\n  };\n\n  /** -------------- Exposed Functions --------------**/\n\n  addResource = resource => {\n    if (\n      !this.__isInMap__(this.resourceMap, this.__resourceIdentifier__(resource))\n    ) {\n      this.__integrateResourceItem(\n        this.modelAsJsonObject.resources,\n        this.resourceMap,\n        resource\n      );\n    } else {\n      // Has seen this resource >>> Merge <<<;\n      this.__mergeItem(\n        this.resourceMap[this.__resourceIdentifier__(resource)],\n        resource\n      );\n    }\n  };\n\n  __mergeItem = (r1, r2) => {\n    // r1 is our target resource where we append stuff to it\n    r1.integrateResource(r2);\n  };\n\n  __integrateResourceItem = (target, map, resource) => {\n    target.push(resource);\n    map[this.__resourceIdentifier__(resource)] = resource;\n  };\n\n  addRelation = relation => {\n    if (\n      !this.__isInMap__(this.relationMap, this.__resourceIdentifier__(relation))\n    ) {\n      this.__integrateResourceItem(\n        this.modelAsJsonObject.relations,\n        this.relationMap,\n        relation\n      );\n    } else {\n      // Has seen this relation >>> Merge <<<;\n\n      this.__mergeItem(\n        this.relationMap[this.__resourceIdentifier__(relation)],\n        relation\n      );\n    }\n  };\n}\n","export const validIRI = str => {\n  const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return urlregex.test(str);\n};\n\nexport const get = url => {\n  return new Promise((fulfil, reject) => {\n    const mimeType = \"application/json\";\n    const xhr = new XMLHttpRequest();\n\n    xhr.overrideMimeType(mimeType);\n\n    xhr.onerror = reject;\n    xhr.onload = () => fulfil(xhr.responseText);\n    xhr.open(\"GET\", url);\n\n    xhr.send();\n  });\n};\n","import { validIRI } from \"../../Implementation/Base/globalHelper\";\n\nexport default class Resource {\n  constructor() {\n    this._resourceURI = undefined;\n    this._semanticType = [];\n    this._annotations = {};\n    this._axioms = {};\n    this.__resourceIdentifier = undefined;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\"\n    };\n  }\n\n  resourceIdentifier(val) {\n    if (!arguments.length) {\n      return this.__resourceIdentifier;\n    }\n    this.__resourceIdentifier = val;\n  }\n\n  addSemanticType(t) {\n    if (this._semanticType.indexOf(t) === -1) {\n      this._semanticType.push(t);\n    }\n  }\n\n  addAnnotation = (name, value, lang) => {\n    // annotations are literals with optional language tags;\n\n    let inputName = name;\n    if (validIRI(name)) {\n      let suffix = name.split(\"#\")[1];\n      let pref = \"\";\n      if (!suffix) {\n        const tokens = name.split(\"/\");\n        suffix = tokens[tokens.length - 1];\n        for (let i = 0; i < tokens.length - 1; i++) {\n          pref += tokens[i];\n        }\n        pref += \"/\";\n      } else {\n        pref = name.split(\"#\")[0];\n        pref += \"#\";\n      }\n\n      const prName = this.prefixMapperL2S[pref];\n      if (prName) {\n        inputName = prName + \":\" + suffix;\n      }\n    }\n    if (!this._annotations[inputName]) {\n      this._annotations[inputName] = {};\n    }\n\n    let languageSelector = \"default\";\n    if (lang && lang !== \"undefined\") {\n      languageSelector = lang;\n    }\n    const tm = this._annotations[inputName];\n    if (!tm[languageSelector]) {\n      tm[languageSelector] = []; // array of strings for given language\n    }\n    tm[languageSelector].push(value);\n  };\n\n  addAxiom(subject, axiom, object) {\n    // subject for now ignored;\n    if (!this._axioms.hasOwnProperty(axiom)) {\n      this._axioms[axiom] = [];\n    }\n    this._axioms[axiom].push(object);\n  }\n\n  integrateResource(src) {\n    // adds stuff to this resource;\n    // semantic type?\n    src._semanticType.forEach(t => {\n      this.addSemanticType(t); // no need for checking, it is done in the function itself;\n    });\n    // annotations is an object;\n    for (const name in src._annotations) {\n      if (src._annotations.hasOwnProperty(name)) {\n        const annoType = src._annotations[name];\n        // check if this name exist in this ;\n        if (!this._annotations[name]) {\n          this._annotations[name] = {};\n        }\n        //\n        for (const langType in annoType) {\n          if (annoType.hasOwnProperty(langType)) {\n            // check if this object has it;\n            const value = annoType[langType]; // value is an array\n            const tm = this._annotations[name];\n            if (!tm[langType]) {\n              tm[langType] = []; // array of strings for given language\n            }\n            value.forEach(str => {\n              if (tm[langType].indexOf(str) === -1) {\n                tm[langType].push(str);\n              }\n            });\n          }\n        }\n      }\n    }\n\n    // check for axioms merging\n    for (const name in src._axioms) {\n      if (src._axioms.hasOwnProperty(name)) {\n        if (!this._axioms[name]) {\n          this._axioms[name] = [];\n        }\n        // get array of axioms holders;\n        const axAr = src._axioms[name];\n        axAr.forEach(ax => {\n          // check if exists;\n          if (this._axioms[name].indexOf(ax) === -1) {\n            this._axioms[name].push(ax);\n          }\n        });\n      }\n    }\n  }\n}\n","import Resource from \"./Resource\";\n\nexport default class Relation extends Resource {\n  constructor() {\n    super();\n\n    this.domains = [];\n    this.ranges = [];\n    this.domainRangePairs = [];\n  }\n\n  addRange(r) {\n    if (this.ranges.indexOf(r) === -1) {\n      this.ranges.push(r);\n    }\n  }\n\n  addDomain(d) {\n    this.domains.push(d);\n  }\n\n  addDomainRangePair(d, r) {\n    this.domainRangePairs.push({ domain: d, range: r });\n  }\n\n  integrateResource(src) {\n    super.integrateResource(src);\n\n    src.domains.forEach(dom => {\n      if (this.domains.indexOf(dom) === -1) {\n        this.domains.push(dom);\n      }\n    });\n    src.ranges.forEach(ran => {\n      if (this.ranges.indexOf(ran) === -1) {\n        this.ranges.push(ran);\n      }\n    });\n\n    src.domainRangePairs.forEach(pair => {\n      this.domainRangePairs.push(pair);\n    });\n  }\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseComponent from \"../Base/BaseComponent\";\n\nimport ResourceRelationModel from \"../Models/ResourceRelationModel\";\nimport Resource from \"../Models/Resource\";\nimport Relation from \"../Models/Relation\";\n\nexport default class VOWLParser extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VOWL_PARSER;\n    this.resultingModelObject = null;\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    const m = new ResourceRelationModel();\n    const processedData = this._preProcess();\n    this._processData(m, processedData);\n  };\n\n  _processData(model, dataObject) {\n    this.__processResources(model, dataObject);\n    this.__processRelations(model, dataObject);\n    this.resultObject.resultingModel = model;\n  }\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n  __processLabels(resource, modelResource) {\n    // unroll the labels as rdfs:labels;\n    if (resource.label) {\n      // label can be an object or a string?\n      if (typeof resource.label === \"string\") {\n        modelResource.addAnnotation(\"rdfs:label\", resource.label);\n      } else {\n        for (const name in resource.label) {\n          if (resource.label.hasOwnProperty(name)) {\n            if (name !== \"IRI-based\") {\n              modelResource.addAnnotation(\n                \"rdfs:label\",\n                resource.label[name],\n                name\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  __processComments(resource, modelResource) {\n    if (resource.comment) {\n      // label can be an object or a string?\n      if (typeof resource.comment === \"string\") {\n        modelResource.addAnnotation(\"rdfs:comment\", resource.comment);\n      } else {\n        for (const name in resource.comment) {\n          if (resource.comment.hasOwnProperty(name)) {\n            if (name !== \"IRI-based\") {\n              modelResource.addAnnotation(\n                \"rdfs:comment\",\n                resource.comment[name],\n                name\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  __processResourceAxioms(resource, modelResource) {\n    if (resource.equivalent) {\n      resource.equivalent.forEach(eq => {\n        modelResource.addAxiom(modelResource, \"owl:equivalentClass\", eq);\n      });\n    }\n    if (resource.superClasses) {\n      resource.superClasses.forEach(sc => {\n        modelResource.addAxiom(modelResource, \"rdfs:subClassOf\", sc);\n      });\n    }\n  }\n\n  __processRelationAxioms(relation, modelResource) {\n    //  ignore for now;\n  }\n\n  __processRelationAttributes(relation, modelRelation) {\n    // vowl has max one domain and one range ( if not given it will be owl:THING in VOWL )\n    if (relation.domain) {\n      modelRelation.addDomain(relation.domain);\n    }\n    if (relation.range) {\n      modelRelation.addRange(relation.range);\n    }\n\n    if (relation.domain && relation.range) {\n      modelRelation.addDomainRangePair(relation.domain, relation.range);\n    }\n  }\n\n  __processResources(model, dataObject) {\n    dataObject.resources.forEach(resource => {\n      // if there is no IRI FOR THIS ONE check the type of VOWL;\n      if (!resource.iri) {\n        resource.__resourceIdentifier = resource.type; // kindOF processing type as IRI (e.g. OWL:THING or so)\n      } else {\n        resource.__resourceIdentifier = resource.iri;\n      }\n\n      const modelResource = new Resource();\n      // fetch info from it;\n      modelResource.resourceIdentifier(resource.__resourceIdentifier);\n      modelResource._resourceURI = resource.iri;\n      modelResource.addSemanticType(resource.type);\n\n      this.__processLabels(resource, modelResource);\n      this.__processComments(resource, modelResource);\n      this.__processResourceAxioms(resource, modelResource);\n      model.addResource(modelResource);\n    });\n  }\n\n  __processRelations(model, dataObject) {\n    dataObject.relations.forEach(relation => {\n      if (!relation.iri) {\n        relation.__resourceIdentifier = relation.type; // kindOF processing type as IRI (e.g. OWL:THING or so)\n      } else {\n        relation.__resourceIdentifier = relation.iri;\n      }\n\n      // VOWL provides axioms directly as relations, here ignore.\n      if (relation.type === \"rdfs:SubClassOf\") {\n        return;\n      }\n\n      const modelRelation = new Relation();\n      // fetch info from it;\n      modelRelation.resourceIdentifier(relation.__resourceIdentifier);\n      modelRelation._resourceURI = relation.iri;\n      modelRelation.addSemanticType(relation.type);\n\n      this.__processLabels(relation, modelRelation);\n      this.__processComments(relation, modelRelation);\n      this.__processRelationAxioms(relation, modelRelation);\n      this.__processRelationAttributes(relation, modelRelation);\n\n      model.addRelation(modelRelation);\n    });\n  }\n  _preProcess = () => {\n    // we merge the vowl json data ;\n    const classArray = this.inputDataAsJsonObject.class;\n    const propArray = this.inputDataAsJsonObject.property;\n\n    // how to merge that;\n    let resourceMap = new Map(classArray.map(d => [d.id, d]));\n    let relationMap = new Map(propArray.map(d => [d.id, d]));\n\n    const cAttr = this.inputDataAsJsonObject.classAttribute;\n    const pAttr = this.inputDataAsJsonObject.propertyAttribute;\n\n    cAttr.forEach(item => {\n      item.type = resourceMap.get(item.id).type;\n    });\n\n    // now use the new attributes array as map input\n    resourceMap = new Map(cAttr.map(d => [d.id, d]));\n\n    cAttr.forEach(item => {\n      if (item.superClasses) {\n        for (let i = 0; i < item.superClasses.length; i++) {\n          item.superClasses[i] = resourceMap.get(item.superClasses[i]).iri;\n        }\n      }\n      if (item.equivalent) {\n        for (let i = 0; i < item.equivalent.length; i++) {\n          item.equivalent[i] = resourceMap.get(item.equivalent[i]).iri;\n        }\n      }\n    });\n\n    pAttr.forEach(item => {\n      item.type = relationMap.get(item.id).type;\n      if (item.domain) {\n        // overwrite it to be an uri;\n        item.domain = resourceMap.get(item.domain).iri;\n      }\n      if (item.range) {\n        // overwrite it to be an uri;\n        item.range = resourceMap.get(item.range).iri;\n      }\n    });\n\n    // now use the new attributes array as map input\n    relationMap = new Map(pAttr.map(d => [d.id, d]));\n    pAttr.forEach(item => {\n      if (item.subproperty) {\n        for (let i = 0; i < item.subproperty.length; i++) {\n          item.subproperty[i] = relationMap.get(item.subproperty[i]).iri;\n        }\n      }\n      if (item.equivalent) {\n        for (let i = 0; i < item.equivalent.length; i++) {\n          item.equivalent[i] = relationMap.get(item.equivalent[i]).iri;\n        }\n      }\n      if (item.inverse) {\n        item.inverse = relationMap.get(item.inverse).iri;\n      }\n    });\n    return { resources: cAttr, relations: pAttr };\n  };\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseComponent from \"../Base/BaseComponent\";\n\nimport ResourceRelationModel from \"../Models/ResourceRelationModel\";\nimport Resource from \"../Models/Resource\";\nimport Relation from \"../Models/Relation\";\n\nexport default class SparqlParser extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_SPARQL_PARSER;\n\n    this.definitionMap = {\n      // assertions\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": \"assertion\",\n      \"rdf:type\": \"assertion\",\n      //axioms\n      \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": \"axiom\",\n      \"http://www.w3.org/2000/01/rdf-schema#subPropertyOf\": \"axiom\",\n      \"http://www.w3.org/2002/07/owl#equivalentClass\": \"axiom\",\n\n      // annotations\n      \"http://www.w3.org/2000/01/rdf-schema#comment\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#label\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": \"annotation\",\n\n      // relational assertions:\n      \"owl:ObjectProperty\": \"relationalAssertion\",\n      \"owl:DatatypeProperty\": \"relationalAssertion\"\n    };\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    const m = new ResourceRelationModel();\n    const processedData = this._preProcess();\n    this._processData(m, processedData);\n  };\n\n  _processData(model, dataObject) {\n    dataObject.forEach((statement, index) => {\n      const subject = statement.subject;\n      const predicate = statement.predicate;\n      const object = statement.object;\n\n      // needs to be processed as a whole triple\n      // subject resource\n      const subjectResource = new Resource();\n      const propertyRelation = new Relation();\n      const objectResource = new Resource();\n\n      // handling the identifier;\n      subjectResource.resourceIdentifier(subject.value);\n      if (this.validIRI(subject.value)) {\n        subjectResource._resourceURI = subject.value;\n      }\n\n      propertyRelation.resourceIdentifier(predicate.value);\n      if (this.validIRI(predicate.value)) {\n        propertyRelation._resourceURI = predicate.value;\n      }\n\n      objectResource.resourceIdentifier(object.value);\n      if (this.validIRI(object.value)) {\n        objectResource._resourceURI = object.value;\n      }\n      if (object.type === \"literal\") {\n        objectResource.addSemanticType(\"Literal\");\n      }\n\n      let ignoreSubjectResource = false;\n      let ignoreObjectResource = false;\n      let ignorePropertyRelation = false;\n\n      if (this.definitionMap[predicate.value] === \"assertion\") {\n        if (this.definitionMap[object.value] !== \"relationalAssertion\") {\n          subjectResource.addSemanticType(object.value);\n        } else {\n          console.log(\"TODO: add sematic type to the relation\");\n          // this holds only when we sparql an ontology with some defs;\n          //add this to the relation\n          ignorePropertyRelation = false;\n        }\n        // there can not be more data fro this triple;\n\n        model.addResource(subjectResource);\n        return;\n      }\n\n      /** axioms **/\n      switch (this.definitionMap[predicate.value]) {\n        case \"axiom\":\n          subjectResource.addAxiom(\n            subject.value,\n            predicate.value,\n            object.value\n          );\n          ignoreObjectResource = true;\n          break;\n        case \"annotation\":\n          if (object[\"xml:lang\"]) {\n            subjectResource.addAnnotation(\n              predicate.value,\n              object.value,\n              object[\"xml:lang\"]\n            );\n          } else {\n            subjectResource.addAnnotation(predicate.value, object.value);\n          }\n\n          ignoreObjectResource = true;\n          ignorePropertyRelation = true;\n          break;\n        default:\n          propertyRelation.addDomain(subject.value);\n          propertyRelation.addRange(object.value);\n          propertyRelation.addDomainRangePair(subject.value, object.value);\n\n          ignoreObjectResource = true;\n          ignoreSubjectResource = true;\n      }\n\n      if (!ignoreSubjectResource) {\n        model.addResource(subjectResource);\n      }\n      if (!ignorePropertyRelation) {\n        model.addRelation(propertyRelation);\n      }\n      if (!ignoreObjectResource) {\n        model.addResource(objectResource);\n      }\n    });\n    this.resultObject.resultingModel = model;\n  }\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n\n  _preProcess = () => {\n    console.log(\"SPARQL PARSER PREPROCESS\", this.inputDataAsJsonObject);\n\n    const output = []; // array holding the statements;\n    const input = this.inputDataAsJsonObject;\n    // assumptions;\n    // we always have a head and a results object\n\n    const binds = input.results.bindings;\n    const labels = input.head.vars;\n\n    binds.forEach(res => {\n      // create statements:\n      const aStatement = {};\n      // initialize attributes;\n      labels.forEach(label => {\n        aStatement[label] = res[label];\n      });\n\n      output.push(aStatement);\n    });\n\n    this.allStatements = [].concat(this.allStatements, output);\n    return output; // this can be useful for batch processing;\n  };\n\n  validIRI(str) {\n    const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n    return urlregex.test(str);\n  }\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseModel from \"../Base/BaseModel\";\n\nexport default class VertexEdgeModel extends BaseModel {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MODEL; // default type;\n\n    // initialize the model with array of resources and relations;\n    this.modelAsJsonObject = { vertices: [], edges: [] };\n\n    // create mappers for resources and relations;\n    this.vertexeMap = {};\n    this.edgeMap = {};\n\n    this.__resourceIdentifier = \"__vertexEdgeIdentifier\"; // default, assume forced ids from outside;\n  }\n\n  vertexInMap(name) {\n    // this is for axioms checking;\n    return this.__isInMap__(this.vertexeMap, name);\n  }\n\n  getVertexFromName(name) {\n    return this.vertexeMap[name];\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __isInMap__ = (map, identifier) => {\n    if (!identifier) {\n      console.error(\n        \"No Identifier Found in resource! give it unique ids as properties and set the resourceIdentifier name (setResourceIdentifier('ID'))\"\n      );\n    } else {\n      return !!map[identifier];\n    }\n\n    return true; // if is in map (per default this blocks to add items to model)!\n  };\n\n  __resourceIdentifier__ = resourceObject => {\n    return resourceObject[this.__resourceIdentifier];\n  };\n\n  /** -------------- Exposed Functions --------------**/\n\n  addVertex = vertex => {\n    if (\n      !this.__isInMap__(this.vertexeMap, this.__resourceIdentifier__(vertex))\n    ) {\n      this.__integrateVertexEdgeItem(\n        this.modelAsJsonObject.vertices,\n        this.vertexeMap,\n        vertex\n      );\n    }\n  };\n\n  addEdge = edge => {\n    if (!this.__isInMap__(this.edgeMap, this.__resourceIdentifier__(edge))) {\n      this.__integrateVertexEdgeItem(\n        this.modelAsJsonObject.edges,\n        this.edgeMap,\n        edge\n      );\n    }\n  };\n\n  __integrateVertexEdgeItem = (target, map, resource) => {\n    target.push(resource);\n    map[this.__resourceIdentifier__(resource)] = resource;\n  };\n}\n","export default class Edge {\n  constructor() {\n    this.resourceReference = null;\n  }\n}\n","export default class Vertex {\n  constructor() {\n    this.resourceReference = null;\n    this.__outgoingEdges = [];\n    this.__incomingEdges = [];\n  }\n\n  addOutgoingEdge(edge) {\n    this.__outgoingEdges.push(edge);\n  }\n\n  addIncomingEdge(edge) {\n    this.__incomingEdges.push(edge);\n  }\n}\n","import BaseComponent from \"../Base/BaseComponent\";\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport VertexEdgeModel from \"../Models/VertexEdgeModel\";\nimport Edge from \"../Models/Edge\";\nimport Vertex from \"../Models/Vertex\";\nimport { validIRI } from \"../Base/globalHelper\";\n\nexport default class BaseVertexEdgeMapper extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_RESOURCE_RELATION_MODEL;\n    this.hasCompatibleInput = false;\n\n    // default definition map!\n    this.definitionMap = {\n      // mapping definitions; // defines the mapping from resource to vertex\n      vertexMapper: {\n        __vertexType: \"_semanticType\", // how do we handle multiple vertex type? << we dont node link model does!\n        __vertexEdgeIdentifier: \"__resourceIdentifier\",\n        __displayName: \"_annotations.rdfs:label\" // will fetch the full object with language defs! node link model gets prefLanguage tag\n      },\n\n      edgeMapper: {\n        __edgeType: \"_semanticType\", // how do we handle multiple vertex type? << we dont node link model does!\n        __vertexEdgeIdentifier: \"__resourceIdentifier\",\n        __displayName: \"_annotations.rdfs:label\", // will fetch the full object with language defs! node link model gets prefLanguage tag\n\n        __domainRangePair: \"domainRangePairs\" // just renaming it\n      }\n    };\n  }\n\n  /** -------------- EXPOSED FUNCTIONS -------------- DO NOT OVERWRITE **/\n  setInputData = inputDataAsJsonObject => {\n    this.inputDataAsJsonObject = inputDataAsJsonObject;\n\n    // check if type is compatible;\n    if (this.requestedInputType === inputDataAsJsonObject.resultingModel.type) {\n      this.hasCompatibleInput = true;\n    } else {\n      console.error(\n        \"INPUT MODEL IS OF TYPE \" +\n          inputDataAsJsonObject.resultingModel.type +\n          \"EXPECTED: \" +\n          this.requestedInputType\n      );\n    }\n  };\n\n  __run__ = () => {\n    if (this.hasCompatibleInput) {\n      this.__mapInputModel();\n    } else {\n      console.error(\"CANCELLED!\");\n      this.resultObject.resultingModel = null;\n    }\n  };\n\n  __adjustEdgeDisplayName(relations) {\n    relations.forEach(r => {\n      if (!r.__displayName) {\n        r.__displayName = r.__vertexEdgeIdentifier;\n      }\n    });\n  }\n\n  __mapInputModel = () => {\n    // obtain the data items;\n    const model = this.inputDataAsJsonObject.resultingModel;\n    const modelData = model.getResult();\n\n    const veModel = new VertexEdgeModel();\n    veModel.setResourceIdentifier(\"__vertexEdgeIdentifier\"); // lookup name\n    this.__mapResourcesToVertex(veModel, modelData.resources);\n    this.__mapRelationsToEdge(veModel, modelData.relations);\n    this.__adjustEdgeDisplayName(veModel.modelAsJsonObject.edges);\n\n    this.resultObject.resultingModel = veModel;\n  };\n\n  __mapResourcesToVertex(model, dataArray) {\n    // note no arrow function, otherwise model will not be updated(call by ref)\n    dataArray.forEach(item => {\n      const mappedVertex = this._createVertexFromResource(item);\n      model.addVertex(mappedVertex);\n    });\n\n    // ------------------------AXIOMS HANDLING -----------------------\"\n\n    // get model Vertices;\n    const vertexList = model.modelAsJsonObject.vertices;\n    vertexList.forEach(vertex => {\n      // check if vertex._annotations exists;\n      if (\n        vertex.resourceReference._axioms &&\n        Object.keys(vertex.resourceReference._axioms).length > 0\n      ) {\n        const axiomsArray = vertex.resourceReference._axioms;\n        for (const name in axiomsArray) {\n          if (axiomsArray.hasOwnProperty(name)) {\n            // this a particular axiom;\n            const pAx = axiomsArray[name];\n            pAx.forEach(axiom => {\n              if (!model.vertexInMap(axiom)) {\n                console.error(\n                  \"VERTEX DOES NOT EXIST IN THE MAP: TODO CREATE ONE! \"\n                );\n              }\n              const targetVertex = model.getVertexFromName(axiom);\n              const axiomEdge = this.__createAxiomEdge(\n                vertex,\n                name,\n                targetVertex\n              );\n              model.addEdge(axiomEdge);\n            });\n          }\n        }\n      }\n    });\n  }\n\n  __createAxiomEdge(srcVertex, axiomName, targetVertex) {\n    const anEdge = new Edge();\n    anEdge.resourceReference = axiomName;\n    anEdge.__edgeType = \"axiomEdge\";\n    anEdge.__edgeAxiom = axiomName;\n    anEdge.__vertexEdgeIdentifier =\n      srcVertex.__vertexEdgeIdentifier +\n      \"$$\" +\n      axiomName +\n      \"$$\" +\n      targetVertex.__vertexEdgeIdentifier;\n    anEdge.__displayName = axiomName;\n    anEdge.__source = srcVertex;\n    anEdge.__target = targetVertex;\n\n    srcVertex.addOutgoingEdge(anEdge);\n    targetVertex.addIncomingEdge(anEdge);\n\n    return anEdge;\n  }\n\n  _createVertexFromResource = item => {\n    const aVertex = new Vertex();\n    aVertex.resourceReference = item;\n\n    // create the mappings;\n    const vMapper = this.definitionMap.vertexMapper;\n    for (const name in vMapper) {\n      if (vMapper.hasOwnProperty(name)) {\n        // fetch data;\n        const dataPath = vMapper[name];\n        if (dataPath.indexOf(\".\") !== -1) {\n          // need to perform nested getter;\n          const tokens = dataPath.split(\".\");\n          let dataItem = item;\n          for (let i = 0; i < tokens.length; i++) {\n            dataItem = dataItem[tokens[i]];\n          }\n          aVertex[name] = dataItem;\n        } else {\n          // single data access in item\n          aVertex[name] = item[dataPath];\n        }\n      }\n    }\n    return aVertex;\n  };\n\n  __mapRelationsToEdge(model, dataArray) {\n    // note no arrow function, otherwise model will not be updated(call by ref)\n    dataArray.forEach(item => {\n      const mappedEdge = this._createEdgeFromRelation(item);\n      for (let i = 0; i < mappedEdge.__domainRangePair.length; i++) {\n        const newEdge = this._createEdgeFromRelation(item);\n        const source = newEdge.__domainRangePair[i].domain;\n        const target = newEdge.__domainRangePair[i].range;\n        const src_vertex = model.getVertexFromName(source);\n        const tar_vertex = model.getVertexFromName(target);\n\n        if (src_vertex) {\n          newEdge.__source = src_vertex;\n          src_vertex.addOutgoingEdge(newEdge);\n        } else {\n          // console.warn(\"Could not find source vertex for name \", source);\n        }\n\n        if (tar_vertex) {\n          newEdge.__target = tar_vertex;\n          tar_vertex.addOutgoingEdge(newEdge);\n        } else {\n          if (\n            model.getVertexFromName(\n              newEdge.__vertexEdgeIdentifier + \"$$\" + target\n            )\n          ) {\n            const tempVertex = model.getVertexFromName(\n              newEdge.__vertexEdgeIdentifier + \"$$\" + target\n            );\n            newEdge.__target = tempVertex;\n            tempVertex.addIncomingEdge(mappedEdge);\n          } else {\n            const aVertex = new Vertex();\n            aVertex.resourceReference = target;\n            if (validIRI(target)) {\n              // create the id for this vertex;\n              aVertex.__vertexEdgeIdentifier = target;\n            } else {\n              aVertex.__vertexType = \"Literal\";\n              // its id is the full tripple;\n              aVertex.__vertexEdgeIdentifier =\n                newEdge.__vertexEdgeIdentifier + \"$$\" + target;\n              aVertex.__displayName = target; // this is the literal value of something we have not identified\n            }\n            // we assume that all resources are created (the ones which could be created)\n            // otherwise we point on a literal or a resource that has not been created>> means external resource or\n            // not jet read any information about that;\n            aVertex.addIncomingEdge(newEdge);\n            model.addVertex(aVertex);\n            newEdge.__target = aVertex;\n          }\n        }\n        if (model.edgeMap[newEdge.__vertexEdgeIdentifier]) {\n          const clonedEdge = new Edge();\n          const sourceEdge = model.edgeMap[newEdge.__vertexEdgeIdentifier];\n          for (const name in sourceEdge) {\n            if (sourceEdge.hasOwnProperty(name)) {\n              if (name !== \"__domainRangePair\") {\n                clonedEdge[name] = sourceEdge[name];\n              }\n            }\n          }\n          clonedEdge.__source = newEdge.__source;\n          clonedEdge.__target = newEdge.__target;\n\n          if (!clonedEdge.__displayName) {\n            clonedEdge.__displayName = clonedEdge.__vertexEdgeIdentifier;\n          }\n          clonedEdge.__vertexEdgeIdentifier += \"$$ClonedEdge\" + i;\n\n          model.addEdge(clonedEdge);\n        } else {\n          model.addEdge(newEdge);\n        }\n      }\n    });\n  }\n\n  _createEdgeFromRelation = item => {\n    const anEdge = new Edge();\n    anEdge.resourceReference = item;\n\n    // create based on the mapping def;\n    const eMapper = this.definitionMap.edgeMapper;\n    for (const name in eMapper) {\n      if (eMapper.hasOwnProperty(name)) {\n        // fetch data;\n        const dataPath = eMapper[name];\n        if (dataPath.indexOf(\".\") !== -1) {\n          // need to perform nested getter;\n          const tokens = dataPath.split(\".\");\n          let dataItem = item;\n          for (let i = 0; i < tokens.length; i++) {\n            dataItem = dataItem[tokens[i]];\n          }\n          anEdge[name] = dataItem;\n        } else {\n          // single data access in item\n          anEdge[name] = item[dataPath];\n        }\n      }\n    }\n    return anEdge;\n  };\n}\n","export default class Node {\n  constructor() {\n    this.resourceReference = null;\n    this.__outgoingLinks = [];\n    this.__incomingLinks = [];\n    this.__nodeType = [];\n    this.__aggregatedLink = [];\n  }\n\n  addAggregatedLink(link) {\n    this.__aggregatedLink.push(link);\n  }\n\n  addOutgoingLink(link) {\n    this.__outgoingLinks.push(link);\n  }\n\n  addIncomingLink(link) {\n    this.__incomingLinks.push(link);\n  }\n\n  isNodeOfType(type) {\n    if (Array.isArray(this.__nodeType)) {\n      for (let i = 0; i < this.__nodeType.length; i++) {\n        if (this.__nodeType[i] === type) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      if (this.__nodeType && this.__nodeType === type) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","export default class Link {\n  constructor() {\n    this.resourceReference = null;\n  }\n}\n","import { validIRI } from \"./globalHelper\";\nexport default class LanguageTools {\n  static textInLanguage = (textObject, preferredLanguage) => {\n    if (typeof textObject === \"undefined\") {\n      return undefined;\n    }\n\n    if (typeof textObject === \"string\") {\n      if (validIRI(textObject)) {\n        let suffix = textObject.split(\"#\")[1];\n        if (!suffix) {\n          const tokens = textObject.split(\"/\");\n          suffix = tokens[tokens.length - 1];\n        }\n        return suffix;\n      }\n      return textObject;\n    }\n\n    if (preferredLanguage && textObject.hasOwnProperty(preferredLanguage)) {\n      return textObject[preferredLanguage][0];\n    }\n\n    let textForLanguage = this.searchLanguage(textObject, \"en\");\n    if (textForLanguage) {\n      return textForLanguage[0];\n    }\n    textForLanguage = this.searchLanguage(textObject, \"default\");\n    if (textForLanguage) {\n      return textForLanguage[0];\n    }\n    return null;\n  };\n\n  static IRI2Label(prefixMap, IRI) {\n    let suffix = IRI.split(\"#\")[1];\n    let pref = \"\";\n    if (!suffix) {\n      const tokens = IRI.split(\"/\");\n      suffix = tokens[tokens.length - 1];\n      for (let i = 0; i < tokens.length - 1; i++) {\n        pref += tokens[i];\n      }\n      pref += \"/\";\n    } else {\n      pref = IRI.split(\"#\")[0];\n      pref += \"#\";\n    }\n    let output = \"\";\n    const prName = prefixMap[pref];\n    if (prName) {\n      output = prName + \":\" + suffix;\n    } else {\n      output = suffix;\n    }\n    return output;\n  }\n\n  static searchLanguage = (textObject, preferredLanguage) => {\n    for (const language in textObject) {\n      if (\n        language === preferredLanguage &&\n        textObject.hasOwnProperty(language)\n      ) {\n        return textObject[language];\n      }\n    }\n  };\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseModel from \"../Base/BaseModel\";\n\nexport default class NodeLinkModel extends BaseModel {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_NODE_LINK_MODEL; // default type;\n\n    // initialize the model with array of resources and relations;\n    this.modelAsJsonObject = { nodes: [], links: [] };\n\n    // create mappers for resources and relations;\n    this.nodeMap = {};\n    this.linkMap = {};\n\n    this.__resourceIdentifier = \"__nodeLinkIdentifier\"; // default, assume forced ids from outside;\n  }\n\n  getNodeFromName(name) {\n    return this.nodeMap[name];\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __isInMap__ = (map, identifier) => {\n    if (!identifier) {\n      console.error(\n        \"No Identifier Found in resource! give it unique ids as properties and set the resourceIdentifier name (setResourceIdentifier('ID'))\"\n      );\n    } else {\n      return !!map[identifier];\n    }\n\n    return true; // if is in map (per default this blocks to add items to model)!\n  };\n\n  __isEqual__ = (a, b) => {\n    // input a and b are objects with properties where some are maybe equal\n    return false;\n  };\n\n  __resourceIdentifier__ = resourceObject => {\n    return resourceObject[this.__resourceIdentifier];\n  };\n\n  /** -------------- Exposed Functions --------------**/\n\n  addNode = node => {\n    if (!this.__isInMap__(this.nodeMap, this.__resourceIdentifier__(node))) {\n      this.__integrateNodeLinkItem(\n        this.modelAsJsonObject.nodes,\n        this.nodeMap,\n        node\n      );\n    }\n  };\n\n  addLink = link => {\n    if (!this.__isInMap__(this.linkMap, this.__resourceIdentifier__(link))) {\n      this.__integrateNodeLinkItem(\n        this.modelAsJsonObject.links,\n        this.linkMap,\n        link\n      );\n    }\n  };\n\n  mergeNodes(src, tar) {\n    tar.__SHADOWNODE = true;\n    src.__displayName += \", \" + tar.__displayName;\n    if (!src.__hasEquivalentClasses) {\n      src.__hasEquivalentClasses = [];\n    }\n    src.__hasEquivalentClasses.push(tar); // could be useful for later;\n\n    // get its links and move them to the src node;\n    tar.__incomingLinks.forEach(inLink => {\n      if (!inLink.__SHADOWLINK) {\n        console.error(\"TODO MERGE THE LINKS TO THE SRC NODE\");\n        console.log(inLink);\n      }\n    });\n\n    tar.__outgoingLinks.forEach(outLink => {\n      if (!outLink.__SHADOWLINK) {\n        console.error(\"TODO MERGE THE LINKS TO THE SRC NODE\");\n        console.log(outLink);\n      }\n    });\n  }\n\n  removeShadowsFromModel() {\n    const nodesToRemove = [];\n    const linksToRemove = [];\n    this.modelAsJsonObject.nodes.forEach(node => {\n      if (node.__SHADOWNODE) {\n        // remove from map;\n        nodesToRemove.push(node);\n        delete this.nodeMap[node[this.__resourceIdentifier]];\n      }\n    });\n    this.modelAsJsonObject.links.forEach(link => {\n      if (link.__SHADOWLINK) {\n        // remove from map;\n        linksToRemove.push(link);\n        delete this.linkMap[link[this.__resourceIdentifier]];\n      }\n    });\n\n    // remove them from array of vertices;\n    nodesToRemove.forEach(n => {\n      const idToRemove = this.modelAsJsonObject.nodes.indexOf(n);\n      this.modelAsJsonObject.nodes.splice(idToRemove, 1);\n    });\n\n    linksToRemove.forEach(l => {\n      const idToRemove = this.modelAsJsonObject.links.indexOf(l);\n      this.modelAsJsonObject.links.splice(idToRemove, 1);\n    });\n  }\n\n  __integrateNodeLinkItem = (target, map, resource) => {\n    target.push(resource);\n    map[this.__resourceIdentifier__(resource)] = resource;\n  };\n}\n","import BaseComponent from \"../Base/BaseComponent\";\nimport * as $CONST from \"../Base/BaseComponentConstants\";\n\nimport Node from \"../Models/Node\";\nimport Link from \"../Models/Link\";\nimport LanguageTools from \"../Base/LanguageTools\";\nimport { validIRI } from \"../Base/globalHelper\";\nimport NodeLinkModel from \"../Models/NodeLinkModel\";\n\nexport default class NodeLinkMapper extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_VERTEX_EDGE_MODEL;\n    this.hasCompatibleInput = false;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\",\n      \"http://www.w3.org/2002/07/owl#\": \"owl\",\n      \"http://www.w3.org/2001/XMLSchema#\": \"xsd\",\n      \"http://purl.org/dc/elements/1.1/\": \"dc\",\n      \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n      \"http://xmlns.com/wot/0.1/\": \"wot\",\n      \"http://www.w3.org/2003/06/sw-vocab-status/ns#\": \"vs\",\n      \"http://xmlns.com/foaf/0.1/\": \"foaf\",\n      \"http://www.w3.org/2004/02/skos/core#\": \"skos\"\n    };\n\n    this.definitionMap = {\n      nodeMapper: {\n        __nodeType: \"__vertexType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\"\n      },\n      linkMapper: {\n        __linkType: \"__edgeType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\",\n        __linkAxiom: \"__edgeAxiom\",\n        __source: \"__source\",\n        __target: \"__target\"\n      },\n      nodeMerge: [{}],\n      nodeSplit: [{}],\n      auxiliaryNodes: [] // here empty\n    };\n  }\n\n  /** -------------- EXPOSED FUNCTIONS -------------- DO NOT OVERWRITE **/\n  setInputData = inputDataAsJsonObject => {\n    this.inputDataAsJsonObject = inputDataAsJsonObject;\n    // check if type is compatible;\n    if (this.requestedInputType === inputDataAsJsonObject.resultingModel.type) {\n      this.hasCompatibleInput = true;\n    } else {\n      console.error(\n        \"INPUT MODEL IS OF TYPE \" +\n          inputDataAsJsonObject.resultingModel.type +\n          \"EXPECTED: \" +\n          this.requestedInputType\n      );\n    }\n  };\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = () => {\n    if (this.hasCompatibleInput) {\n      this.__mapInputModel();\n    } else {\n      console.error(\"CANCELLED!\");\n      this.resultObject.resultingModel = null;\n    }\n  };\n\n  __mapInputModel = () => {\n    // obtain the data items;\n    const model = this.inputDataAsJsonObject.resultingModel;\n    const modelData = model.getResult();\n    const nlModel = new NodeLinkModel();\n    nlModel.setResourceIdentifier(\"__nodeLinkIdentifier\"); // lookup name\n\n    this.__mapVerticesToNodes(nlModel, modelData.vertices);\n    this._mapEdgesToLinks(nlModel, modelData.edges);\n\n    this._mergeAndSplitNodes(nlModel);\n    this._introduceAuxiliaryNode(nlModel);\n    this._autoAssignLinkTypesBasedOnTarget(nlModel.getResult().links);\n    this.__aggregateLinks(nlModel);\n    this.resultObject.resultingModel = nlModel;\n  };\n\n  __aggregateLinks(model) {\n    const def = this.definitionMap.aggregate;\n    if (def && def.length > 0) {\n      model.getResult().links.forEach(link => {\n        let allowAggregate = false;\n        if (Array.isArray(link.__linkType)) {\n          link.__linkType.forEach(t => {\n            if (def.indexOf(t) !== -1) {\n              allowAggregate = true;\n            }\n          });\n        }\n\n        if (allowAggregate || def.indexOf(link.__linkType) !== -1) {\n          link.__source.addAggregatedLink(link);\n          link.__target.__SHADOWNODE = true;\n          link.__SHADOWLINK = true;\n        }\n      });\n      model.removeShadowsFromModel();\n    }\n  }\n\n  _auxApplies(link, constraints) {\n    for (let i = 0; i < constraints.length; i++) {\n      for (const name in constraints[i]) {\n        if (constraints[i].hasOwnProperty(name)) {\n          //name is the datatype value\n\n          if (name === \"edgeType\") {\n            const lT = link.__linkType;\n            const cT = constraints[i][name];\n\n            if (typeof lT === \"string\") {\n              for (let j = 0; j < cT.length; j++) {\n                if (lT.toLowerCase() === cT[j].toLowerCase()) {\n                  return {\n                    auxLinks: constraints[i][\"auxiliaryLinks\"],\n                    auxNode: constraints[i][\"auxiliaryNode\"]\n                  };\n                }\n              }\n            } else {\n              for (let k = 0; k < lT.length; k++) {\n                for (let j = 0; j < cT.length; j++) {\n                  if (lT[k].toLowerCase() === cT[j].toLowerCase()) {\n                    return {\n                      auxLinks: constraints[i][\"auxiliaryLinks\"],\n                      auxNode: constraints[i][\"auxiliaryNode\"]\n                    };\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  _introduceAuxiliaryNode(model) {\n    if (this.definitionMap.auxiliaryNodes) {\n      const def = this.definitionMap.auxiliaryNodes;\n      const links = model.modelAsJsonObject.links;\n\n      links.forEach(link => {\n        // console.log(link.__linkType);\n        const auxDef = this._auxApplies(link, def);\n        // console.log(\"AUX NODES applies? \" + link.__linkType);\n        // console.log(auxDef);\n        if (auxDef !== false) {\n          link.__SHADOWLINK = true;\n\n          // create a link for the property using the auxDef.auxiliaryNodeDefinition;\n          const auxNode = new Node();\n          if (auxDef.auxNode[0] === \"__displayName\") {\n            auxNode.__displayName = link.__displayName;\n          } else {\n            auxNode.__displayName = auxDef.auxNode[0];\n          }\n          auxNode.__nodeType = [auxDef.auxNode[1]];\n          auxNode.resourceReference = link;\n          // create the links;\n          //   console.log(auxDef);\n          const auxLink1 = new Link();\n          const link1Def = auxDef.auxLinks.source;\n          auxLink1.__displayName = link1Def[0];\n          auxLink1.__linkType = link1Def[1];\n          auxLink1.__source = auxNode;\n          auxLink1.__target = link.__source;\n\n          const auxLink2 = new Link();\n          const link2Def = auxDef.auxLinks.target;\n          auxLink2.__displayName = link2Def[0];\n          auxLink2.__linkType = link2Def[1];\n          auxLink2.__source = auxNode;\n          auxLink2.__target = link.__target;\n\n          // todo, adjust ids;\n          auxNode.__nodeLinkIdentifier =\n            link.__source.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__target.__nodeLinkIdentifier +\n            \"$$_AUXNODE\";\n\n          auxLink1.__nodeLinkIdentifier =\n            link.__source.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__target.__nodeLinkIdentifier +\n            \"$$_AUXLINK1\";\n\n          auxLink2.__nodeLinkIdentifier =\n            link.__source.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__target.__nodeLinkIdentifier +\n            \"$$_AUXLINK2\";\n\n          model.addNode(auxNode);\n          model.addLink(auxLink1);\n          model.addLink(auxLink2);\n        }\n      });\n    }\n    model.removeShadowsFromModel();\n  }\n  _mergeAndSplitNodes(model) {\n    this._mergeNodes(model);\n    model.removeShadowsFromModel();\n\n    this._splitNodes(model); // this creates clones ad redirects the links;\n    model.removeShadowsFromModel();\n  }\n  _autoAssignLinkTypesBasedOnTarget(links) {\n    links.forEach(link => {\n      // check if target has a node type\n      if (!link.__target.__nodeType) {\n        // adjust to be a node;\n        link.__target.__nodeType = \"Unknown NodeType\";\n      }\n\n      if (\n        link.__target.__nodeType === \"Literal\" ||\n        link.__target.__nodeType.indexOf(\"Literal\") !== -1\n      ) {\n        link.__linkType = \"owl:datatypeProperty\";\n      } else {\n        if (\n          !link.__linkAxiom &&\n          (!link.__linkType || link.__linkType.length === 0)\n        ) {\n          link.__linkType = \"owl:objectProperty\";\n        }\n      }\n    });\n  }\n  _splitNodes(model) {\n    const links = model.modelAsJsonObject.links;\n    const splitDefs = this.definitionMap.nodeSplit;\n\n    const linksToSplit = [];\n    links.forEach(link => {\n      const splitAppliesTarget = this._splitAppliesOnTarget(link, splitDefs);\n      if (splitAppliesTarget) {\n        linksToSplit.push(link);\n      }\n    });\n    let cloneIterator = 0;\n    linksToSplit.forEach(link => {\n      // what we do is we clone the target node and adjust the link;\n      const nodeToClone = link.__target;\n      nodeToClone.__SHADOWNODE = true; // will be removed\n      const newNode = new Node();\n      for (const name in nodeToClone) {\n        if (nodeToClone.hasOwnProperty(name)) {\n          if (name !== \"__outgoingLinks\" && name !== \"__incomingLinks\") {\n            newNode[name] = nodeToClone[name];\n          }\n        }\n      }\n\n      newNode.__nodeLinkIdentifier =\n        newNode.__nodeLinkIdentifier + \"$$Clone\" + cloneIterator;\n      newNode.__SHADOWNODE = false;\n      model.addNode(newNode);\n      link.__target = newNode;\n      cloneIterator++;\n    });\n  }\n\n  _mergeNodes(model) {\n    // we merge nodes based on the links they have;\n\n    const links = model.modelAsJsonObject.links;\n    const mergeDefs = this.definitionMap.nodeMerge;\n\n    const linksToMerge = [];\n    links.forEach(link => {\n      const mergeApplies = this._mergeApplies(link, mergeDefs);\n      if (mergeApplies) {\n        link.__SHADOWLINK = true;\n        linksToMerge.push(link);\n      }\n    });\n    linksToMerge.forEach(link => {\n      const tokens = link.__nodeLinkIdentifier.split(\"$$\");\n      const srcNode = model.getNodeFromName(tokens[0]);\n      const tarNode = model.getNodeFromName(tokens[2]);\n      // merge the nodes;\n      model.mergeNodes(srcNode, tarNode);\n    });\n  }\n\n  _mergeApplies(link, constraints) {\n    let compares = 0;\n    let validCompares = 0;\n    let applies = false;\n    let hasDef = false;\n    constraints.forEach(cons => {\n      for (const name in cons) {\n        if (cons.hasOwnProperty(name)) {\n          //name is the datatype value\n          hasDef = true;\n          const linkData = link[name];\n          const compareValue = cons[name];\n          compares++;\n          if (linkData === compareValue) {\n            validCompares++;\n          }\n        }\n      }\n      // found at least one definition that requests this merge;\n      if (hasDef && validCompares === compares) {\n        applies = true;\n        return applies;\n      }\n    });\n    return applies;\n  }\n  _splitAppliesOnTarget(link, constraints) {\n    let compares = 0;\n    let validCompares = 0;\n    let applies = false;\n    let hasDef = false;\n    constraints.forEach(cons => {\n      for (const name in cons) {\n        if (cons.hasOwnProperty(name)) {\n          //name is the datatype value\n          hasDef = true;\n          if (name === \"constraints\" && cons[name] === \"none\") {\n            // do nothing but tell that the validation suits the constraints;\n            compares++;\n            validCompares++;\n          } else {\n            // check for validation\n            if (name === \"type\") {\n              // check for type of the target node;\n              //compare against an array of types\n\n              const nodeTypesToApply = cons[name];\n              for (let i = 0; i < nodeTypesToApply.length; i++) {\n                const t = nodeTypesToApply[i];\n                if (link.__target.isNodeOfType(t)) {\n                  validCompares++;\n                }\n              }\n              compares++;\n            }\n          }\n        }\n      }\n      // found at least one definition that requests this merge;\n      if (hasDef && validCompares === compares) {\n        applies = true;\n        return applies;\n      }\n    });\n    return applies;\n  }\n\n  __mapVerticesToNodes(model, dataArray) {\n    // note no arrow function, otherwise model will not be updated(call by ref)\n\n    dataArray.forEach(item => {\n      const aNode = this._createNodeFromVertex(item);\n      // set displayName to be a string! ;\n      let langRep = LanguageTools.textInLanguage(aNode.__displayName);\n      if (langRep === null || langRep === undefined) {\n        if (validIRI(item.__vertexEdgeIdentifier)) {\n          langRep = LanguageTools.IRI2Label(\n            this.prefixMapperL2S,\n            item.__vertexEdgeIdentifier\n          );\n        } else {\n          console.error(\n            \"COULD NOT FIND A LABEL FOR VERTEX: \" + item.__vertexEdgeIdentifier\n          );\n        }\n      }\n      aNode.__displayName = langRep;\n      model.addNode(aNode);\n    });\n\n    // process Axioms;\n  }\n\n  _createNodeFromVertex = item => {\n    const aNode = new Node();\n    aNode.resourceReference = item;\n\n    // create the mappings;\n    const nMapper = this.definitionMap.nodeMapper;\n    for (const name in nMapper) {\n      if (nMapper.hasOwnProperty(name)) {\n        // fetch data;\n        const dataPath = nMapper[name];\n        if (dataPath.indexOf(\".\") !== -1) {\n          // need to perform nested getter;\n          const tokens = dataPath.split(\".\");\n          let dataItem = item;\n          for (let i = 0; i < tokens.length; i++) {\n            dataItem = dataItem[tokens[i]];\n          }\n          aNode[name] = dataItem;\n        } else {\n          // single data access in item\n          aNode[name] = item[dataPath];\n        }\n      }\n    }\n\n    return aNode;\n  };\n\n  _createLinkFromEdge = item => {\n    const aLink = new Link();\n    aLink.resourceReference = item;\n\n    // create the mappings;\n    const mapper = this.definitionMap.linkMapper;\n    for (const name in mapper) {\n      if (mapper.hasOwnProperty(name) && name !== \"mapAxiom\") {\n        // fetch data;\n        const dataPath = mapper[name];\n        if (dataPath.indexOf(\".\") !== -1) {\n          // need to perform nested getter;\n          const tokens = dataPath.split(\".\");\n          let dataItem = item;\n          for (let i = 0; i < tokens.length; i++) {\n            dataItem = dataItem[tokens[i]];\n          }\n          aLink[name] = dataItem;\n        } else {\n          // single data access in item\n          aLink[name] = item[dataPath];\n        }\n      }\n    }\n\n    // adjust link type if it is derived from axiomEdge\n    if (aLink.__linkType === \"axiomEdge\") {\n      aLink.__linkType = \"axiomLink\";\n    }\n    // adjust display name\n    aLink.__displayName = LanguageTools.textInLanguage(aLink.__displayName);\n\n    return aLink;\n  };\n\n  _mapEdgesToLinks(model, dataArray) {\n    // note no arrow function, otherwise model will not be updated(call by ref)\n\n    dataArray.forEach(item => {\n      // check for axioms;\n\n      const link = this._createLinkFromEdge(item);\n      // find node for linkSource:\n      const src_node = model.getNodeFromName(\n        item.__source.__vertexEdgeIdentifier\n      );\n      const tar_node = model.getNodeFromName(\n        item.__target.__vertexEdgeIdentifier\n      );\n      if (src_node) {\n        link.__source = src_node;\n        src_node.addOutgoingLink(link);\n      }\n\n      if (tar_node) {\n        link.__target = tar_node;\n        tar_node.addIncomingLink(link);\n      }\n\n      model.addLink(link);\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class RenderingModuleConfig extends Component {\n  componentDidMount() {}\n  componentDidUpdate = () => {};\n\n  render() {\n    return <div>Hello</div>;\n  }\n}\n\nRenderingModuleConfig.propTypes = {\n  store: PropTypes.object,\n  nodeLinkModel: PropTypes.object\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport { updateRenderingModuleConfiguration } from \"./redux/actions\";\nimport { connect } from \"react-redux\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport * as dataSources from \"../configs/datasources\";\nimport VisualItemConfiguration from \"./VisualItemConfigurator\";\n\nclass RenderingModuleConfig extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph_mouseZoom: true,\n      graph_mouseDrag: true,\n      node_mouseDrag: true,\n      node_mouseHover: true,\n      node_mouseSingleClick: true,\n      node_mouseDoubleClick: true,\n      link_mouseDrag: true,\n      link_mouseHover: true,\n      // todo: link clicks ;\n      graphBgColor: \"#FFFFFF\",\n\n      // internal state stuffl\n      configSelectionOpen: false,\n      configSelected: \"Default\"\n    };\n\n    this.availableConfigs = dataSources.default.availableRenderingConfigs;\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.props.initialState });\n  }\n\n  componentDidUpdate = () => {\n    this.props.propagateState(this.state);\n  };\n\n  handleCheckChange = name => {\n    this.setState(prevState => ({\n      [name]: !prevState[name]\n    }));\n  };\n\n  renderGraphInteractionsConfig = () => {\n    return (\n      <div style={{ padding: \"5px\", marginLeft: \"10px\" }}>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.graph_mouseZoom}\n              onChange={() => {\n                this.handleCheckChange(\"graph_mouseZoom\");\n              }}\n            />{\" \"}\n            Mouse Zoom\n          </Label>\n        </FormGroup>\n        <FormGroup check style={{ paddingLeft: \"40px\" }}>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              disabled={true}\n              checked={this.state.graph_mouseZoom}\n              onChange={() => {\n                this.handleCheckChange(\"graph_mouseZoom\");\n              }}\n            />\n            Graph Double Click == Zoom\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.graph_mouseDrag}\n              onChange={() => {\n                this.handleCheckChange(\"graph_mouseDrag\");\n              }}\n            />{\" \"}\n            Mouse Drag\n          </Label>\n        </FormGroup>\n      </div>\n    );\n  };\n  renderNodeInteractionsConfig = () => {\n    return (\n      <div style={{ padding: \"5px\", marginLeft: \"10px\" }}>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.node_mouseDrag}\n              onChange={() => {\n                this.handleCheckChange(\"node_mouseDrag\");\n              }}\n            />{\" \"}\n            Node Drag\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.node_mouseHover}\n              onChange={() => {\n                this.handleCheckChange(\"node_mouseHover\");\n              }}\n            />\n            Node Hover\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.node_mouseSingleClick}\n              onChange={() => {\n                this.handleCheckChange(\"node_mouseSingleClick\");\n              }}\n            />{\" \"}\n            Node Single Mouse Click\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.node_mouseDoubleClick}\n              onChange={() => {\n                this.handleCheckChange(\"node_mouseDoubleClick\");\n              }}\n            />\n            Node Double Mouse Click\n          </Label>\n        </FormGroup>\n      </div>\n    );\n  };\n\n  renderLinkInteractionsConfig = () => {\n    return (\n      <div style={{ padding: \"5px\", marginLeft: \"10px\" }}>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.link_mouseDrag}\n              onChange={() => {\n                this.handleCheckChange(\"link_mouseDrag\");\n              }}\n            />\n            Link Drag\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.link_mouseHover}\n              onChange={() => {\n                this.handleCheckChange(\"link_mouseHover\");\n              }}\n            />\n            Link Hover\n          </Label>\n        </FormGroup>\n      </div>\n    );\n  };\n\n  createVisualAppearanceConfigDropDowns = () => {\n    const items = this.availableConfigs.map((item, index) => {\n      return (\n        <DropdownItem\n          key={\"dropdownItemIndexKey\" + index}\n          onClick={() => {\n            this.setState({ configSelected: item });\n          }}\n        >\n          {item}\n        </DropdownItem>\n      );\n    });\n\n    return (\n      <Dropdown\n        color=\"darkblue\"\n        size=\"sm\"\n        //    className='mb-4 mt-4'\n        style={{\n          marginLeft: \"10px\",\n          flexGrow: \"1\",\n          display: \"flex\",\n          height: \"min-content\",\n          paddingTop: \"-5px\"\n        }}\n        isOpen={this.state.configSelectionOpen}\n        toggle={() => {\n          this.setState({\n            configSelectionOpen: !this.state.configSelectionOpen\n          });\n        }}\n      >\n        <DropdownToggle\n          caret\n          color=\"darkblue\"\n          style={{\n            padding: \"0px\",\n            paddingLeft: \"3px\",\n            border: \"solid 1px black\"\n          }}\n        >\n          {this.state.configSelected}\n        </DropdownToggle>\n        <DropdownMenu>{items}</DropdownMenu>\n      </Dropdown>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            marginLeft: \"10px\",\n            paddingLeft: \"30px\"\n          }}\n        >\n          <div style={{ border: \"solid 1px grey\", width: \"30%\" }}>\n            <h2> Graph Interactions: </h2>\n            {this.renderGraphInteractionsConfig()}\n          </div>\n          <div style={{ border: \"solid 1px grey\", width: \"30%\" }}>\n            <h2> Node Interactions: </h2>\n            {this.renderNodeInteractionsConfig()}\n          </div>\n          <div style={{ border: \"solid 1px grey\", width: \"30%\" }}>\n            <h2> Link Interactions: </h2>\n            {this.renderLinkInteractionsConfig()}\n          </div>\n        </div>\n\n        <hr />\n\n        <div style={{ display: \"flex\" }}>\n          <div style={{ width: \"100%\", marginLeft: \"10px\" }}>\n            <h2> Visualization Configuration </h2>\n            <div style={{}}>\n              <div>\n                Layout: ForceDirected Active {\"<<<\"}{\" \"}\n                <b> NOT CONFIGURABLE IN DEMO</b>\n              </div>\n              <div style={{ display: \"flex\" }}>\n                Graph Background Color:\n                <Input\n                  type={\"color\"}\n                  style={{\n                    width: \"40px\",\n                    marginLeft: \"5px\",\n                    padding: \"2px\",\n                    height: \"25px\"\n                  }}\n                  value={this.state.graphBgColor}\n                  onChange={t => {\n                    this.setState({ graphBgColor: t.target.value });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", marginLeft: \"10px\" }}>\n            <h2> Visual Appearance</h2>\n            <div style={{ display: \"flex\" }}>\n              <div>Visual Appearance Config</div>\n              {this.createVisualAppearanceConfigDropDowns()}\n            </div>\n          </div>\n        </div>\n        <hr />\n        <div style={{ display: \"flex\" }}>\n          {this.props.nodeLinkModel ? (\n            <div>\n              Adjusting the item configs{\" \"}\n              {this.state.configSelected !== \"Customizable\" ? (\n                <b> READ ONLY </b>\n              ) : (\n                \"\"\n              )}\n              <VisualItemConfiguration\n                nodeLinkModel={this.props.nodeLinkModel}\n                readOnly={this.state.configSelected !== \"Customizable\"}\n              />\n            </div>\n          ) : (\n            <div>\n              Please execute the pipeline modules to enable dynamic\n              customizations\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nRenderingModuleConfig.propTypes = {\n  store: PropTypes.object,\n  nodeLinkModel: PropTypes.object,\n  initialState: PropTypes.object,\n  updateRenderingModuleConfiguration: PropTypes.func,\n  propagateState: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {\n    updateRenderingModuleConfiguration: payload =>\n      dispatch(updateRenderingModuleConfiguration(payload))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RenderingModuleConfig);\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseComponent from \"../Base/BaseComponent\";\nimport { get } from \"../Base/globalHelper\";\n\nexport default class DBpediaProxyLoader extends BaseComponent {\n  constructor() {\n    super();\n    this.resultingDataObject = null;\n    this.type = $CONST.TYPE_DBPEDIA_PROXY;\n    this.dbPediaURL = \"https://live.dbpedia.org/sparql/\";\n    this.dbPediaGraph = \"http://dbpedia.org\";\n    this.suffix =\n      \"&format=application%2Fsparql-results%2Bjson&CXML_redir_for_subjs=121&CXML_redir_for_hrefs=&timeout=30000&debug=on&run=+Run+Query+\";\n    this.exampleQuery =\n      \"select ?subject ?predicate ?object where { ?subject ?predicate ?object} Limit 10\";\n    this.teslaExample =\n      \"PREFIX dbr: <http://dbpedia.org/resource/>\\n\" +\n      \"PREFIX dbo: <http://dbpedia.org/ontology/>\\n\" +\n      \"PREFIX owl: <http://www.w3.org/2002/07/owl#>\\n\" +\n      \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n      \"PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\n\" +\n      \"select distinct ?subject ?predicate ?object where { \\n\" +\n      \"{dbr:Nikola_Tesla ?predicate ?object.\\n\" +\n      \"?object a owl:Class} \\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla dbo:birthDate ?object.\\n\" +\n      \"BIND(dbo:birthDate as ?predicate)\\n\" +\n      \"}\\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla dbo:deathDate ?object.\\n\" +\n      \"BIND(dbo:deathDate as ?predicate)\\n\" +\n      \"}\\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla rdfs:label ?object.\\n\" +\n      \"BIND(rdfs:label as ?predicate)\\n\" +\n      \"}\\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla rdfs:comment ?object.\\n\" +\n      \"BIND(rdfs:comment as ?predicate)\\n\" +\n      \"}\\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla ?foafPredicate ?object.\\n\" +\n      'FILTER(STRSTARTS(STR(?foafPredicate), \"http://xmlns.com/foaf/0.1/\"))\\n' +\n      \"BIND(?foafPredicate as ?predicate)\\n\" +\n      \"}\\n\" +\n      'FILTER(!isLiteral(?object) ||langMatches(lang(?object),\"EN\") || datatype(?object)=xsd:date)\\n' +\n      \"BIND(dbr:Nikola_Tesla as ?subject)}\\n\" +\n      \"Limit 100\";\n    this.query = this.teslaExample;\n  }\n\n  getResult = () => {\n    return this.dataHandlerObject.theData;\n  };\n\n  execute = async () => {\n    await this.__run__();\n  };\n\n  __run__ = async () => {\n    this.dataHandlerObject = {};\n    this.dataHandlerObject.theData = await this.executePromisedQuery(\n      this.query\n    );\n  };\n\n  /** -------------- Exposed Functions --------------**/\n  setQuery = query => {\n    this.query = query;\n  };\n\n  setGraph = graph => {\n    this.dbPediaGraph = graph;\n  };\n\n  setDBPediaURL = url => {\n    this.dbPediaURL = url;\n  };\n\n  executePromisedQuery = async fullQuery => {\n    const that = this;\n    let res = \"\";\n    const queryPromise = new Promise(function(resolve) {\n      const requestPath =\n        that.dbPediaURL +\n        \"?default-graph-uri=\" +\n        encodeURIComponent(that.dbPediaGraph) +\n        \"&query=\" +\n        encodeURIComponent(fullQuery) +\n        that.suffix;\n\n      get(requestPath).then(result => {\n        res = result;\n        resolve();\n      });\n    });\n    await queryPromise;\n    return JSON.parse(res);\n  };\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, FormGroup, Label, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport DBPediaLoader from \"../Implementation/DataAccessComponent/DBPediaLoader\";\n\nclass DataAccessConfigurator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endpointURL: \"https://live.dbpedia.org/sparql/\",\n      graphURL: \"http://dbpedia.org\",\n      query:\n        \"PREFIX dbr: <http://dbpedia.org/resource/>\\n\" +\n        \"PREFIX dbo: <http://dbpedia.org/ontology/>\\n\" +\n        \"PREFIX owl: <http://www.w3.org/2002/07/owl#>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\n\\n\" +\n        \"SELECT  DISTINCT ?subject ?predicate ?object WHERE { \\n\" +\n        \"{dbr:Nikola_Tesla ?predicate ?object.\\n\" +\n        \"?object a owl:Class} \\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla dbo:birthDate ?object.\\n\" +\n        \"BIND(dbo:birthDate as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla dbo:deathDate ?object.\\n\" +\n        \"BIND(dbo:deathDate as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla rdfs:label ?object.\\n\" +\n        \"BIND(rdfs:label as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla rdfs:comment ?object.\\n\" +\n        \"BIND(rdfs:comment as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla ?foafPredicate ?object.\\n\" +\n        'FILTER(STRSTARTS(STR(?foafPredicate), \"http://xmlns.com/foaf/0.1/\"))\\n' +\n        \"BIND(?foafPredicate as ?predicate)\\n\" +\n        \"}\\n\" +\n        'FILTER(!isLiteral(?object) ||langMatches(lang(?object),\"EN\") || datatype(?object)=xsd:date)\\n' +\n        \"BIND(dbr:Nikola_Tesla as ?subject)}\\n\" +\n        \"Limit 100\",\n      queryResult: undefined\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = () => {\n    this.props.statePropagation(this.state);\n  };\n\n  handleInputChange = (name, target) => {\n    const newEntry = target.target.value;\n    this.setState({ [name]: newEntry });\n  };\n\n  executeQuery = () => {\n    const dbpediaHandler = new DBPediaLoader();\n    dbpediaHandler.setGraph(this.state.graphURL);\n    dbpediaHandler.setDBPediaURL(this.state.endpointURL);\n    dbpediaHandler.setQuery(this.state.query);\n\n    dbpediaHandler.executePromisedQuery(this.state.query).then(res => {\n      this.setState({ queryResult: res });\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"10px\", display: \"flex\" }}>\n        <div>\n          <div>Configure Data AccessHandler for DBPedia</div>\n          <div style={{ width: \"50%\" }}>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>EndPoint URL:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"endpointURL\", t);\n                  }}\n                  value={this.state.endpointURL}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>Graph URL:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"graphURL\", t);\n                  }}\n                  value={this.state.graphURL}\n                />\n              </Label>\n            </FormGroup>\n\n            <div>\n              <b> QUERY: </b> <br />\n              <b>\n                {\" \"}\n                <i>*Note*</i>{\" \"}\n              </b>{\" \"}\n              The select clause requires ?subject ?predicate ?object as variable\n              selection <br />\n              This is due to how the SPARQL results are parsed and transformed\n              into a Resource Relation Model\n              <textarea\n                type=\"text\"\n                rows=\"10\"\n                cols=\"50\"\n                style={{ width: \"100%\", height: \"100%\" }}\n                value={this.state.query}\n                onChange={e => {\n                  this.setState({ query: e.target.value });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div style={{ width: \"40%\" }}>\n          <Button\n            onClick={() => {\n              this.executeQuery();\n            }}\n          >\n            Test Query\n          </Button>\n          <br />\n          Result\n          <textarea\n            rows=\"10\"\n            cols=\"50\"\n            style={{ width: \"100%\", height: \"100%\" }}\n            value={JSON.stringify(this.state.queryResult, null, \"\\t\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataAccessConfigurator.propTypes = {\n  store: PropTypes.object,\n  statePropagation: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataAccessConfigurator);\n","import BaseComponent from \"../Base/BaseComponent\";\nimport { get } from \"../Base/globalHelper\";\n\nexport default class WikiDataLoader extends BaseComponent {\n  constructor() {\n    super();\n\n    this.resultingDataObject = null;\n    this.type = \"WIKI_DATA_LOADER\";\n    this.wikiDataEndpointURL = \"https://query.wikidata.org/\";\n    this.suffix = \"&format=json\";\n    this.exampleQuery =\n      \"SELECT ?h ?hLabel ?cause ?causeLabel (YEAR(?date) AS ?year) WHERE {\\n\" +\n      \"?h wdt:P39 wd:Q11696;\\n\" +\n      \"   wdt:P509 ?cause;\\n\" +\n      \"   wdt:P570 ?date\\n\" +\n      'SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\\n' +\n      \"} ORDER BY ?year\";\n    this.query = this.exampleQuery;\n  }\n\n  getResult = () => {\n    return this.dataHandlerObject.theData;\n  };\n\n  execute = async () => {\n    await this.__run__();\n  };\n\n  __run__ = async () => {\n    this.dataHandlerObject = {};\n    this.dataHandlerObject.theData = await this.executePromisedQuery(\n      this.query\n    );\n  };\n\n  /** -------------- Exposed Functions --------------**/\n  setQuery = query => {\n    this.query = query;\n  };\n\n  setEndPointURL = url => {\n    this.wikiDataEndpointURL = url;\n  };\n\n  // add the query as parameter to be able to call this function from outside with modified queries\n  executePromisedQuery = async fullQuery => {\n    const that = this;\n    let res = \"\";\n    const queryPromise = new Promise(function(resolve) {\n      const requestPath =\n        that.wikiDataEndpointURL +\n        \"sparql\" +\n        \"?query=\" +\n        encodeURIComponent(fullQuery) +\n        that.suffix;\n\n      get(requestPath).then(result => {\n        res = result;\n        resolve();\n      });\n    });\n    await queryPromise;\n    return JSON.parse(res);\n  };\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, FormGroup, Label, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport WikiDataLoader from \"../Implementation/DataAccessComponent/WikiDataLoader\";\n\nclass DataAccessConfigurator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endpointURL: \"https://query.wikidata.org/\",\n      query:\n        \"SELECT ?h ?hLabel ?cause ?causeLabel (YEAR(?date) AS ?year) WHERE {\\n\" +\n        \"?h wdt:P39 wd:Q11696;\\n\" +\n        \"   wdt:P509 ?cause;\\n\" +\n        \"   wdt:P570 ?date\\n\" +\n        'SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\\n' +\n        \"} ORDER BY ?year\",\n      queryResult: undefined\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = () => {\n    this.props.statePropagation(this.state);\n  };\n\n  handleInputChange = (name, target) => {\n    const newEntry = target.target.value;\n    this.setState({ [name]: newEntry });\n  };\n\n  executeQuery = () => {\n    const accessHandler = new WikiDataLoader();\n    accessHandler.setEndPointURL(this.state.endpointURL);\n    accessHandler.setQuery(this.state.query);\n    accessHandler.executePromisedQuery(this.state.query).then(res => {\n      this.setState({ queryResult: res });\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"10px\", display: \"flex\" }}>\n        <div>\n          <div>Configure Data AccessHandler for DBPedia</div>\n          <div style={{ width: \"50%\" }}>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>EndPoint URL:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"endpointURL\", t);\n                  }}\n                  value={this.state.endpointURL}\n                />\n              </Label>\n            </FormGroup>\n\n            <div>\n              <b> QUERY: </b> <br />\n              <b>\n                <i>*Note*</i>\n              </b>\n              This is an example query that also has a <b>SPECIFIC</b> parser\n              for the variable names selection .\n              <textarea\n                rows=\"10\"\n                cols=\"50\"\n                style={{ width: \"100%\", height: \"100%\" }}\n                value={this.state.query}\n                onChange={e => {\n                  this.setState({ query: e.target.value });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div style={{ width: \"40%\" }}>\n          <Button\n            onClick={() => {\n              this.executeQuery();\n            }}\n          >\n            Test Query\n          </Button>\n          <br />\n          Result\n          <textarea\n            rows=\"10\"\n            cols=\"50\"\n            style={{ width: \"100%\", height: \"100%\" }}\n            value={JSON.stringify(this.state.queryResult, null, \"\\t\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataAccessConfigurator.propTypes = {\n  store: PropTypes.object,\n  statePropagation: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataAccessConfigurator);\n","// data handler is a base class;\n\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseNodeLinkMapper from \"./BaseNodeLinkMapper\";\n\nexport default class NodeLinkMapper extends BaseNodeLinkMapper {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_VERTEX_EDGE_MODEL;\n    this.hasCompatibleInput = false;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\",\n      \"http://www.w3.org/2002/07/owl#\": \"owl\",\n      \"http://www.w3.org/2001/XMLSchema#\": \"xsd\",\n      \"http://purl.org/dc/elements/1.1/\": \"dc\",\n      \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n      \"http://xmlns.com/wot/0.1/\": \"wot\",\n      \"http://www.w3.org/2003/06/sw-vocab-status/ns#\": \"vs\",\n      \"http://xmlns.com/foaf/0.1/\": \"foaf\",\n      \"http://www.w3.org/2004/02/skos/core#\": \"skos\"\n    };\n\n    this.definitionMap = {\n      nodeMapper: {\n        __nodeType: \"__vertexType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\"\n      },\n      linkMapper: {\n        __linkType: \"__edgeType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\",\n        __linkAxiom: \"__edgeAxiom\",\n        __source: \"__source\",\n        __target: \"__target\"\n      },\n      nodeMerge: [{}],\n      nodeSplit: [{}],\n      auxiliaryNodes: [\n        {\n          edgeType: [\"owl:ObjectProperty\"], // constraint\n          auxiliaryLinks: {\n            source: [\"domain\", \"auxLink\"],\n            target: [\"range\", \"auxLink\"]\n          }, // what to do whit the link >> split domain range links << this sets the displayName and edge type\n          auxiliaryNode: [\"__displayName\", \"auxForObjectProperties\"] // will fetch the prop name for display name and set the type to auxiliary\n        },\n        {\n          edgeType: [\"owl:DatatypeProperty\"], // constraint\n          auxiliaryLinks: {\n            source: [\"domain\", \"auxLink\"],\n            target: [\"range\", \"auxLink\"]\n          }, // what to do whit the link >> split domain range links << this sets the displayName and edge type\n          auxiliaryNode: [\"__displayName\", \"auxForDataTypeProperties\"] // will fetch the prop name for display name and set the type to auxiliary\n        }\n      ]\n    };\n  }\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseComponent from \"../Base/BaseComponent\";\n\nimport ResourceRelationModel from \"../Models/ResourceRelationModel\";\nimport Resource from \"../Models/Resource\";\nimport Relation from \"../Models/Relation\";\n\nexport default class WikiDataExampleParser extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_SPARQL_PARSER;\n\n    this.definitionMap = {\n      // assertions\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": \"assertion\",\n      \"rdf:type\": \"assertion\",\n      //axioms\n      \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": \"axiom\",\n      \"http://www.w3.org/2000/01/rdf-schema#subPropertyOf\": \"axiom\",\n      \"http://www.w3.org/2002/07/owl#equivalentClass\": \"axiom\",\n\n      // annotations\n      \"http://www.w3.org/2000/01/rdf-schema#comment\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#label\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": \"annotation\",\n\n      // relational assertions:\n      \"owl:ObjectProperty\": \"relationalAssertion\",\n      \"owl:DatatypeProperty\": \"relationalAssertion\"\n    };\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    const m = new ResourceRelationModel();\n    const processedData = this._preProcess();\n    this._processData(m, processedData);\n  };\n\n  _processData(model, dataObject) {\n    dataObject.forEach((statement, index) => {\n      const subject = statement.subject;\n      const predicate = statement.predicate;\n      const object = statement.object;\n\n      // needs to be processed as a whole triple\n      // subject resource\n      const subjectResource = new Resource();\n      const propertyRelation = new Relation();\n      const objectResource = new Resource();\n\n      // handling the identifier;\n      subjectResource.resourceIdentifier(subject.value);\n      if (this.validIRI(subject.value)) {\n        subjectResource._resourceURI = subject.value;\n      }\n\n      propertyRelation.resourceIdentifier(predicate.value);\n      if (this.validIRI(predicate.value)) {\n        propertyRelation._resourceURI = predicate.value;\n      }\n\n      objectResource.resourceIdentifier(object.value);\n      if (this.validIRI(object.value)) {\n        objectResource._resourceURI = object.value;\n      }\n\n      let ignoreSubjectResource = false;\n      let ignoreObjectResource = false;\n      let ignorePropertyRelation = false;\n\n      if (this.definitionMap[predicate.value] === \"assertion\") {\n        if (this.definitionMap[object.value] !== \"relationalAssertion\") {\n          subjectResource.addSemanticType(object.value);\n        } else {\n          console.log(\"TODO: add sematic type to the relation\");\n        }\n        model.addResource(subjectResource);\n        return;\n      }\n\n      /** axioms **/\n      switch (this.definitionMap[predicate.value]) {\n        case \"axiom\":\n          subjectResource.addAxiom(\n            subject.value,\n            predicate.value,\n            object.value\n          );\n          ignoreObjectResource = true;\n          break;\n        case \"annotation\":\n          if (object[\"xml:lang\"]) {\n            subjectResource.addAnnotation(\n              predicate.value,\n              object.value,\n              object[\"xml:lang\"]\n            );\n          } else {\n            subjectResource.addAnnotation(predicate.value, object.value);\n          }\n\n          ignoreObjectResource = true;\n          ignorePropertyRelation = true;\n          break;\n        default:\n          propertyRelation.addDomain(subject.value);\n          propertyRelation.addRange(object.value);\n          propertyRelation.addDomainRangePair(subject.value, object.value);\n\n          ignoreObjectResource = true;\n          ignoreSubjectResource = true;\n      }\n\n      if (!ignoreSubjectResource) {\n        model.addResource(subjectResource);\n      }\n      if (!ignorePropertyRelation) {\n        model.addRelation(propertyRelation);\n      }\n      if (!ignoreObjectResource) {\n        model.addResource(objectResource);\n      }\n    });\n    this.resultObject.resultingModel = model;\n  }\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n\n  _preProcess = () => {\n    console.log(\n      \"WIKIDATA PREPROCESSING SPARQL PARSER PREPROCESS\",\n      this.inputDataAsJsonObject\n    );\n\n    const output = []; // array holding the statements;\n    const input = this.inputDataAsJsonObject;\n    // assumptions;\n    // we always have a head and a results object\n\n    const binds = input.results.bindings;\n\n    const subject = \"h\";\n    const subjectLabel = \"hLabel\";\n    const predicateDeath = \"causeOfDeath\";\n    const causeOfDeathObject = \"cause\";\n    const causeOfDeathObjectLabel = \"causeLabel\";\n    const predicateDeathYear = \"deathYear\";\n\n    binds.forEach(res => {\n      // create statements:\n\n      // map the variable names here; *NOTE* THIS ONE IS FIXED FOR THE DEMO !!!\n\n      const aStatement = {};\n      aStatement.subject = res[subject];\n      aStatement.predicate = {\n        type: \"uri\",\n        value: \"http://www.w3.org/2000/01/rdf-schema#label\"\n      };\n      aStatement.object = res[subjectLabel];\n\n      // add statment for the causeOfDeath;\n      const bStatement = {};\n      bStatement.subject = res[subject];\n      bStatement.predicate = {\n        type: \"uri\",\n        value: \"http://example.org/\" + predicateDeath\n      };\n      bStatement.object = res[causeOfDeathObject];\n\n      const cStatement = {};\n      cStatement.subject = res[causeOfDeathObject];\n      cStatement.predicate = {\n        type: \"uri\",\n        value: \"http://www.w3.org/2000/01/rdf-schema#label\"\n      };\n      cStatement.object = res[causeOfDeathObjectLabel];\n\n      const dStatement = {};\n      dStatement.subject = res[subject];\n      dStatement.predicate = {\n        type: \"uri\",\n        value: \"http://example.org/\" + predicateDeathYear\n      };\n      dStatement.object = res[\"year\"];\n\n      output.push(aStatement);\n      output.push(bStatement);\n      output.push(cStatement);\n      output.push(dStatement);\n    });\n\n    this.allStatements = [].concat(this.allStatements, output);\n    return output; // this can be useful for batch processing;\n  };\n\n  validIRI(str) {\n    const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n    return urlregex.test(str);\n  }\n}\n","import BaseComponent from \"../Base/BaseComponent\";\nimport { get } from \"../Base/globalHelper\";\n\nexport default class WikiDataLoader extends BaseComponent {\n  constructor() {\n    super();\n    this.resultingDataObject = null;\n    this.type = \"ORKG_DATA_LOADER\";\n    this.endpointURL = \"https://www.orkg.org/orkg/\";\n    this.requestParameters = \"api/statements/subject/\";\n    this.requestResourceId = \"R8186\";\n    this.suffix = \"/?desc=true&items=9999&page=1&sortBy=created_at\";\n  }\n\n  getResult = () => {\n    return this.dataHandlerObject.theData;\n  };\n\n  execute = async () => {\n    await this.__run__();\n  };\n\n  __run__ = async () => {\n    this.dataHandlerObject = {};\n    this.dataHandlerObject.theData = await this.executePromisedQuery(\n      this.query\n    );\n  };\n\n  /** -------------- Exposed Functions --------------**/\n  setRequestResourceId = id => {\n    this.requestResourceId = id;\n  };\n\n  setEndPointURL = url => {\n    this.endpointURL = url;\n  };\n\n  executePromisedQuery = async () => {\n    const that = this;\n    let res = \"\";\n    const queryPromise = new Promise(function(resolve) {\n      const requestPath =\n        that.endpointURL +\n        that.requestParameters +\n        that.requestResourceId +\n        that.suffix;\n\n      get(requestPath).then(result => {\n        res = result;\n        resolve();\n      });\n    });\n    await queryPromise;\n    return JSON.parse(res);\n  };\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, FormGroup, Label, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport ORKGLoader from \"../Implementation/DataAccessComponent/OrkgDataLoader\";\n\nclass DataAccessConfigurator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endpointURL: \"https://www.orkg.org/orkg/\",\n      requestParameters: \"api/statements/subject/\",\n      requestResourceId: \"R8186\",\n      suffix: \"/?desc=true&items=9999&page=1&sortBy=created_at\",\n\n      queryResult: undefined\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = () => {\n    this.props.statePropagation(this.state);\n  };\n\n  handleInputChange = (name, target) => {\n    const newEntry = target.target.value;\n    this.setState({ [name]: newEntry });\n  };\n\n  executeQuery = () => {\n    const accessHandler = new ORKGLoader();\n    accessHandler.setEndPointURL(this.state.endpointURL);\n    accessHandler.setRequestResourceId(this.state.requestResourceId);\n\n    accessHandler.executePromisedQuery(this.state.query).then(res => {\n      this.setState({ queryResult: res });\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"10px\", display: \"flex\" }}>\n        <div>\n          <div>Configure Data AccessHandler for DBPedia</div>\n          <div style={{ width: \"50%\" }}>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>EndPoint URL:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"endpointURL\", t);\n                  }}\n                  value={this.state.endpointURL}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>Paper Resource Id:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"requestResourceId\", t);\n                  }}\n                  value={this.state.requestResourceId}\n                />\n              </Label>\n            </FormGroup>\n          </div>\n        </div>\n\n        <div style={{ width: \"40%\" }}>\n          <Button\n            onClick={() => {\n              this.executeQuery();\n            }}\n          >\n            Test Query\n          </Button>\n          <br />\n          Result\n          <textarea\n            rows=\"10\"\n            cols=\"50\"\n            style={{ width: \"100%\", height: \"100%\" }}\n            value={JSON.stringify(this.state.queryResult, null, \"\\t\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataAccessConfigurator.propTypes = {\n  store: PropTypes.object,\n  statePropagation: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataAccessConfigurator);\n","import BaseComponent from \"../Base/BaseComponent\";\n\nimport ResourceRelationModel from \"../Models/ResourceRelationModel\";\nimport Resource from \"../Models/Resource\";\nimport Relation from \"../Models/Relation\";\n\nexport default class ORKGParser extends BaseComponent {\n  constructor() {\n    super();\n    this.type = \"ORKGParser\";\n\n    this.definitionMap = {\n      // assertions\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": \"assertion\",\n      \"rdf:type\": \"assertion\",\n      //axioms\n      \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": \"axiom\",\n      \"http://www.w3.org/2000/01/rdf-schema#subPropertyOf\": \"axiom\",\n      \"http://www.w3.org/2002/07/owl#equivalentClass\": \"axiom\",\n\n      // annotations\n      \"http://www.w3.org/2000/01/rdf-schema#comment\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#label\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": \"annotation\",\n\n      // relational assertions:\n      \"owl:ObjectProperty\": \"relationalAssertion\",\n      \"owl:DatatypeProperty\": \"relationalAssertion\"\n    };\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    const m = new ResourceRelationModel();\n    const processedData = this._preProcess();\n    this._processData(m, processedData);\n  };\n\n  _processData(model, dataObject) {\n    dataObject.forEach(statement => {\n      // create resources for subjects and objects;\n      const subjectResource = new Resource();\n      subjectResource.resourceIdentifier(statement.subject.id);\n      subjectResource.addSemanticType(\"Resource\");\n      subjectResource.addAnnotation(\n        \"http://www.w3.org/2000/01/rdf-schema#label\",\n        statement.subject.label\n      );\n\n      const objectResource = new Resource();\n      objectResource.resourceIdentifier(statement.object.id);\n      if (statement.object._class === \"literal\") {\n        objectResource.addSemanticType(\"Literal\");\n      } else {\n        objectResource.addSemanticType(\"Resource\");\n      }\n      objectResource.addAnnotation(\n        \"http://www.w3.org/2000/01/rdf-schema#label\",\n        statement.object.label\n      );\n\n      const propertyRelation = new Relation();\n      propertyRelation.resourceIdentifier(statement.predicate.id);\n      propertyRelation.addSemanticType(\"Property\");\n      propertyRelation.addAnnotation(\n        \"http://www.w3.org/2000/01/rdf-schema#label\",\n        statement.predicate.label\n      );\n      propertyRelation.addDomain(statement.object.id);\n      propertyRelation.addRange(statement.object.id);\n      propertyRelation.addDomainRangePair(\n        statement.subject.id,\n        statement.object.id\n      );\n\n      model.addResource(subjectResource);\n      model.addRelation(propertyRelation);\n      model.addResource(objectResource);\n    });\n\n    this.resultObject.resultingModel = model;\n  }\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n\n  _preProcess = () => {\n    return this.inputDataAsJsonObject;\n  };\n}\n","// data handler is a base class;\n\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseNodeLinkMapper from \"./BaseNodeLinkMapper\";\n\nexport default class NodeLinkMapper extends BaseNodeLinkMapper {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_VERTEX_EDGE_MODEL;\n    this.hasCompatibleInput = false;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\",\n      \"http://www.w3.org/2002/07/owl#\": \"owl\",\n      \"http://www.w3.org/2001/XMLSchema#\": \"xsd\",\n      \"http://purl.org/dc/elements/1.1/\": \"dc\",\n      \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n      \"http://xmlns.com/wot/0.1/\": \"wot\",\n      \"http://www.w3.org/2003/06/sw-vocab-status/ns#\": \"vs\",\n      \"http://xmlns.com/foaf/0.1/\": \"foaf\",\n      \"http://www.w3.org/2004/02/skos/core#\": \"skos\"\n    };\n\n    this.definitionMap = {\n      nodeMapper: {\n        __nodeType: \"__vertexType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\"\n      },\n      linkMapper: {\n        __linkType: \"__edgeType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\",\n        __linkAxiom: \"__edgeAxiom\",\n        __source: \"__source\",\n        __target: \"__target\"\n      },\n      nodeMerge: [{}],\n      nodeSplit: [{}],\n      aggregate: [\"owl:datatypeProperty\"],\n      auxiliaryNodes: [] // here empty\n    };\n  }\n}\n","// data handler is a base class;\n\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseNodeLinkMapper from \"./BaseNodeLinkMapper\";\n\nexport default class NodeLinkMapper extends BaseNodeLinkMapper {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_VERTEX_EDGE_MODEL;\n    this.hasCompatibleInput = false;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\",\n      \"http://www.w3.org/2002/07/owl#\": \"owl\",\n      \"http://www.w3.org/2001/XMLSchema#\": \"xsd\",\n      \"http://purl.org/dc/elements/1.1/\": \"dc\",\n      \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n      \"http://xmlns.com/wot/0.1/\": \"wot\",\n      \"http://www.w3.org/2003/06/sw-vocab-status/ns#\": \"vs\",\n      \"http://xmlns.com/foaf/0.1/\": \"foaf\",\n      \"http://www.w3.org/2004/02/skos/core#\": \"skos\"\n    };\n\n    this.definitionMap = {\n      nodeMapper: {\n        __nodeType: \"__vertexType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\"\n      },\n      linkMapper: {\n        __linkType: \"__edgeType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\",\n        __linkAxiom: \"__edgeAxiom\",\n        __source: \"__source\",\n        __target: \"__target\"\n      },\n      nodeMerge: [\n        {\n          __linkType: \"axiomLink\",\n          __displayName: \"owl:equivalentClass\"\n        }\n      ],\n      nodeSplit: [\n        {\n          constraints: \"none\",\n          type: [\"rdfs:Literal\"]\n          // there could be more types like xsd:datatype or so\n        }\n      ],\n      auxiliaryNodes: [] // here empty\n    };\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  createPreviewVisualization,\n  updateRenderingModuleConfiguration\n} from \"./redux/actions\";\nimport { connect } from \"react-redux\";\nimport TabLikeHeader from \"./TabLikeHeader\";\nimport { Button } from \"reactstrap\";\n\nimport createZip from \"./createZip\";\nimport VisModal from \"./VisModal\";\nimport StaticLocalVowlJSONLoader from \"../Implementation/DataAccessComponent/StaticLocalVowlJSONLoader\";\nimport VOWLParser from \"../Implementation/Parsers/VOWLParser\";\nimport SparqlParser from \"../Implementation/Parsers/SparqlParser\";\nimport BaseVertexEdgeMapper from \"../Implementation/Mappers/BaseVertexEdgeMapper\";\nimport BaseNodeLinkMapper from \"../Implementation/Mappers/BaseNodeLinkMapper\";\nimport RenderingModuleConfig from \"./RenderingModuleConfig\";\nimport DataAccessConfigurator from \"./DataAccessConfigurator\";\nimport WikiDataAccessConfigurator from \"./WikiDataAccessConfigurator\";\n\nimport DBPediaLoader from \"../Implementation/DataAccessComponent/DBPediaLoader\";\nimport WikiDataLoader from \"../Implementation/DataAccessComponent/WikiDataLoader\";\nimport RDFNodeLinkMapper from \"../Implementation/Mappers/RDFNodeLinkMapper\";\nimport WikiDataExampleParser from \"../Implementation/Parsers/WikiDataParserExample\";\nimport ORKGAccessConfigurator from \"./ORKGAccessConfigurator\";\nimport OrkgDataLoader from \"../Implementation/DataAccessComponent/OrkgDataLoader\";\nimport ORKGParser from \"../Implementation/Parsers/ORKGParser\";\nimport UMLNodeLinkMapper from \"../Implementation/Mappers/UMLNodeLinkMapper\";\nimport VowlNodeLinkMapper from \"../Implementation/Mappers/VowlNodeLinkMapper\";\n\nclass PipeLineVis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      selectedModule: undefined,\n      selectionType: undefined,\n\n      dataAccessHandlerExecuted: false,\n      resourceRelationModel: undefined,\n\n      vertexEdgeMapperExecuted: false,\n      vertexEdgeModel: undefined,\n\n      nodeLinkMapperExecuted: false,\n      nodeLinkModel: undefined\n    };\n\n    this.basicVertexEdgeMapper = new BaseVertexEdgeMapper();\n    this.basicNodeLinkMapper = new BaseNodeLinkMapper();\n\n    this.childState = {\n      graph_mouseZoom: true,\n      graph_mouseDrag: true,\n      node_mouseDrag: true,\n      node_mouseHover: true,\n      node_mouseSingleClick: true,\n      node_mouseDoubleClick: true,\n      link_mouseDrag: true,\n      link_mouseHover: true,\n      // todo: link clicks ;\n      graphBgColor: \"#FFFFFF\",\n\n      // internal state stuffl\n      configSelectionOpen: false,\n      configSelected: \"Default\"\n    };\n\n    this.dataAccessHandler_DBPediaState = {\n      endpointURL: \"http://live.dbpedia.org/sparql/\",\n      graphURL: \"http://dbpedia.org\",\n      query:\n        \"PREFIX dbr: <http://dbpedia.org/resource/>\\n\" +\n        \"PREFIX dbo: <http://dbpedia.org/ontology/>\\n\" +\n        \"PREFIX owl: <http://www.w3.org/2002/07/owl#>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\n\\n\" +\n        \"SELECT  DISTINCT ?subject ?predicate ?object WHERE { \\n\" +\n        \"{dbr:Nikola_Tesla ?predicate ?object.\\n\" +\n        \"?object a owl:Class} \\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla dbo:birthDate ?object.\\n\" +\n        \"BIND(dbo:birthDate as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla dbo:deathDate ?object.\\n\" +\n        \"BIND(dbo:deathDate as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla rdfs:label ?object.\\n\" +\n        \"BIND(rdfs:label as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla rdfs:comment ?object.\\n\" +\n        \"BIND(rdfs:comment as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla ?foafPredicate ?object.\\n\" +\n        'FILTER(STRSTARTS(STR(?foafPredicate), \"http://xmlns.com/foaf/0.1/\"))\\n' +\n        \"BIND(?foafPredicate as ?predicate)\\n\" +\n        \"}\\n\" +\n        'FILTER(!isLiteral(?object) ||langMatches(lang(?object),\"EN\") || datatype(?object)=xsd:date)\\n' +\n        \"BIND(dbr:Nikola_Tesla as ?subject)}\\n\" +\n        \"Limit 100\",\n      queryResult: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = prevProps => {\n    if (\n      prevProps.store.selectedDataSource !== this.props.store.selectedDataSource\n    ) {\n      this.props.createPreviewVisualization(false);\n      this.setState({\n        dataAccessHandlerExecuted: false,\n        resourceRelationModel: undefined,\n        vertexEdgeMapperExecuted: false,\n        vertexEdgeModel: undefined\n      });\n    }\n\n    if (\n      prevProps.store.selectedNodeLinkMapper !==\n      this.props.store.selectedNodeLinkMapper\n    ) {\n      this.props.createPreviewVisualization(false);\n      this.setState({\n        nodeLinkMapperExecuted: false,\n        nodeLinkModel: undefined\n      });\n    }\n  };\n\n  exportPipeline = () => {\n    // read a zip file\n\n    const zipper = new createZip(this.props.store);\n    zipper.execute();\n  };\n\n  propagate_DBPEdiaConfiguratorState = state => {\n    this.dataAccessHandler_DBPediaState = state;\n  };\n\n  propagateState = state => {\n    this.childState = state;\n    if (this.props.store.createPreviewVisualization) {\n      this.props.createPreviewVisualization(false);\n    }\n  };\n\n  // node link mapper functions ;\n  configureNodeLinkMapper = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Node Link Mapper\",\n      selectionType: \"configure\"\n    });\n  };\n\n  executeNodeLinkMapper = moduleName => {\n    if (moduleName === \"Basic Mapper\") {\n      // create a simple data access handler and execute it;\n      if (this.state.vertexEdgeModel) {\n        this.basicNodeLinkMapper.setInputData(this.state.vertexEdgeModel);\n\n        this.basicNodeLinkMapper.execute().then(() => {\n          const nodeLinkModel = this.basicNodeLinkMapper.getResult();\n          this.setState({\n            nodeLinkMapperExecuted: true,\n            nodeLinkModel: nodeLinkModel\n          });\n        });\n      }\n    }\n    if (moduleName === \"VOWL\") {\n      if (this.state.vertexEdgeModel) {\n        const vowlNodeLinkMapper = new VowlNodeLinkMapper();\n        vowlNodeLinkMapper.setInputData(this.state.vertexEdgeModel);\n        vowlNodeLinkMapper.execute().then(() => {\n          const nodeLinkModel = vowlNodeLinkMapper.getResult();\n          this.setState({\n            nodeLinkMapperExecuted: true,\n            nodeLinkModel: nodeLinkModel\n          });\n        });\n      }\n    }\n\n    if (moduleName === \"RDF\") {\n      if (this.state.vertexEdgeModel) {\n        const rdfNodeLinkMapper = new RDFNodeLinkMapper();\n        rdfNodeLinkMapper.setInputData(this.state.vertexEdgeModel);\n        rdfNodeLinkMapper.execute().then(() => {\n          const nodeLinkModel = rdfNodeLinkMapper.getResult();\n          this.setState({\n            nodeLinkMapperExecuted: true,\n            nodeLinkModel: nodeLinkModel\n          });\n        });\n      }\n    }\n\n    if (moduleName === \"UML\") {\n      if (this.state.vertexEdgeModel) {\n        const umlNodeLinkMapper = new UMLNodeLinkMapper();\n        umlNodeLinkMapper.setInputData(this.state.vertexEdgeModel);\n        umlNodeLinkMapper.execute().then(() => {\n          const nodeLinkModel = umlNodeLinkMapper.getResult();\n          this.setState({\n            nodeLinkMapperExecuted: true,\n            nodeLinkModel: nodeLinkModel\n          });\n        });\n      }\n    }\n  };\n\n  viewNodeLinkMapperOutput = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Node Link Mapper\",\n      selectionType: \"viewOutput\"\n    });\n  };\n\n  /** this function is just for previewing the output of individual modules **/\n  replacer(key, value) {\n    // Filtering out properties\n    if (\n      key === \"__outgoingEdges\" ||\n      key === \"__incomingEdges\" ||\n      key === \"__outgoingLinks\" ||\n      key === \"__incomingLinks\" ||\n      key === \"resourceReference\"\n    ) {\n      return undefined;\n    }\n    return value;\n  }\n\n  configureVertexEdgeMapper = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Vertex Edge Mapper\",\n      selectionType: \"configure\"\n    });\n  };\n  executeVertexEdgeMapper = moduleName => {\n    if (moduleName === \"Basic Mapper\") {\n      // create a simple data access handler and execute it;\n      if (this.state.resourceRelationModel) {\n        this.basicVertexEdgeMapper.setInputData(\n          this.state.resourceRelationModel\n        );\n\n        this.basicVertexEdgeMapper.execute().then(() => {\n          const vertexEdgeModel = this.basicVertexEdgeMapper.getResult();\n          this.setState({\n            vertexEdgeMapperExecuted: true,\n            vertexEdgeModel: vertexEdgeModel\n          });\n        });\n      }\n    }\n  };\n  viewVertexEdgeMapperOutput = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Vertex Edge Mapper\",\n      selectionType: \"viewOutput\"\n    });\n  };\n\n  configureDataAccessHandler = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Data Access Handler\",\n      selectionType: \"configure\"\n    });\n  };\n\n  viewDataAccessHandlerOutput = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Data Access Handler\",\n      selectionType: \"viewOutput\"\n    });\n  };\n\n  executeDataAccessHandler = moduleName => {\n    let dataAccess = undefined;\n    let parser = undefined;\n\n    switch (moduleName) {\n      case \"Ontology File\":\n        dataAccess = new StaticLocalVowlJSONLoader();\n        parser = new VOWLParser();\n        break;\n\n      case \"DBPedia\":\n        dataAccess = new DBPediaLoader();\n        parser = new SparqlParser();\n        break;\n\n      case \"WikiData\":\n        dataAccess = new WikiDataLoader();\n        parser = new WikiDataExampleParser();\n        break;\n\n      case \"ORKG\":\n        dataAccess = new OrkgDataLoader();\n        parser = new ORKGParser();\n        break;\n\n      default: {\n        console.log(\"UNKNOWN EXECUTION MODULE NAME\");\n        return;\n      }\n    }\n\n    console.log(dataAccess);\n    dataAccess.execute().then(() => {\n      parser.setInputData(dataAccess.getResult());\n      parser.execute().then(() => {\n        const resourceModel = parser.getResult();\n        this.setState({\n          dataAccessHandlerExecuted: true,\n          resourceRelationModel: resourceModel\n        });\n      });\n    });\n  };\n\n  executeRenderingModule = () => {\n    this.props.createPreviewVisualization(true);\n    if (this.childState.hasOwnProperty(\"graph_mouseZoom\")) {\n      this.props.updateRenderingModuleConfiguration(this.childState);\n    }\n  };\n\n  configureRenderingModule = () => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Rendering Module\",\n      selectionType: \"configure\"\n    });\n  };\n\n  renderDataAccessHandler = () => {\n    const moduleName = this.props.store.selectedDataSource;\n    return (\n      <TabLikeHeader\n        title=\"Data Access Handler \"\n        position=\"left\"\n        width={330}\n        collapsable={false}\n      >\n        {moduleName}\n        <hr style={{ margin: \"1px\" }} />\n        <div\n          style={{\n            textAlign: \"left\",\n            display: \"inline\"\n          }}\n        >\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.configureDataAccessHandler(moduleName);\n            }}\n          >\n            Configure\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.dataAccessHandlerExecuted\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.executeDataAccessHandler(moduleName);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.resourceRelationModel\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.viewDataAccessHandlerOutput(moduleName);\n            }}\n          >\n            View Output\n          </Button>\n        </div>\n      </TabLikeHeader>\n    );\n  };\n\n  renderVertexEdgeMapper = () => {\n    const moduleName = this.props.store.selectedVertexEdgeMapper;\n    return (\n      <TabLikeHeader\n        title=\"Vertex Edge Mapper\"\n        position=\"left\"\n        width={320}\n        collapsable={false}\n      >\n        {moduleName}\n        <hr style={{ margin: \"1px\" }} />\n        <div\n          style={{\n            textAlign: \"left\",\n            display: \"inline\"\n          }}\n        >\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.configureVertexEdgeMapper(moduleName);\n            }}\n          >\n            Configure\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.vertexEdgeMapperExecuted\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.executeVertexEdgeMapper(moduleName);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.vertexEdgeModel\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.viewVertexEdgeMapperOutput(moduleName);\n            }}\n          >\n            View Output\n          </Button>\n        </div>\n      </TabLikeHeader>\n    );\n  };\n\n  renderNodeLinkMapper = () => {\n    const moduleName = this.props.store.selectedNodeLinkMapper;\n    return (\n      <TabLikeHeader\n        title=\"Node Link Mapper\"\n        position=\"left\"\n        width={320}\n        collapsable={false}\n      >\n        {moduleName}\n        <hr style={{ margin: \"1px\" }} />\n        <div\n          style={{\n            textAlign: \"left\",\n            display: \"inline\"\n          }}\n        >\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.configureNodeLinkMapper(moduleName);\n            }}\n          >\n            Configure\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.nodeLinkMapperExecuted\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.executeNodeLinkMapper(moduleName);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.nodeLinkModel ? \"#2f7d38\" : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.viewNodeLinkMapperOutput(moduleName);\n            }}\n          >\n            View Output\n          </Button>\n        </div>\n      </TabLikeHeader>\n    );\n  };\n\n  renderRenderingModule = () => {\n    const moduleName = \"Rendering ModuleTest\";\n    return (\n      <TabLikeHeader\n        title=\"Rendering Module\"\n        position=\"left\"\n        width={320}\n        collapsable={false}\n      >\n        {moduleName}\n        <hr style={{ margin: \"1px\" }} />\n        <div\n          style={{\n            textAlign: \"left\",\n            display: \"inline\"\n          }}\n        >\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.executeRenderingModule(moduleName);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.configureRenderingModule(moduleName);\n            }}\n          >\n            Configure\n          </Button>\n        </div>\n      </TabLikeHeader>\n    );\n  };\n\n  toggle = type => {\n    this.setState(prevState => ({\n      [type]: !prevState[type]\n    }));\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <div\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderBottomRightRadius: \"0\",\n            borderBottomLeftRadius: \"0\",\n            height: \"40px\",\n            width: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            color: \"white\",\n            backgroundColor: \"#ad2f38\"\n          }}\n        >\n          <div style={{ width: \"100%\", textAlign: \"left\", padding: \"5px\" }}>\n            {this.props.title}\n          </div>\n        </div>\n\n        <div\n          style={{\n            borderRadius: \"10px\",\n            padding: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderTopRightRadius: \"0\",\n            borderTopLeftRadius: \"0\",\n            color: \"black\",\n            backgroundColor: \"#ffffff\",\n            marginTop: \"-1px\",\n            position: \"relative\",\n            height: \"90%\",\n            width: \"100%\"\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              height: \"200px\",\n              textAlign: \"center\",\n              display: \"flex\",\n              flexFlow: \"wrap\"\n            }}\n          >\n            {this.renderDataAccessHandler()}\n            {this.renderVertexEdgeMapper()}\n            {this.renderNodeLinkMapper()}\n            {this.renderRenderingModule()}\n          </div>\n          <Button\n            style={{ height: 50, width: \"100%\" }}\n            onClick={() => this.exportPipeline()}\n          >\n            {\" \"}\n            Export Pipeline{\" \"}\n          </Button>\n        </div>\n\n        {this.state.selectedModule === \"Data Access Handler\" && (\n          <VisModal\n            title={\n              this.state.selectedModule +\n              \": \" +\n              this.props.store.selectedDataSource\n            }\n            toggle={() => this.toggle(\"showModal\")}\n            showDialog={this.state.showModal}\n          >\n            <div>\n              {this.props.store.selectedDataSource === \"Ontology File\" &&\n                this.state.selectionType === \"configure\" && (\n                  <div style={{ padding: \"5px\" }}>\n                    <div>This Module is not configurable in the demo.</div>\n                    <div>\n                      We are using an ontology file that has been converted\n                      using OWL2VOWL (input is a JSON file)\n                    </div>\n                    <div>\n                      You can find the file in{\" \"}\n                      <b>\"src/demoRequests/ontologyFile.json\"</b>\n                    </div>\n                  </div>\n                )}\n              {this.props.store.selectedDataSource === \"DBPedia\" &&\n                this.state.selectionType === \"configure\" && (\n                  <DataAccessConfigurator\n                    statePropagation={this.propagate_DBPEdiaConfiguratorState}\n                  />\n                )}\n\n              {this.props.store.selectedDataSource === \"WikiData\" &&\n                this.state.selectionType === \"configure\" && (\n                  <WikiDataAccessConfigurator\n                    statePropagation={() => {\n                      console.log(\"TODO\");\n                    }}\n                  />\n                )}\n\n              {this.props.store.selectedDataSource === \"ORKG\" &&\n                this.state.selectionType === \"configure\" && (\n                  <ORKGAccessConfigurator\n                    statePropagation={() => {\n                      console.log(\"TODO\");\n                    }}\n                  />\n                )}\n\n              {this.state.selectionType === \"viewOutput\" &&\n                this.state.selectedModule === \"Data Access Handler\" && (\n                  <div style={{ padding: \"5px\" }}>\n                    <div>\n                      {\" \"}\n                      Data Access Handler Output (Resource Relation Model)\n                    </div>\n                    {this.state.resourceRelationModel ? (\n                      <textarea\n                        rows=\"10\"\n                        cols=\"50\"\n                        style={{ width: \"100%\", height: \"100%\" }}\n                        readOnly={true}\n                        value={JSON.stringify(\n                          this.state.resourceRelationModel.resultingModel\n                            .modelAsJsonObject,\n                          null,\n                          \" \\t\"\n                        )}\n                      />\n                    ) : (\n                      \"Execute the module first.\"\n                    )}\n                  </div>\n                )}\n            </div>\n          </VisModal>\n        )}\n\n        {/*RENDER CONFIG FUR VERTEX EDGE MAPPER */}\n        {this.state.selectedModule === \"Vertex Edge Mapper\" && (\n          <VisModal\n            title={\n              this.state.selectedModule +\n              \": \" +\n              this.props.store.selectedVertexEdgeMapper\n            }\n            toggle={() => this.toggle(\"showModal\")}\n            showDialog={this.state.showModal}\n          >\n            <div>\n              {this.props.store.selectedVertexEdgeMapper === \"Basic Mapper\" &&\n                this.state.selectionType === \"configure\" && (\n                  <div style={{ padding: \"5px\" }}>\n                    <div>This Module is not configurable in the demo.</div>\n                    <textarea\n                      rows=\"10\"\n                      cols=\"50\"\n                      readOnly={true}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      value={JSON.stringify(\n                        this.basicVertexEdgeMapper.definitionMap,\n                        null,\n                        \" \\t\"\n                      )}\n                    />\n                  </div>\n                )}\n\n              {this.state.selectionType === \"viewOutput\" && (\n                <div>\n                  <div>Vertex Edge Mapper Output (Vertex Edge Model)</div>\n                  {this.state.vertexEdgeModel ? (\n                    <textarea\n                      rows=\"10\"\n                      cols=\"50\"\n                      readOnly={true}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      value={JSON.stringify(\n                        this.state.vertexEdgeModel.resultingModel\n                          .modelAsJsonObject,\n                        this.replacer,\n                        \" \\t\"\n                      )}\n                    />\n                  ) : (\n                    \"Execute the module first.\"\n                  )}\n                </div>\n              )}\n            </div>\n          </VisModal>\n        )}\n\n        {/*RENDER CONFIG FOR NODE LINK  MAPPER */}\n        {this.state.selectedModule === \"Node Link Mapper\" && (\n          <VisModal\n            title={\n              this.state.selectedModule +\n              \": \" +\n              this.props.store.selectedVertexEdgeMapper\n            }\n            toggle={() => this.toggle(\"showModal\")}\n            showDialog={this.state.showModal}\n          >\n            <div>\n              {this.props.store.selectedVertexEdgeMapper === \"Basic Mapper\" &&\n                this.state.selectionType === \"configure\" && (\n                  <div style={{ padding: \"5px\" }}>\n                    <div>This Module is not configurable in the demo.</div>\n                    <textarea\n                      rows=\"10\"\n                      cols=\"50\"\n                      readOnly={true}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      value={JSON.stringify(\n                        this.basicNodeLinkMapper.definitionMap,\n                        this.replacer,\n                        \" \\t\"\n                      )}\n                    />\n                  </div>\n                )}\n\n              {this.state.selectionType === \"viewOutput\" && (\n                <div>\n                  <div>Node Link Mapper Output (Vertex Edge Model)</div>\n                  {this.state.nodeLinkModel ? (\n                    <textarea\n                      rows=\"10\"\n                      cols=\"50\"\n                      readOnly={true}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      value={JSON.stringify(\n                        this.state.nodeLinkModel.resultingModel\n                          .modelAsJsonObject,\n                        this.replacer,\n                        \" \\t\"\n                      )}\n                    />\n                  ) : (\n                    \"Execute the module first.\"\n                  )}\n                </div>\n              )}\n            </div>\n          </VisModal>\n        )}\n        {this.state.selectedModule === \"Rendering Module\" && (\n          <VisModal\n            title={this.state.selectedModule + \"-- Configuration \"}\n            toggle={() => this.toggle(\"showModal\")}\n            showDialog={this.state.showModal}\n          >\n            <div>\n              <RenderingModuleConfig\n                propagateState={this.propagateState}\n                nodeLinkModel={this.state.nodeLinkModel}\n                initialState={this.childState}\n              />\n            </div>\n          </VisModal>\n        )}\n      </div>\n    );\n  }\n}\n\nPipeLineVis.propTypes = {\n  title: PropTypes.string,\n  selectedDataSource: PropTypes.string,\n  store: PropTypes.object,\n  createPreviewVisualization: PropTypes.func,\n  updateRenderingModuleConfiguration: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPreviewVisualization: payload =>\n      dispatch(createPreviewVisualization(payload)),\n    updateRenderingModuleConfiguration: payload => {\n      dispatch(updateRenderingModuleConfiguration(payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PipeLineVis);\n","export default class BasePrimitive {\n  constructor() {\n    this.__id = undefined;\n    this.__displayName = undefined;\n    this.__renderingConfig = undefined;\n    this.__drawTools = undefined;\n\n    this.__visible = true;\n\n    this.groupRoot = undefined;\n  }\n\n  visible(visible) {\n    if (!arguments.length) {\n      return this.__visible;\n    }\n    this.__visible = visible;\n  }\n\n  id(id) {\n    if (!arguments.length) {\n      return this.__id;\n    }\n    this.__id = id;\n  }\n\n  drawTools(drawTools) {\n    if (!arguments.length) {\n      return this.__drawTools;\n    }\n    this.__drawTools = drawTools;\n  }\n\n  displayName(nameStr) {\n    if (!arguments.length) {\n      return this.__displayName;\n    }\n    this.__displayName = nameStr;\n  }\n\n  renderingConfig = cfgObj => {\n    if (!cfgObj) {\n      return this.__renderingConfig;\n    }\n    // using deepCopy\n    this.__renderingConfig = JSON.parse(JSON.stringify(cfgObj));\n    // this will allow a primitive to overwrite the global definitions;\n  };\n\n  render() {\n    console.log(\"This is abstract function!\");\n  }\n}\n","import BasePrimitive from \"./BasePrimitive\";\n\nexport default class NodePrimitive extends BasePrimitive {\n  constructor() {\n    super();\n    this.x = 0;\n    this.y = 0;\n\n    this.incomingLinks = [];\n    this.outgoingLinks = [];\n    this.__numberOfLoops = 0;\n    this.__internalObjectType = \"node\";\n\n    this.__transition_animationDuration = 500; // default value;\n  }\n\n  addIncomingLink = link => {\n    this.incomingLinks.push(link);\n  };\n  addOutgoingLink = link => {\n    this.outgoingLinks.push(link);\n  };\n\n  setPosition = (x, y) => {\n    this.x = x;\n    this.y = y;\n  };\n\n  numberOfLoops(val) {\n    if (!arguments.length) {\n      return this.__numberOfLoops;\n    }\n    this.__numberOfLoops = val;\n  }\n\n  updateRenderingPosition = () => {\n    if (this.groupRoot) {\n      this.groupRoot.attr(\n        \"transform\",\n        \"translate(\" + this.x + \",\" + this.y + \")\"\n      );\n    }\n    // update all related links; (using concat as temp object to merge the links)\n    this.incomingLinks.concat(this.outgoingLinks).forEach(l => {\n      l.updateRenderingPosition();\n    });\n  };\n\n  removeAllRenderedElementsFromParent() {\n    if (this.groupRoot) {\n      // we have a parent;\n      this.groupRoot.selectAll(\"rect\").remove();\n      this.groupRoot.selectAll(\"text\").remove();\n      this.groupRoot.selectAll(\"g\").remove();\n    }\n  }\n\n  redraw() {\n    this.removeAllRenderedElementsFromParent();\n    this.render(this.groupRoot);\n  }\n\n  // this one will get the draw Functions replacement!\n  render = groupRoot => {\n    this.groupRoot = groupRoot;\n\n    // handle rendering based on the config;\n    const renderingElements = this.drawTools().renderNode(\n      this.groupRoot,\n      this.renderingConfig(),\n      this\n    );\n    this.renderingShape = renderingElements.renderingShape;\n    this.renderingText = renderingElements.renderingText;\n\n    this.updateRenderingPosition();\n  };\n}\n","import BasePrimitive from \"./BasePrimitive\";\n\nexport default class LinkPrimitive extends BasePrimitive {\n  constructor() {\n    super();\n    this.x = 0;\n    this.y = 0;\n    this.sourceNode = null;\n    this.targetNode = null;\n    this.__internalType = \"singleLink\";\n    this.propertyNodePostion = null;\n    this.__internalObjectType = \"link\";\n  }\n\n  setInternalType(type) {\n    this.__internalType = type;\n    // type can be loop, singleLink, multiLink ;\n  }\n\n  setTargetNode(node) {\n    this.targetNode = node;\n    node.addIncomingLink(this);\n  }\n  setSourceNode(node) {\n    this.sourceNode = node;\n    node.addOutgoingLink(this);\n  }\n\n  setPosition = (x, y) => {\n    this.x = x;\n    this.y = y;\n  };\n\n  getForceNode() {\n    if (\n      this.__internalType === \"loop\" ||\n      this.__internalType === \"multiLink\" ||\n      this.__internalType === \"singleLink\"\n    ) {\n      // get the data for the force node;\n      // based on the internal type we can decide if we want a force node\n      // here we return always a force node\n      return this.renderingShape.data();\n    }\n    return []; // if we dont want a force node for a property link then return empty array\n  }\n\n  getForceLink() {\n    if (this.__internalType === \"loop\") {\n      return [\n        {\n          source: this.sourceNode,\n          target: this.renderingShape.data()[0],\n          type: \"loop\"\n        }\n      ];\n    }\n    // if (this.__internalType === \"multiLink\" ) {\n    return [\n      {\n        source: this.sourceNode,\n        target: this.renderingShape.data()[0],\n        type: \"mlPart\"\n      },\n      {\n        source: this.renderingShape.data()[0],\n        target: this.targetNode,\n        type: \"mlPart\"\n      }\n    ];\n    // }\n    // *Force links can be done as a direct link or as multipart link // here we use always mutlipart links\n    // return [\n    //   {\n    //     source: this.sourceNode,\n    //     target: this.targetNode,\n    //     type: \"direct\"\n    //   }\n    // ];\n  }\n\n  updateRenderingPosition = () => {\n    // based on config; choose attribute selector;\n\n    if (this.renderingLine) {\n      // set its attributes based on the source and target nodes;\n      this.drawTools().updateLinePosition(\n        this,\n        this.renderingLine,\n        this.sourceNode,\n        this.targetNode,\n        this.__internalType,\n        this.renderingConfig().options.link_renderingType === \"curve\" ||\n          this.__internalType === \"loop\"\n      );\n\n      this.propertyNodePostion = this.drawTools().updatePropertyPosition(\n        this,\n        this.renderingShape,\n        this.sourceNode,\n        this.targetNode,\n        this.__internalType,\n        this.renderingConfig().options.link_renderingType === \"curve\"\n      );\n    }\n  };\n\n  resetPropertyPosition() {}\n\n  initializePropertyNodePosition() {\n    const pos = this.drawTools().lineTools.computeShapeBasedCenterPoint(\n      this.sourceNode,\n      this.targetNode,\n      1\n    );\n\n    this.propertyNodePostion = { x: pos.cx, y: pos.cy };\n  }\n\n  setPropertyNodePosition(pos) {\n    this.propertyNodePostion = pos;\n    if (this.renderingShape) {\n      this.renderingShape.data()[0].x = this.propertyNodePostion.x;\n      this.renderingShape.data()[0].px = this.propertyNodePostion.x;\n      this.renderingShape.data()[0].y = this.propertyNodePostion.y;\n      this.renderingShape.data()[0].py = this.propertyNodePostion.y;\n    }\n  }\n\n  // this one will get the draw Functions replacement!\n  render = (groupRoot, propertyContainer, arrowContainer) => {\n    this.groupRoot = groupRoot;\n    this.propertyContainer = propertyContainer;\n    this.arrowContainer = arrowContainer;\n\n    //rendering the link\n\n    let reloadPos = false;\n    if (this.renderingShape) {\n      reloadPos = true;\n      const oldPos = [\n        this.renderingShape.data()[0].x,\n        this.renderingShape.data()[0].y\n      ];\n\n      this.propertyNodePostion = { x: oldPos[0], y: oldPos[1] };\n    }\n\n    // handle rendering based on the config;\n    const renderingElements = this.drawTools().renderLink(\n      this.groupRoot,\n      this.propertyContainer,\n      this.arrowContainer,\n      this.renderingConfig(),\n      this\n    );\n    this.renderingLine = renderingElements.renderingLine;\n    this.renderingShape = renderingElements.renderingShape;\n    this.renderingText = renderingElements.renderingText;\n\n    if (this.__internalType !== \"loop\" && this.__internalType !== \"multiLink\") {\n      // CHECK THE CURVE ATTRIBUTE\n      if (this.renderingConfig().options.link_renderingType === \"line\") {\n        this.setInternalType(\"singleLink\");\n      } else {\n        if (\n          this.renderingConfig().options.link_renderingType === \"curve\" &&\n          this.__internalType !== \"loop\"\n        ) {\n          this.setInternalType(\"multiLink\");\n        }\n      }\n    }\n\n    if (reloadPos) {\n      this.renderingShape.data()[0].x = this.propertyNodePostion.x;\n      this.renderingShape.data()[0].px = this.propertyNodePostion.x;\n      this.renderingShape.data()[0].y = this.propertyNodePostion.y;\n      this.renderingShape.data()[0].py = this.propertyNodePostion.y;\n    }\n\n    this.updateRenderingPosition();\n  };\n}\n","export default class ShapeTools {\n  // we use the attributes of the shape to render it ;)\n  getShapeRadius = shape => {\n    // get the shape radius based on shape parameters;\n    return parseFloat(shape.attr(\"rx\"));\n  };\n\n  getShapeWidth = shape => {\n    // get the shape radius based on shape parameters;\n    return parseFloat(shape.attr(\"width\"));\n  };\n\n  getShapeHeight = shape => {\n    // get the shape radius based on shape parameters;\n    return parseFloat(shape.attr(\"height\"));\n  };\n}\n","import ShapeTools from \"./ShapeTools\";\n\nexport default class LineTools {\n  constructor() {\n    this.shapeTools = new ShapeTools();\n  }\n\n  computeCenterPoint(domain, range, offset) {\n    const cx = 0.5 * (range.x + domain.x) + offset;\n    const cy = 0.5 * (range.y + domain.y) + offset;\n    return { cx: cx, cy: cy };\n  }\n\n  computeShapeBasedCenterPoint(domain, range, offset) {\n    const domainOffset = 0.5 * parseInt(domain.renderingShape.attr(\"width\"));\n    const rangeOffset = 0.5 * parseInt(range.renderingShape.attr(\"width\"));\n\n    const cx =\n      domain.x +\n      domainOffset +\n      0.5 * (range.x - rangeOffset - domain.x + domainOffset);\n\n    const cy = 0.5 * (range.y + domain.y) + offset;\n\n    return { cx: cx, cy: cy };\n  }\n\n  computeIntersectionPointsWithProperty = (domain, range, link, offset) => {\n    let distOffset = 0;\n    if (offset) {\n      distOffset = offset;\n    }\n\n    const parentShape = link.renderingShape;\n    parentShape.data()[0].updateRenderingPosition();\n\n    const iP_Src = { x: domain.x, y: domain.y };\n    const iP_Prop = { x: parentShape.data()[0].x, y: parentShape.data()[0].y };\n    const iP_Tar = { x: range.x, y: range.y };\n\n    if (link.__internalType !== \"loop\") {\n      let offsetDirection = this.__computeNormalizedOffsetDirection(\n        iP_Src,\n        iP_Prop\n      );\n      this.__shapeBasedIntersection(\n        iP_Src,\n        domain,\n        offsetDirection,\n        distOffset\n      );\n\n      offsetDirection = this.__computeNormalizedOffsetDirection(\n        iP_Tar,\n        iP_Prop\n      );\n      this.__shapeBasedIntersection(iP_Tar, range, offsetDirection, distOffset);\n    } else {\n      let divisor = 2;\n      if (domain.numberOfLoops() > 0) {\n        divisor = domain.numberOfLoops();\n      }\n      const fairShareLoopAngle = 360 / divisor,\n        fairShareLoopAngleWithMargin = fairShareLoopAngle * 0.8,\n        loopAngle = Math.min(60, fairShareLoopAngleWithMargin);\n\n      const dx = iP_Prop.x - domain.x,\n        dy = iP_Prop.y - domain.y,\n        labelRadian = Math.atan2(dy, dx),\n        labelAngle = this.__calculateAngle(labelRadian);\n      const startAngle = labelAngle - loopAngle / 2;\n      const endAngle = labelAngle + loopAngle / 2;\n\n      // TODO UPDATE BASED ON SHAPE DEFINITIONS (rect, circle[x], ellipse )\n\n      const radius =\n        this.shapeTools.getShapeRadius(domain.renderingShape) + distOffset;\n      const width =\n        this.shapeTools.getShapeWidth(domain.renderingShape) + distOffset;\n      const height =\n        this.shapeTools.getShapeHeight(domain.renderingShape) + distOffset;\n\n      let usedRadius = Math.min(0.5 * width, 0.5 * height);\n      if (width === height) {\n        usedRadius = radius;\n      }\n\n      const arcFrom = this.__calculateRadian(startAngle),\n        arcTo = this.__calculateRadian(endAngle),\n        x1 = Math.cos(arcFrom) * usedRadius,\n        y1 = Math.sin(arcFrom) * usedRadius,\n        x2 = Math.cos(arcTo) * usedRadius,\n        y2 = Math.sin(arcTo) * usedRadius;\n\n      return [\n        [domain.x + x1, domain.y + y1],\n        [iP_Prop.x, iP_Prop.y],\n        [domain.x + x2, domain.y + y2]\n      ];\n    }\n    return [\n      [iP_Src.x, iP_Src.y],\n      [iP_Prop.x, iP_Prop.y],\n      [iP_Tar.x, iP_Tar.y]\n    ];\n  };\n\n  __calculateRadian(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n      angle = angle + 360;\n    }\n    return (Math.PI * angle) / 180;\n  }\n\n  __calculateAngle(radian) {\n    return radian * (180 / Math.PI);\n  }\n\n  computeIntersectionPoints = (domain, range, offset) => {\n    // get the shape parameter for domain;\n    let distOffset = 0;\n    if (offset) {\n      distOffset = offset;\n    }\n    const iP_Src = { x: domain.x, y: domain.y };\n    const iP_Tar = { x: range.x, y: range.y };\n    let offsetDirection = this.__computeNormalizedOffsetDirection(\n      domain,\n      range\n    );\n    this.__shapeBasedIntersection(iP_Src, domain, offsetDirection, distOffset);\n\n    offsetDirection = this.__computeNormalizedOffsetDirection(range, domain);\n    this.__shapeBasedIntersection(iP_Tar, range, offsetDirection, distOffset);\n    return [\n      [iP_Src.x, iP_Src.y],\n      [iP_Tar.x, iP_Tar.y]\n    ];\n  };\n\n  __computeNormalizedOffsetDirection(source, target) {\n    const x = target.x - source.x;\n    const y = target.y - source.y;\n\n    const len = Math.sqrt(x * x + y * y);\n    return { x: x / len, y: y / len };\n  }\n\n  __shapeBasedIntersection(IntPoint, node, offsetDirection, distOffset) {\n    const cfg = node.renderingConfig();\n    if (cfg.style.renderingType === \"circle\") {\n      const distanceToBorder =\n        this.shapeTools.getShapeRadius(node.renderingShape) + distOffset;\n      IntPoint.x = node.x + distanceToBorder * offsetDirection.x;\n      IntPoint.y = node.y + distanceToBorder * offsetDirection.y;\n      // return;\n    } else if (\n      cfg.style.renderingType === \"rect\" ||\n      cfg.style.renderingType === \"ellipse\"\n    ) {\n      const width =\n        this.shapeTools.getShapeWidth(node.renderingShape) + distOffset;\n\n      const height =\n        this.shapeTools.getShapeHeight(node.renderingShape) + distOffset;\n\n      const distanceToBorderX = 0.5 * parseFloat(width);\n      const distanceToBorderY = 0.5 * parseFloat(height);\n      let scale;\n      if (Math.abs(offsetDirection.x) >= Math.abs(offsetDirection.y)) {\n        scale = 1.0 / Math.abs(offsetDirection.x);\n      } else {\n        scale = 1.0 / Math.abs(offsetDirection.y);\n      }\n      IntPoint.x = node.x + scale * distanceToBorderX * offsetDirection.x;\n      IntPoint.y = node.y + scale * distanceToBorderY * offsetDirection.y;\n      return IntPoint;\n    } else {\n      // default >> center of the node\n      IntPoint.x = node.x;\n      IntPoint.y = node.y;\n    }\n  }\n}\n","import * as d3 from \"d3\";\nimport LineTools from \"./LineTools\";\n\nexport default class DrawTools {\n  constructor(graph) {\n    // default one;\n    this.lineTools = new LineTools();\n    this.renderingConfigHandler = graph.getRenderingHandler();\n  }\n\n  renderShadowNode(groupContainer, renderingConfig, node) {\n    // node is used to get its data when we need to render it;\n    // the rendering order is the following\n    // 1) Shape\n    const renderingShape = groupContainer.append(\"rect\");\n    const shapeConfig = renderingConfig.style;\n    this.renderBaseShape(renderingShape, shapeConfig);\n    this.applyShapeStyle(renderingShape, shapeConfig);\n    const displayName = this.drawDisplayName(\n      groupContainer,\n      node.__displayName,\n      renderingConfig\n    );\n\n    this.applyAdditionalOptions(\n      groupContainer,\n      renderingShape,\n      displayName,\n      renderingConfig,\n      node\n    );\n    // handle options;\n    // 3 Additional Icons provided by extensions [TODO];\n    return { renderingShape: renderingShape, renderingText: displayName };\n  }\n\n  renderNode(groupContainer, renderingConfig, node) {\n    // node is used to get its data when we need to render it;\n    // the rendering order is the following\n    // 1) Shape\n    const renderingShape = groupContainer.append(\"rect\");\n    const shapeConfig = renderingConfig.style;\n    this.renderBaseShape(renderingShape, shapeConfig);\n    this.applyShapeStyle(renderingShape, shapeConfig);\n    const displayName = this.drawDisplayName(\n      groupContainer,\n      node.displayName(),\n      renderingConfig\n    );\n\n    this.applyAdditionalOptions(\n      groupContainer,\n      renderingShape,\n      displayName,\n      renderingConfig,\n      node\n    );\n    // handle options;\n    // 3 Additional Icons provided by extensions [TODO];\n    return { renderingShape: renderingShape, renderingText: displayName };\n  }\n\n  renderLink(\n    groupContainer,\n    propertyContainer,\n    arrowContainer,\n    renderingConfig,\n    link\n  ) {\n    const renderingLine = this.__createLinkLine(\n      groupContainer,\n      renderingConfig\n    );\n\n    let renderingShape = null;\n    let renderingText = null;\n    // we dont care about the arrows, they handle them selfs;\n    if (renderingConfig.options.drawArrowHead) {\n      this.__drawArrowHead(\n        groupContainer,\n        arrowContainer,\n        \"arrowHead_\" + link.id(),\n        renderingConfig.style.arrowHead\n      );\n    }\n    if (renderingConfig.options.drawArrowTail) {\n      this.__drawArrowTail(\n        groupContainer,\n        arrowContainer,\n        \"arrowTail_\" + link.id(),\n        renderingConfig.style.arrowTail\n      );\n    }\n    if (renderingConfig.options.drawPropertyNode) {\n      const groupContainer = null;\n      const renderingElements = this.__createRenderingShapeForPropertyNode(\n        propertyContainer,\n        groupContainer,\n        renderingConfig.style.propertyNode,\n        link\n      );\n      renderingShape = renderingElements.renderingShape;\n      renderingText = renderingElements.displayName;\n    }\n\n    return {\n      renderingLine: renderingLine,\n      renderingShape: renderingShape,\n      renderingText: renderingText\n    };\n  }\n\n  __createRenderingShapeForPropertyNode(\n    propertyContainer,\n    groupContainer,\n    cfg,\n    link\n  ) {\n    // create a group container for that thing\n    groupContainer = propertyContainer.append(\"g\");\n    const itemId =\n      \"PROPERTY_NODE_\" +\n      link.sourceNode.id() +\n      \"_\" +\n      link.id() +\n      \"_\" +\n      link.targetNode.id();\n    groupContainer.node().id = itemId;\n\n    // groupContainer.attr('id', 'PROPERTY_NODE_' + 0 + '_' + 1);\n    const dataObj = {\n      x: link.x,\n      y: link.y,\n      __id: itemId,\n      ref: link,\n      groupRoot: groupContainer\n    };\n    groupContainer.node().__data__ = dataObj;\n    dataObj.id = function() {\n      return this.__id;\n    };\n    dataObj.updateRenderingPosition = function() {\n      this.groupRoot.attr(\n        \"transform\",\n        \"translate(\" + this.x + \",\" + this.y + \")\"\n      );\n    };\n    dataObj.setPosition = function(x, y) {\n      this.x = x;\n      this.y = y;\n    };\n    const elements = this.renderNode(groupContainer, cfg, link); // just reuse of the node rendering function\n    return {\n      renderingShape: elements.renderingShape,\n      displayName: elements.displayName\n    };\n  }\n\n  __createLinkLine(group, config) {\n    const linkLine = group.append(\"path\"); // default if not found\n    this._addStrokeElements(linkLine, config.style.link, \"line\");\n    linkLine.style(\"fill\", \"none\");\n    return linkLine;\n  }\n\n  __drawArrowHead(parent, container, identifier, cfg) {\n    this.__drawArrowPrimitive(parent, container, identifier, cfg, \"marker-end\");\n  }\n  __drawArrowTail(parent, container, identifier, cfg) {\n    this.__drawArrowPrimitive(\n      parent,\n      container,\n      identifier,\n      cfg,\n      \"marker-start\"\n    );\n  }\n\n  __drawArrowPrimitive(parent, container, identifier, cfg, makerType) {\n    const scale = parseFloat(cfg.scaleFactor);\n    const v1 = scale * -14;\n    const v2 = scale * -10;\n    const v3 = scale * 28;\n    const v4 = scale * 20;\n\n    const vB_String = v1 + \" \" + v2 + \" \" + v3 + \" \" + v4;\n    const arrowHead = container\n      .append(\"marker\")\n      // .datum(property)\n      .attr(\"id\", identifier)\n      .attr(\"viewBox\", vB_String)\n      .attr(\"markerWidth\", scale * 10)\n      .attr(\"markerHeight\", scale * 10)\n      //.attr(\"markerUnits\", \"userSpaceOnUse\")\n      .attr(\"orient\", \"auto\");\n\n    parent.attr(makerType, \"url(#\" + identifier + \")\");\n    const renderingShape = arrowHead.append(\"path\");\n    if (cfg.renderingType === \"triangle\") {\n      const m1X = -12 * scale;\n      const m1Y = 8 * scale;\n      const m2X = -12 * scale;\n      const m2Y = -8 * scale;\n      renderingShape.attr(\n        \"d\",\n        \"M0,0L \" + m1X + \",\" + m1Y + \"L\" + m2X + \",\" + m2Y + \"L\" + 0 + \",\" + 0\n      );\n    }\n    if (cfg.renderingType === \"diamond\") {\n      const p0 = 0;\n      const p1 = -8 * scale;\n      const p2 = 8 * scale;\n      const pathString =\n        \"M\" +\n        p0 +\n        \",\" +\n        p1 +\n        \"L\" +\n        p2 +\n        \",\" +\n        p0 +\n        \"L\" +\n        p0 +\n        \",\" +\n        p2 +\n        \"L\" +\n        p1 +\n        \",\" +\n        p0 +\n        \"L\" +\n        p0 +\n        \",\" +\n        p1 +\n        \"L\" +\n        p2 +\n        \",\" +\n        p0 +\n        \"\";\n      renderingShape.attr(\"d\", pathString);\n    }\n\n    renderingShape.style(\"stroke\", cfg.strokeColor);\n    renderingShape.style(\"stroke-width\", cfg.strokeWidth);\n    renderingShape.style(\"fill\", cfg.fillColor);\n    if (cfg.strokeStyle !== \"solid\") {\n      if (cfg.strokeStyle === \"dashed\") {\n        renderingShape.style(\"stroke-dasharray\", 8);\n      }\n      if (cfg.strokeStyle === \"dotted\") {\n        renderingShape.style(\"stroke-dasharray\", 3);\n      }\n    }\n  }\n\n  updateLinePosition(link, line, src, tar, linkType, curve) {\n    // handling internal type overwrites;\n    if (linkType === \"loop\" || linkType === \"multiLink\") {\n      curve = true;\n    }\n\n    if (curve === false) {\n      const controlPoints = this.lineTools.computeIntersectionPoints(\n        src,\n        tar,\n        1\n      );\n      line.attr(\"d\", this.__directLineFunction(controlPoints));\n    } else {\n      const controlPoints = this.lineTools.computeIntersectionPointsWithProperty(\n        src,\n        tar,\n        link,\n        1\n      );\n      if (linkType === \"loop\") {\n        line.attr(\"d\", this.__loopLineFunction(controlPoints));\n      } else {\n        line.attr(\"d\", this.__curveLineFunction(controlPoints));\n      }\n    }\n  }\n\n  updatePropertyPosition(link, shape, src, tar, linkType, curve) {\n    if (linkType === \"loop\" || linkType === \"multiLink\") {\n      curve = true;\n    }\n    if (curve) {\n      if (shape) {\n        const parentGroup = shape.node().parentNode;\n        const x = d3.select(parentGroup).data()[0].x;\n        const y = d3.select(parentGroup).data()[0].y;\n\n        return { x, y };\n      }\n      return; // nothing to do here\n    }\n    if (shape) {\n      const parentGroup = shape.node().parentNode;\n      if (parentGroup) {\n        if (curve === false) {\n          const controlPoints = this.lineTools.computeIntersectionPointsWithProperty(\n            src,\n            tar,\n            link,\n            1\n          );\n          // const centerPoint = this.lineTools.computeCenterPoint(src, tar, 1);\n          const centerPoint = {\n            cx: 0.5 * (controlPoints[2][0] + controlPoints[0][0]),\n            cy: 0.5 * (controlPoints[2][1] + controlPoints[0][1])\n          };\n\n          d3.select(parentGroup)\n            .data()[0]\n            .setPosition(centerPoint.cx, centerPoint.cy);\n          d3.select(parentGroup)\n            .data()[0]\n            .updateRenderingPosition();\n        }\n      }\n    }\n  }\n\n  __directLineFunction = d3.svg.line();\n  __curveLineFunction = d3.svg.line().interpolate(\"cardinal\");\n  __loopLineFunction = d3.svg\n    .line()\n    .interpolate(\"cardinal\")\n    .tension(-1);\n\n  drawDisplayName = (group, text, cfg) => {\n    // 2) Label\n\n    if (cfg.options.drawDisplayName === true) {\n      return this._drawText(group, text, cfg.fontStyle);\n    }\n    // will return undefined when does not fit\n  };\n\n  measureTextWidth(text, fontFamily, fontSize) {\n    const d = d3.select(\"body\").append(\"text\");\n    d.attr(\"id\", \"width-test\");\n    d.attr(\n      \"style\",\n      \"position:absolute; float:left; white-space:nowrap; font-family:\" +\n        fontFamily +\n        \";font-size: \" +\n        fontSize\n    );\n\n    d.text(text);\n    const w = document.getElementById(\"width-test\").offsetWidth;\n    d.remove();\n    return w;\n  }\n  measureTextHeight(text, fontFamily, fontSize) {\n    const d = d3.select(\"body\").append(\"text\");\n    d.attr(\"id\", \"width-test\");\n    d.attr(\n      \"style\",\n      \"position:absolute; float:left; white-space:nowrap; font-family:\" +\n        fontFamily +\n        \";font-size: \" +\n        fontSize\n    );\n\n    d.text(text);\n    const w = document.getElementById(\"width-test\").offsetHeight;\n    d.remove();\n    return w;\n  }\n\n  applyAdditionalOptions = (group, shape, label, config, node) => {\n    const options = config.options;\n    if (options.addTitleForDisplayName) {\n      group.append(\"title\").text(label.text());\n    }\n\n    // apply position changes after the whole stuff;\n    if (options.fontSizeOverWritesShapeSize === true) {\n      const labelBBWidth = this.measureTextWidth(\n        label.text(),\n        config.fontStyle.fontFamily,\n        config.fontStyle.fontSize\n      );\n\n      shape.attr(\"x\", -0.5 * (labelBBWidth + options.overwriteOffset));\n      shape.attr(\"width\", labelBBWidth + options.overwriteOffset);\n    }\n\n    if (options.cropLongText) {\n      if (\n        this.measureTextWidth(\n          label.text(),\n          config.fontStyle.fontFamily,\n          config.fontStyle.fontSize\n        ) > parseFloat(shape.attr(\"width\"))\n      ) {\n        // crop that thing;\n        const croppedText = this.cropText(\n          label.text(),\n          config.fontStyle,\n          parseFloat(shape.attr(\"width\"))\n        );\n\n        label.text(croppedText);\n      }\n    }\n\n    if (\n      options.drawNestedAttributes === true &&\n      node.refereceResource &&\n      node.refereceResource.__aggregatedLink &&\n      node.refereceResource.__aggregatedLink.length > 0\n    ) {\n      // fetch aggregated links from resource;\n      const nestedLinks = node.refereceResource.__aggregatedLink;\n\n      const width = 220;\n      const height = parseFloat(shape.attr(\"height\")) + nestedLinks.length * 35;\n\n      shape.attr(\"x\", -0.5 * width);\n      shape.attr(\"y\", -0.5 * height);\n      shape.attr(\"width\", width);\n      shape.attr(\"height\", height);\n      // pre-compute the shape size based on the types;\n\n      const labelBBHeight = this.measureTextHeight(\n        label.text(),\n        config.fontStyle.fontFamily,\n        config.fontStyle.fontSize\n      );\n      // this is height align CENTER;\n      // it sets the center of the labelBB into the center (0,0) of the rendering group;\n      const offset = -0.5 * height + labelBBHeight;\n      label.attr(\"dy\", offset + \"px\");\n\n      // draw header line;\n      const line = group.append(\"line\");\n\n      const x = shape.attr(\"x\");\n      const y = shape.attr(\"y\");\n      const w = shape.attr(\"width\");\n\n      const fontSizeProperty = window\n        .getComputedStyle(label.node())\n        .getPropertyValue(\"font-size\");\n      const fontSize = parseFloat(fontSizeProperty);\n      const linePosY = parseFloat(y) + 8 + fontSize;\n      const linePosX = parseFloat(x) + parseFloat(w);\n      line\n        .attr(\"x1\", x)\n        .attr(\"y1\", linePosY)\n        .attr(\"x2\", linePosX)\n        .attr(\"y2\", linePosY);\n      line.style(\"stroke\", \"black\");\n      const nestedGroup = group.append(\"g\");\n      nestedGroup.attr(\"id\", \"NestedGroupForNode\" + node.id());\n\n      let offsetVal = 0;\n\n      // TODO: proper computation of element distances and uml styled height\n      const shift = 24 - nestedLinks.length * 15;\n\n      nestedLinks.forEach(link => {\n        // do crop the text;\n        const subGroupProperty = nestedGroup.append(\"g\");\n        const subGroupNode = nestedGroup.append(\"g\");\n\n        // get the rendering config for the link property;\n        const linkCFG = this.renderingConfigHandler.getLinkConfigFromType(\n          link.__linkType\n        );\n\n        const nodeCFG = this.renderingConfigHandler.getNodeConfigFromType(\n          link.__target.__nodeType\n        );\n\n        this.renderShadowNode(\n          subGroupProperty,\n          linkCFG.style.propertyNode,\n          link\n        );\n\n        // shift to left side;\n        subGroupProperty.attr(\n          \"transform\",\n          \"translate(\" + -55 + \",\" + (shift + offsetVal) + \")\"\n        );\n\n        this.renderShadowNode(subGroupNode, nodeCFG, link.__target);\n\n        subGroupNode.attr(\n          \"transform\",\n          \"translate(\" + 55 + \",\" + (shift + offsetVal) + \")\"\n        );\n\n        offsetVal += 35;\n      });\n    }\n\n    if (\n      (!options.drawNestedAttributes ||\n        (node.refereceResource &&\n          node.refereceResource.__aggregatedLink &&\n          node.refereceResource.__aggregatedLink.length === 0)) &&\n      options.fontPositionV &&\n      options.fontPositionV === \"center\"\n    ) {\n      this._text_vAlignCenter(label, shape, config);\n    }\n\n    if (options.fontPositionH && options.fontPositionH === \"center\") {\n      this._text_hAlignCenter(label, shape, config);\n    }\n  };\n\n  _text_vAlignCenter = (label, shape, config) => {\n    const labelBBHeight = this.measureTextHeight(\n      label.text(),\n      config.fontStyle.fontFamily,\n      config.fontStyle.fontSize\n    );\n\n    // this is height align CENTER;\n    // it sets the center of the labelBB into the center (0,0) of the rendering group;\n    const offset = 0.25 * labelBBHeight;\n    label.attr(\"dy\", offset + \"px\");\n  };\n\n  _text_hAlignCenter = (label, shape, config) => {\n    const labelBBWidth = this.measureTextWidth(\n      label.text(),\n      config.fontStyle.fontFamily,\n      config.fontStyle.fontSize\n    );\n    const offset = -0.5 * labelBBWidth;\n    label.attr(\"dx\", offset + \"px\");\n  };\n\n  _drawText(container, text, cfg) {\n    const renderingTextElement = container.append(\"text\").text(text);\n\n    // apply different styles that are provided by the config\n    renderingTextElement.style(\"font-family\", cfg.fontFamily);\n    renderingTextElement.style(\"font-size\", cfg.fontSize);\n    renderingTextElement.style(\"fill\", cfg.fontColor);\n    renderingTextElement.style(\"pointer-events\", \"none\");\n    return renderingTextElement;\n  }\n\n  _addStrokeElements = (element, cfg, selector) => {\n    const color = cfg[selector + \"Color\"];\n    const width = cfg[selector + \"Width\"];\n    const style = cfg[selector + \"Style\"];\n\n    element.style(\"stroke\", color);\n    element.style(\"stroke-width\", width);\n    if (style !== \"solid\") {\n      if (style === \"dashed\") {\n        element.style(\"stroke-dasharray\", 8);\n      }\n      if (style === \"dotted\") {\n        element.style(\"stroke-dasharray\", 3);\n      }\n    }\n  };\n\n  applyShapeStyle = (targetPrimitive, renderingConfig) => {\n    targetPrimitive.attr(\"fill\", renderingConfig.bgColor);\n    this._addStrokeElements(targetPrimitive, renderingConfig, \"stroke\");\n  };\n\n  renderBaseShape = (targetPrimitive, renderingConfig) => {\n    const radius = parseInt(renderingConfig.radius);\n    const width = parseInt(renderingConfig.width);\n    const height = parseInt(renderingConfig.height);\n\n    // check if is uml style << TODO;\n    /**  render a pure circle **/\n    if (renderingConfig.renderingType === \"circle\") {\n      targetPrimitive.attr(\"x\", -radius);\n      targetPrimitive.attr(\"y\", -radius);\n      targetPrimitive.attr(\"width\", 2 * radius);\n      targetPrimitive.attr(\"height\", 2 * radius);\n      targetPrimitive.attr(\"rx\", radius);\n      targetPrimitive.attr(\"ry\", radius);\n    }\n\n    /**  render a rectangle with possible rounded corners provided by config **/\n    if (renderingConfig.renderingType === \"rect\") {\n      targetPrimitive.attr(\"x\", -0.5 * width);\n      targetPrimitive.attr(\"y\", -0.5 * height);\n      targetPrimitive.attr(\"width\", width);\n      targetPrimitive.attr(\"height\", height);\n      if (renderingConfig.roundedCorner) {\n        const tok = renderingConfig.roundedCorner.split(\",\");\n        targetPrimitive.attr(\"rx\", parseFloat(tok[0]));\n        targetPrimitive.attr(\"ry\", parseFloat(tok[1]));\n      }\n    }\n\n    /**  render an ellipse **/\n    if (renderingConfig.renderingType === \"ellipse\") {\n      targetPrimitive.attr(\"x\", -0.5 * width);\n      targetPrimitive.attr(\"y\", -0.5 * height);\n      targetPrimitive.attr(\"width\", width);\n      targetPrimitive.attr(\"height\", height);\n      targetPrimitive.attr(\"rx\", width);\n      targetPrimitive.attr(\"ry\", height);\n    }\n  };\n\n  // crop functions;\n\n  cropText(input, config, width) {\n    let truncatedText = input;\n    let textWidth;\n    let ratio;\n    let newTruncatedTextLength;\n    while (true) {\n      textWidth = this.measureTextWidth(\n        truncatedText,\n        config.fontFamily,\n        config.fontSize\n      );\n      if (textWidth <= width) {\n        break;\n      }\n      ratio = textWidth / width;\n      newTruncatedTextLength = Math.floor(truncatedText.length / ratio);\n      if (truncatedText.length === newTruncatedTextLength) {\n        break;\n      }\n      truncatedText = truncatedText.substring(0, newTruncatedTextLength);\n    }\n    if (input.length > truncatedText.length) {\n      return input.substring(0, truncatedText.length - 6) + \"...\";\n    }\n    return input;\n  }\n}\n","import BaseLayoutComponent from \"./BaseLayoutComponent\";\nimport * as d3 from \"d3\";\n\nexport default class ForceLayout extends BaseLayoutComponent {\n  constructor(graph) {\n    super(graph);\n    this.force = undefined;\n    this.forceLinks = [];\n    this.forceNodes = [];\n    this.linkDistance = \"auto\";\n    this.distanceValue = 300;\n    this.layoutSize = [];\n  }\n\n  pauseForceLayoutAnimation = doPause => {\n    if (doPause) {\n      this.stopForce();\n    } else {\n      this.resumeForce();\n    }\n  };\n\n  setLinkDistance(value) {\n    this.distanceValue = value;\n    if (this.force) {\n      this.force.linkDistance(value);\n    }\n  }\n  resumeForce() {\n    if (this.force) {\n      this.force.resume();\n    }\n  }\n  stopForce() {\n    if (this.force) {\n      this.force.stop();\n    }\n  }\n  toggleForce() {\n    if (this.force) {\n      if (this.force.alpha() === 0) {\n        this.force.resume();\n      } else {\n        this.force.stop();\n      }\n    }\n  }\n\n  initializeLayoutEngine() {\n    this.updateLayoutSize();\n\n    this.renderedNodes = this.graph.nodes;\n\n    this.renderedLinks = this.graph.links;\n    if (this.force) {\n      this.force.stop();\n    }\n    this.createForceElements();\n    this.force.start();\n    this.force.stop();\n  }\n\n  updateLayoutSize() {\n    const bb = this.graph.svgRoot.node().getBoundingClientRect();\n    this.layoutSize[0] = bb.width;\n    this.layoutSize[1] = bb.height;\n  }\n\n  recalculatePositions = () => {\n    this.renderedNodes.forEach(node => {\n      node.updateRenderingPosition();\n    });\n    this.renderedLinks.forEach(link => {\n      link.updateRenderingPosition();\n    });\n  };\n\n  createForceElements = () => {\n    const that = this;\n    if (this.force === undefined) {\n      this.force = d3.layout.force();\n    }\n\n    this.forceLinks = [];\n    this.forceNodes = [];\n    let i;\n\n    for (i = 0; i < this.renderedNodes.length; i++) {\n      if (this.renderedNodes[i].visible()) {\n        this.forceNodes.push(this.renderedNodes[i]);\n      }\n    }\n\n    for (i = 0; i < this.renderedLinks.length; i++) {\n      if (this.renderedLinks[i].visible()) {\n        this.forceLinks = this.forceLinks.concat(\n          this.renderedLinks[i].getForceLink()\n        );\n        this.forceNodes = this.forceNodes.concat(\n          this.renderedLinks[i].getForceNode()\n        );\n      }\n    }\n\n    this.force.nodes(this.forceNodes);\n    this.force.links(this.forceLinks);\n\n    this.forceNodes.forEach(node => {\n      node.layoutHandlerReference = this;\n    });\n\n    this.forceLinks.forEach(link => {\n      link.layoutHandlerReference = this;\n    });\n\n    this.distanceValue = 400;\n    this.force\n      .charge(function(/*element*/) {\n        // element can have charge value\n        // here constant\n        return -400;\n      })\n      .linkDistance(this.computeLinkDistance) // just make sure that our links are not to long.\n      .linkStrength(0.5)\n      .size([that.layoutSize[0], that.layoutSize[1]])\n      .gravity(0.025);\n\n    this.recalculatePositions();\n    this.force.on(\"tick\", this.recalculatePositions);\n  };\n\n  computeLinkDistance(link) {\n    if (link.type === \"direct\") {\n      return 400;\n    }\n    if (link.type === \"loop\") {\n      return 150;\n    }\n    if (link.type === \"mlPart\") {\n      return 200;\n    }\n  }\n} // end of class definition\n","export default class BaseLayoutComponent {\n  constructor(graph) {\n    this.graph = graph;\n\n    this.renderedNodes = graph.nodes;\n    this.renderedLinks = graph.links;\n  }\n}\n","import * as d3 from \"d3\";\n\nexport default class GraphInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.zoom = undefined;\n    this.graphTranslation = [0, 0];\n    this.zoomFactor = 1.0;\n    this.transformAnimation = false;\n\n    this.zoomEnabled = true;\n    this.dragEnabled = true;\n  }\n\n  enableMouseZoom = val => {\n    this.zoomEnabled = val;\n  };\n  enableMouseDrag = val => {\n    this.dragEnabled = val;\n  };\n\n  applyGraphInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n    // graph interactions are zoom and drag operations\n    const that = this;\n\n    // Apply the zooming factor.\n    this.zoom = d3.behavior\n      .zoom()\n      .duration(150)\n      .scaleExtent([0.02, 5])\n      .on(\"zoom\", this.zoomed)\n      .on(\"zoomstart\", function() {\n        if (\n          d3.event.sourceEvent &&\n          d3.event.sourceEvent.buttons &&\n          d3.event.sourceEvent.buttons === 1\n        ) {\n          that.graphObject.svgRoot.style(\"cursor\", \"all-scroll\");\n        }\n      })\n      .on(\"zoomend\", function() {\n        that.graphObject.svgRoot.style(\"cursor\", \"auto\");\n      });\n\n    this.graphObject.svgRoot.call(this.zoom);\n    this.zoom = this.zoom.scaleExtent([0.02, 5]);\n    if (this.graphObject.graphRoot) {\n      this.zoom.event(this.graphObject.graphRoot);\n    }\n  };\n\n  resetUserLayout = () => {};\n\n  zoomed = () => {\n    if (d3.event.sourceEvent) {\n      d3.event.sourceEvent.preventDefault();\n      d3.event.sourceEvent.stopPropagation();\n    }\n\n    const that = this;\n    const graph = this.graphObject;\n    const graphContainer = graph.graphRoot;\n    let zoomEventByMWheel = false;\n    if (d3.event.sourceEvent) {\n      if (d3.event.sourceEvent.deltaY) {\n        zoomEventByMWheel = true;\n      }\n    }\n    if (zoomEventByMWheel === false) {\n      if (this.transformAnimation === true) {\n        return;\n      }\n      this.zoomFactor = d3.event.scale;\n      this.graphTranslation = d3.event.translate;\n      graphContainer.attr(\n        \"transform\",\n        \"translate(\" + this.graphTranslation + \")scale(\" + this.zoomFactor + \")\"\n      );\n      return;\n    }\n    /** animate the transition **/\n    this.zoomFactor = d3.event.scale;\n    this.graphTranslation = d3.event.translate;\n    graphContainer\n      .transition()\n      .tween(\"attr.translate\", function() {\n        return function() {\n          that.transformAnimation = true;\n          const tr = d3.transform(graphContainer.attr(\"transform\"));\n          that.graphTranslation[0] = tr.translate[0];\n          that.graphTranslation[1] = tr.translate[1];\n          that.zoomFactor = tr.scale[0];\n        };\n      })\n      .each(\"end\", function() {\n        that.transformAnimation = false;\n      })\n      .attr(\n        \"transform\",\n        \"translate(\" + that.graphTranslation + \")scale(\" + that.zoomFactor + \")\"\n      )\n      .ease(\"linear\")\n      .duration(250);\n  };\n}\n","import * as d3 from \"d3\";\n\nexport default class NodeInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false;\n    this.hasNodeDobleClick = false;\n    this.hasNodeHover = true;\n  }\n\n  setHoverEnabled = val => {\n    this.hasNodeHover = val;\n  };\n  setNodeClickEnabled = val => {\n    this.hasNodeClick = val;\n  };\n  setNodeDoubleClickEnabled = val => {\n    this.hasNodeDobleClick = val;\n  };\n  setDragEnabled = val => {\n    this.hasNodeDragEnabeld = val;\n  };\n\n  applyNodeInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Node Interactions are:\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasNodeHover) {\n        d.on(\"mouseover\", that.nodeHoverIn);\n        d.on(\"mouseout\", that.nodeHoverOut);\n      }\n    };\n\n    /** DEFINING OWN INTERNAL CLICK BEHAVIOR -- DO NOT OVERWRITE **/\n    this.clickBehaviour = function(d) {\n      if (that.hasNodeClick) {\n        d.on(\"click\", that.nodeClick);\n      }\n    };\n    this.doubleClickBehavoir = function(d) {\n      if (that.hasNodeDobleClick) {\n        d.on(\"click\", that.nodeDoubleClick);\n      }\n    };\n\n    // apply the node behavoir on the nodes;\n    const nodes = this.graphObject.nodes;\n    if (nodes.length > 0) {\n      nodes.forEach(n => {\n        if (n.groupRoot) {\n          n.groupRoot.call(this.dragBehaviour);\n          n.groupRoot.call(this.hoverBehaviour);\n          n.groupRoot.call(this.clickBehaviour);\n          n.groupRoot.call(this.doubleClickBehavoir);\n        }\n      });\n    }\n  };\n\n  nodeHoverIn(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", \"green\");\n  }\n\n  nodeHoverOut(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", d.renderingConfig().style.bgColor);\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n    d3.event.stopPropagation(); // Prevent panning\n    d3.event.preventDefault();\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.fixed = true;\n      d.groupRoot.style(\"cursor\", \"pointer\");\n    }\n  };\n\n  drag = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.setPosition(d3.event.x, d3.event.y);\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      d.updateRenderingPosition();\n\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n\n  dragEnd = d => {\n    if (this.hasNodeDragEnabeld) {\n      d.fixed = false;\n      d.groupRoot.style(\"cursor\", \"auto\");\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n}\n","import * as d3 from \"d3\";\n\nexport default class LinkInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false; //TODO\n    this.hasNodeDobleClick = false; // TODO\n    this.hasLinkHover = true;\n    this.hasPropertyHover = true;\n  }\n\n  setHoverEnabled = val => {\n    this.hasLinkHover = val;\n    this.hasPropertyHover = val;\n  };\n  setNodeClickEnabled = val => {\n    this.hasNodeClick = val;\n  };\n  setNodeDoubleClickEnabled = val => {\n    this.hasNodeDobleClick = val;\n  };\n  setDragEnabled = val => {\n    this.hasNodeDragEnabeld = val;\n  };\n\n  applyLinkInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasLinkHover) {\n        d.on(\"mouseover\", that.linkHoverIn);\n        d.on(\"mouseout\", that.linkHoverOut);\n      }\n    };\n    this.propertyHoverBehaviour = function(d) {\n      if (that.hasPropertyHover) {\n        d.on(\"mouseover\", that.propertyHoverIn);\n        d.on(\"mouseout\", that.propertyHoverOut);\n      }\n    };\n    const links = this.graphObject.links;\n    if (links.length > 0) {\n      links.forEach(l => {\n        if (l.groupRoot) {\n          l.groupRoot.call(this.hoverBehaviour);\n          // try to get the parentOf shape;\n          if (l.renderingShape) {\n            const parentNode = l.renderingShape.node().parentNode;\n            if (parentNode) {\n              const shapeRoot = d3.select(parentNode);\n              if (shapeRoot) {\n                shapeRoot.call(this.propertyHoverBehaviour);\n                shapeRoot.call(this.dragBehaviour);\n              }\n            }\n          }\n        }\n      });\n    }\n  };\n\n  linkHoverIn(d) {\n    const shape = d.renderingLine;\n    shape.style(\"stroke\", \"red\");\n  }\n\n  linkHoverOut(d) {\n    const shape = d.renderingLine;\n    shape.style(\"stroke\", d.renderingConfig().style.link.lineColor);\n  }\n\n  propertyHoverIn = d => {\n    const shape = d.ref.renderingShape;\n    shape.style(\"fill\", \"red\");\n    // const that = this;\n    if (d.mouseEntered === true) {\n      return;\n    }\n    d.mouseEntered = true;\n    d.keepRendering = true;\n\n    if (d.unblockRendering) {\n      d.keepRendering = false;\n      d.unblockRendering = false;\n    }\n  };\n\n  propertyHoverOut(d) {\n    const shape = d.ref.renderingShape;\n    shape.style(\"fill\", d.ref.renderingConfig().style.propertyNode.bgColor);\n    if (d.ref.__internalType === \"multiLink\") {\n      d3.selectAll(\".MultiLinkHoverButton\").remove();\n    }\n    d.mouseEntered = false;\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.fixed = true;\n      d.groupRoot.style(\"cursor\", \"pointer\");\n    }\n  };\n\n  drag = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.setPosition(d3.event.x, d3.event.y);\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      d.ref.updateRenderingPosition();\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n\n  dragEnd = d => {\n    if (this.hasNodeDragEnabeld) {\n      d.fixed = false;\n      d.groupRoot.style(\"cursor\", \"auto\");\n    }\n  };\n}\n","import GraphInteractions from \"./graphInteractions\";\nimport NodeInteractions from \"./nodeInteractions\";\nimport LinkInteractions from \"./linkInteractions\";\n\nexport default class Interactions {\n  constructor() {\n    this.graphInteractions = null;\n    this.nodeInteractions = null;\n    this.linkInteractions = null;\n  }\n\n  applyInteractions(graph, redrawCall) {\n    /** GRAPH INTERACTION **/\n    if (!this.graphInteractions) {\n      console.warn(\n        \"NO GRAPH INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.graphInteractions = new GraphInteractions(graph);\n    }\n    this.graphInteractions.applyGraphInteractions(redrawCall);\n\n    /** NODE INTERACTION **/\n    if (!this.nodeInteractions) {\n      console.warn(\n        \"NO NODE INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.nodeInteractions = new NodeInteractions(graph);\n    }\n    this.nodeInteractions.applyNodeInteractions(redrawCall);\n\n    /** LINK INTERACTION **/\n    if (!this.linkInteractions) {\n      console.warn(\n        \"NO LINK INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.linkInteractions = new LinkInteractions(graph);\n    }\n    this.linkInteractions.applyLinkInteractions(redrawCall);\n  }\n}\n","export default class DefaultRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {},\n      links: {}\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"circle\",\n        bgColor: \"#959796\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#000000\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#ffffff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"true\",\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000000\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: true,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","import * as d3 from \"d3\";\nimport NodePrimitive from \"./renderingElements/NodePrimitive\";\nimport LinkPrimitive from \"./renderingElements/LinkPrimitive\";\nimport DrawTools from \"./DrawTools\";\nimport ForceLayout from \"./Layout/ForceLayout\";\nimport Interactions from \"./Interactions/interactions\";\nimport GraphInteractions from \"./Interactions/graphInteractions\";\nimport NodeInteractions from \"./Interactions/nodeInteractions\";\nimport LinkInteractions from \"./Interactions/linkInteractions\";\nimport BasicRenderingHandler from \"./renderingConfigs/BasicRenderingHandler\";\nexport default class GraphRenderer {\n  constructor() {\n    this.GRAPH_TYPE = \"ABSTRACT_RENDERING_TYPE\";\n\n    this.model = null;\n    this.layoutHandler = null;\n    this.renderingConfig = null;\n    this.interactionHandler = null;\n    this.drawTools = null;\n\n    this.nodes = [];\n    this.links = [];\n\n    this.nodeMap = {};\n    this.linkMap = {};\n\n    this.divRoot = null;\n    this.svgRoot = null;\n    this.graphRoot = null;\n\n    // this can be overwritten (but it gives a proper ordering of the layers)\n    this.layerObject = [\"arrows\", \"links\", \"properties\", \"nodes\"];\n\n    this.graphBgColor = \"#ECF0F1\";\n  }\n\n  /** Exposed functions >> DO NOT OVERWRITE **/\n  setGraphBackgroundColor = val => {\n    this.graphBgColor = val;\n  };\n\n  setRenderingContainer = divId => {\n    this.divRoot = divId;\n  };\n\n  setDrawTools = tools => {\n    this.drawTools = tools;\n  };\n\n  setModel = model => {\n    this.model = model;\n  };\n\n  setRenderingConfig = config => {\n    this.renderingConfig = config;\n  };\n\n  getRenderingHandler = () => {\n    return this.renderingConfig;\n  };\n\n  setInteractionHandler = handler => {\n    this.interactionHandler = handler;\n  };\n\n  configureGraphInteractions = state => {\n    // get the required configFlags;\n\n    const zoom = state.graph_mouseZoom;\n    const drag = state.graph_mouseDrag;\n\n    if (!this.interactionHandler) {\n      this.interactionHandler = new Interactions();\n    }\n    if (!this.interactionHandler.graphInteractions) {\n      this.interactionHandler.graphInteractions = new GraphInteractions(this);\n    }\n\n    this.interactionHandler.graphInteractions.enableMouseZoom(zoom);\n    this.interactionHandler.graphInteractions.enableMouseDrag(drag);\n\n    // node link interactions ;;;\n\n    const nodeDrag = state.node_mouseDrag;\n    const nodeHover = state.node_mouseHover;\n    const nodeClick = state.node_mouseSingleClick;\n    const nodeDoubleClick = state.node_mouseDoubleClick;\n\n    if (!this.interactionHandler.nodeInteractions) {\n      this.interactionHandler.nodeInteractions = new NodeInteractions(this);\n    }\n\n    this.interactionHandler.graphInteractions.enableMouseZoom(zoom);\n    this.interactionHandler.graphInteractions.enableMouseDrag(drag);\n\n    this.interactionHandler.nodeInteractions.setNodeClickEnabled(nodeClick);\n    this.interactionHandler.nodeInteractions.setNodeDoubleClickEnabled(\n      nodeDoubleClick\n    );\n    this.interactionHandler.nodeInteractions.setHoverEnabled(nodeHover);\n    this.interactionHandler.nodeInteractions.setDragEnabled(nodeDrag);\n\n    // link interactions\n    if (!this.interactionHandler.linkInteractions) {\n      this.interactionHandler.linkInteractions = new LinkInteractions(this);\n    }\n\n    const linkDrag = state.link_mouseDrag;\n    const linkHover = state.link_mouseHover;\n\n    this.interactionHandler.linkInteractions.setHoverEnabled(linkHover);\n    this.interactionHandler.linkInteractions.setDragEnabled(linkDrag);\n\n    this.setGraphBackgroundColor(state.graphBgColor);\n  };\n\n  createPrimitives() {\n    // create the primitives;\n    this.model.nodes.forEach(node => {\n      this.createNodePrimitive(node);\n    });\n\n    this.model.links.forEach(link => {\n      this.createLinkPrimitive(link);\n    });\n  }\n  createRenderingElements() {\n    if (!this.model) {\n      console.error(\"NO MODEL SET ! \");\n    }\n    if (!this.renderingConfig) {\n      // create a default renderingConfigHandler;\n      console.warn(\n        \"NO RENDERING CONFIG HANDLER SET ! WILL CREATE A DEFAULT ONE FOR YOU!\"\n      );\n      this.renderingConfig = new BasicRenderingHandler();\n    }\n    if (!this.drawTools) {\n      // create a default renderingConfigHandler;\n      console.warn(\n        \"NO DRAWTOOLS  HANDLER SET ! WILL CREATE A DEFAULT ONE FOR YOU!\"\n      );\n      this.drawTools = new DrawTools(this);\n    }\n\n    if (!this.layoutHandler) {\n      // create a default renderingConfigHandler;\n      console.warn(\n        \"NO LAYOUT  HANDLER SET ! WILL CREATE A DEFAULT ONE FOR YOU! << FORCE DIRECTED LAYOUT>>>\"\n      );\n      this.layoutHandler = new ForceLayout(this);\n    }\n  }\n\n  resetUserNavigation = () => {\n    if (this.interactionHandler) {\n      if (this.interactionHandler.graphInteractions) {\n        this.interactionHandler.graphInteractions.resetUserLayout();\n      }\n    }\n  };\n\n  initializeRenderingContainer = () => {\n    if (!this.divRoot) {\n      console.error(\"No div found for the graph \");\n      return;\n    }\n    // clear rendering containers;\n    this._clearRenderingContainers();\n    // create the renderingContainers\n    this._createRenderingContainers();\n  };\n\n  _clearRenderingContainers = () => {\n    if (this.graphRoot) {\n      this.graphRoot.selectAll(\"defs\").remove();\n      this.graphRoot.selectAll(\"g\").remove();\n      this.graphRoot.remove();\n    }\n    if (this.svgRoot) {\n      this.svgRoot.remove();\n    }\n\n    if (d3.select(\"#\" + this.divRoot + \"_svgRoot\")) {\n      // we have on from some other initialization.. remove that\n      d3.select(\"#\" + this.divRoot + \"_svgRoot\").remove();\n    }\n  };\n\n  _updateSVG_Size = () => {\n    if (this.svgRoot) {\n      // TODO\n      const divNode = d3.select(\"#\" + this.divRoot);\n      const divBoundingBox = divNode.node().getBoundingClientRect();\n      this.svgRoot.style(\"width\", divBoundingBox.width + \"px\");\n      this.svgRoot.style(\"height\", divBoundingBox.height + \"px\");\n    }\n  };\n\n  _createRenderingContainers = () => {\n    const divNode = d3.select(\"#\" + this.divRoot);\n    this.svgRoot = divNode.append(\"svg\");\n    this.svgRoot.node().id = this.divRoot + \"_svgRoot\";\n    this.svgRoot.style(\"background\", this.graphBgColor);\n\n    // adjust svgSize to the container size;\n    this._checkForPaddingInDivNode();\n    const divBoundingBox = divNode.node().getBoundingClientRect();\n    this.svgRoot.style(\"width\", divBoundingBox.width + \"px\");\n    this.svgRoot.style(\"height\", divBoundingBox.height + \"px\");\n\n    // createGraphGroup; // why you ask? so we can compute the bounding size of it later (zoom to graph Extent functions)\n\n    this.graphRoot = this.svgRoot.append(\"g\");\n    this.graphRoot.style(\"overflow\", \"hidden\");\n\n    this._createLayers();\n  };\n\n  _createLayers = () => {\n    const root = this.graphRoot;\n    const layerNamePrefix = this.divRoot;\n    this.layerObject.forEach(function(layer) {\n      if (layer === \"arrows\") {\n        const markerContainer = root.append(\"defs\");\n        markerContainer.node().id = layerNamePrefix + \"_\" + layer;\n      } else {\n        const renderingLayer = root.append(\"g\");\n        renderingLayer.node().id = layerNamePrefix + \"_\" + layer;\n      }\n    });\n  };\n\n  _checkForPaddingInDivNode = () => {\n    const divNode = d3.select(\"#\" + this.divRoot);\n    if (\n      divNode.style(\"padding-left\") ||\n      divNode.style(\"padding-right\") ||\n      divNode.style(\"padding-top\") ||\n      divNode.style(\"padding-bottom\")\n    ) {\n      let noError = 0;\n      if (\n        divNode.style(\"padding-left\") &&\n        (divNode.style(\"padding-left\") === \"0\" ||\n          divNode.style(\"padding-left\") === \"0px\")\n      ) {\n        noError++;\n      }\n      if (\n        divNode.style(\"padding-right\") &&\n        (divNode.style(\"padding-right\") === \"0\" ||\n          divNode.style(\"padding-right\") === \"0px\")\n      ) {\n        noError++;\n      }\n\n      if (\n        divNode.style(\"padding-top\") &&\n        (divNode.style(\"padding-top\") === \"0\" ||\n          divNode.style(\"padding-top\") === \"0px\")\n      ) {\n        noError++;\n      }\n      if (\n        divNode.style(\"padding-bottom\") &&\n        (divNode.style(\"padding-bottom\") === \"0\" ||\n          divNode.style(\"padding-bottom\") === \"0px\")\n      ) {\n        noError++;\n      }\n      if (noError !== 4) {\n        console.error(\n          \"DO NOT PUT PADDING INTO THE RENDERING DIV! \\n Will nevertheless try to render it \"\n        );\n      }\n    }\n  };\n\n  // SOME RENDERING STUFF\n  createNodePrimitive = node => {\n    const nodePrimitive = new NodePrimitive();\n    nodePrimitive.id(node.__nodeLinkIdentifier);\n    nodePrimitive.displayName(node.__displayName);\n    nodePrimitive.renderingConfig(\n      this.renderingConfig.getNodeConfigFromType(node.__nodeType)\n    );\n    nodePrimitive.refereceResource = node;\n    nodePrimitive.drawTools(this.drawTools);\n\n    this.nodes.push(nodePrimitive);\n    this.nodeMap[nodePrimitive.id()] = nodePrimitive;\n  };\n\n  createLinkPrimitive = link => {\n    const linkPrimitive = new LinkPrimitive();\n    linkPrimitive.id(link.__nodeLinkIdentifier);\n    linkPrimitive.displayName(link.__displayName);\n\n    if (link.__linkType !== \"axiomLink\") {\n      linkPrimitive.renderingConfig(\n        this.renderingConfig.getLinkConfigFromType(link.__linkType)\n      );\n    } else {\n      linkPrimitive.renderingConfig(\n        this.renderingConfig.getLinkConfigFromType(link.__linkAxiom)\n      );\n    }\n    linkPrimitive.drawTools(this.drawTools);\n\n    // fetch the source and target from the map;\n    linkPrimitive.setSourceNode(\n      this.nodeMap[link.__source.__nodeLinkIdentifier]\n    );\n    linkPrimitive.setTargetNode(\n      this.nodeMap[link.__target.__nodeLinkIdentifier]\n    );\n\n    if (\n      this.nodeMap[link.__source.__nodeLinkIdentifier] ===\n      this.nodeMap[link.__target.__nodeLinkIdentifier]\n    ) {\n      linkPrimitive.setInternalType(\"loop\");\n      const item = this.nodeMap[link.__source.__nodeLinkIdentifier];\n      item.numberOfLoops(item.numberOfLoops() + 1);\n    }\n    this.links.push(linkPrimitive);\n    this.linkMap[linkPrimitive.id()] = linkPrimitive;\n  };\n\n  updateMultiLinkTypes = link => {\n    if (link.__internalType === \"loop\") {\n      return;\n    }\n    const src = link.sourceNode;\n    const tar = link.targetNode;\n\n    // this is a pair;\n    // lets see if we have multi link;\n    let isMultiLink = false;\n    src.outgoingLinks.forEach(out => {\n      if (out.__internalType === \"loop\" || out.id() === link.id()) {\n        return;\n      }\n      if (out.targetNode.id() === tar.id()) {\n        isMultiLink = true;\n      }\n    });\n\n    tar.outgoingLinks.forEach(out => {\n      if (out.__internalType === \"loop\" || out.id() === link.id()) {\n        return;\n      }\n      if (out.targetNode.id() === src.id()) {\n        isMultiLink = true;\n      }\n    });\n    if (isMultiLink) {\n      link.setInternalType(\"multiLink\");\n    }\n\n    // kill multiLink if we have no label to draw!;\n    if (link.renderingConfig().options.drawPropertyNode === false) {\n      link.setInternalType(\"singleLink\");\n    }\n  };\n\n  redrawRenderingPrimitives = () => {\n    this._drawRenderingPrimitivesForNodes();\n    this._drawRenderingPrimitivesForLinks();\n  };\n\n  drawRenderingPrimitives = () => {\n    this._drawRenderingPrimitivesForNodes();\n    this._drawRenderingPrimitivesForLinks();\n\n    // applyInteractions\n    if (this.interactionHandler) {\n      this.interactionHandler.applyInteractions(this);\n    } else {\n      console.log(\"No Interaction Handler set, the graph will be static!\");\n    }\n\n    if (this.layoutHandler) {\n      this.layoutHandler.initializeLayoutEngine();\n      this.layoutHandler.resumeForce();\n    } else {\n      console.log(\"No Layout Handler set, the graph will be static!\");\n    }\n  };\n\n  _drawRenderingPrimitivesForLinks = () => {\n    const linkContainer = d3.select(\"#\" + this.divRoot + \"_links\");\n    const propertyContainer = d3.select(\"#\" + this.divRoot + \"_properties\");\n    const arrowContainer = d3.select(\"#\" + this.divRoot + \"_arrows\");\n\n    this.renderedLinks = this.createRenderingPrimitives(\n      linkContainer,\n      this.links,\n      \"LinkItem\"\n    );\n\n    // execute the rendering function of the nodes;\n    this.renderedLinks.each(function(item) {\n      if (item.visible()) {\n        item.render(d3.select(this), propertyContainer, arrowContainer);\n      } else {\n        d3.select(this).remove();\n      }\n    });\n  };\n\n  _drawRenderingPrimitivesForNodes = () => {\n    const nodeContainer = d3.select(\"#\" + this.divRoot + \"_nodes\");\n    this.renderedNodes = this.createRenderingPrimitives(\n      nodeContainer,\n      this.nodes,\n      \"NodeItem\"\n    );\n\n    // execute the rendering function of the nodes;\n    this.renderedNodes.each(function(item) {\n      if (item.visible()) {\n        item.render(d3.select(this));\n      } else {\n        d3.select(this).remove();\n      }\n    });\n  };\n\n  createRenderingPrimitives(container, data, typeClass) {\n    return container\n      .selectAll(\".\" + typeClass)\n      .data(data)\n      .enter()\n      .append(\"g\")\n      .classed(typeClass, true)\n      .attr(\"id\", function(d) {\n        return d.id();\n      });\n  }\n}\n","import GraphRenderer from \"./graph\";\nimport Interactions from \"./Interactions/interactions\";\nexport default class VOWLRenderer extends GraphRenderer {\n  constructor() {\n    super();\n    this.GRAPH_TYPE = \"VOWL_RENDERING_TYPE\";\n\n    this.layoutHandler = null;\n    this.renderingConfig = null;\n    this.interactionHandler = new Interactions();\n  }\n\n  createRenderingElements() {\n    super.createRenderingElements();\n\n    this.createPrimitives();\n\n    // some link positions init\n    let i = 0;\n    this.links.forEach(link => {\n      this.updateMultiLinkTypes(link);\n      link.setPosition(200, i * 50);\n      i++;\n    });\n  }\n}\n","import * as d3 from \"d3\";\n\nexport default class GraphInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.zoom = undefined;\n    this.graphTranslation = [0, 0];\n    this.zoomFactor = 1.0;\n    this.transformAnimation = false;\n\n    this.zoomEnabled = true;\n    this.dragEnabled = true;\n  }\n\n  enableMouseZoom = val => {\n    this.zoomEnabled = val;\n  };\n  enableMouseDrag = val => {\n    this.dragEnabled = val;\n  };\n\n  applyGraphInteractions = redrawCall => {\n    if (redrawCall) {\n      return;\n    }\n    if (!this.graphObject) {\n      return;\n    }\n    // graph interactions are zoom and drag operations\n    const that = this;\n\n    // Apply the zooming factor.\n    this.zoom = d3.behavior\n      .zoom()\n      .duration(150)\n      .scaleExtent([0.02, 5])\n      .on(\"zoom\", this.zoomed)\n      .on(\"zoomstart\", function() {\n        if (\n          d3.event.sourceEvent &&\n          d3.event.sourceEvent.buttons &&\n          d3.event.sourceEvent.buttons === 1\n        ) {\n          that.graphObject.svgRoot.style(\"cursor\", \"all-scroll\");\n        }\n      })\n      .on(\"zoomend\", function() {\n        that.graphObject.svgRoot.style(\"cursor\", \"auto\");\n      });\n\n    this.graphObject.svgRoot.call(this.zoom);\n    this.zoom = this.zoom.scaleExtent([0.02, 5]);\n    if (this.graphObject.graphRoot) {\n      this.zoom.event(this.graphObject.graphRoot);\n    }\n  };\n\n  resetUserLayout = () => {\n    const graph = this.graphObject;\n    const graphContainer = graph.graphRoot;\n    graphContainer.attr(\n      \"transform\",\n      \"translate(\" + this.graphTranslation + \")scale(\" + this.zoomFactor + \")\"\n    );\n  };\n\n  zoomed = () => {\n    if (d3.event.sourceEvent) {\n      d3.event.sourceEvent.preventDefault();\n      d3.event.sourceEvent.stopPropagation();\n    }\n\n    const that = this;\n    const graph = this.graphObject;\n    const graphContainer = graph.graphRoot;\n    let zoomEventByMWheel = false;\n    if (d3.event.sourceEvent) {\n      if (d3.event.sourceEvent.deltaY) {\n        zoomEventByMWheel = true;\n      }\n    }\n    if (zoomEventByMWheel === false) {\n      if (this.transformAnimation === true) {\n        return;\n      }\n      this.zoomFactor = d3.event.scale;\n      this.graphTranslation = d3.event.translate;\n      graphContainer.attr(\n        \"transform\",\n        \"translate(\" + this.graphTranslation + \")scale(\" + this.zoomFactor + \")\"\n      );\n      return;\n    }\n    /** animate the transition **/\n    this.zoomFactor = d3.event.scale;\n    this.graphTranslation = d3.event.translate;\n    graphContainer\n      .transition()\n      .tween(\"attr.translate\", function() {\n        return function() {\n          // need the that ptr to the object\n          that.transformAnimation = true;\n          const tr = d3.transform(graphContainer.attr(\"transform\"));\n          that.graphTranslation[0] = tr.translate[0];\n          that.graphTranslation[1] = tr.translate[1];\n          that.zoomFactor = tr.scale[0];\n        };\n      })\n      .each(\"end\", function() {\n        that.transformAnimation = false;\n      })\n      .attr(\n        \"transform\",\n        \"translate(\" + that.graphTranslation + \")scale(\" + that.zoomFactor + \")\"\n      )\n      .ease(\"linear\")\n      .duration(250);\n  };\n}\n","import * as d3 from \"d3\";\nimport \"./nodeLoaderAnimation.css\";\nexport default class NodeInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false;\n    this.hasNodeDobleClick = false;\n    this.hasNodeHover = true;\n  }\n\n  setHoverEnabled = val => {\n    this.hasNodeHover = val;\n  };\n  setNodeClickEnabled = val => {\n    this.hasNodeClick = val;\n  };\n  setNodeDoubleClickEnabled = val => {\n    this.hasNodeDobleClick = val;\n  };\n  setDragEnabled = val => {\n    this.hasNodeDragEnabeld = val;\n  };\n\n  applyNodeInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Node Interactions are:\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasNodeHover) {\n        d.on(\"mouseover\", that.nodeHoverIn);\n        d.on(\"mouseout\", that.nodeHoverOut);\n      }\n    };\n\n    /** DEFINING OWN INTERNAL CLICK BEHAVIOR -- DO NOT OVERWRITE **/\n    this.clickBehaviour = function(d) {\n      if (that.hasNodeClick) {\n        d.on(\"click\", that.nodeClick);\n      }\n    };\n    this.doubleClickBehavoir = function(d) {\n      if (that.hasNodeDobleClick) {\n        d.on(\"click\", that.nodeDoubleClick);\n      }\n    };\n\n    // apply the node behavoir on the nodes;\n    const nodes = this.graphObject.nodes;\n    if (nodes.length > 0) {\n      nodes.forEach(n => {\n        if (n.groupRoot) {\n          n.groupRoot.call(this.dragBehaviour);\n          n.groupRoot.call(this.hoverBehaviour);\n          n.groupRoot.call(this.clickBehaviour);\n          n.groupRoot.call(this.doubleClickBehavoir);\n\n          this.addCollapseExpandButton(n);\n        }\n      });\n    }\n  };\n\n  collapseButton_mouseHoverIn = node => {\n    node.singleCirc.classed(\"collapseExpandButtonHovered\", true);\n  };\n  collapseButton_mouseHoverOut = node => {\n    node.singleCirc.classed(\"collapseExpandButtonHovered\", false);\n  };\n\n  addCollapseExpandButton = d => {\n    //  console.log(d);\n    const that = this;\n    if (d.collapseExapandGroup) {\n      d.collapseExapandGroup.remove();\n    }\n    // create the hover thing;\n    const offsetX = Math.sqrt(50 * 25);\n\n    d.collapseExapandGroup = d.groupRoot.append(\"g\");\n    d.singleCirc = d.collapseExapandGroup.append(\"circle\");\n    const radius = 15;\n    d.singleCirc.attr(\"r\", radius);\n    d.singleCirc.attr(\"cx\", offsetX);\n    d.singleCirc.attr(\"cy\", -offsetX);\n    d.singleCirc.classed(\"collapseExpandButton\", true);\n\n    d.collapseExapandGroup.on(\"mouseover\", () => {\n      that.collapseButton_mouseHoverIn(d);\n    });\n    d.collapseExapandGroup.on(\"mouseout\", () => {\n      that.collapseButton_mouseHoverOut(d);\n    });\n\n    if (!d.status && d.refereceResource.__nodeType.indexOf(\"Resource\") !== -1) {\n      d.status = \"unknown\";\n    }\n    // console.log(\"NODE STATUS\", d.status);\n\n    switch (d.status) {\n      case \"unknown\":\n        d.collapseExapandGroup.append(\"title\").text(\"explore element\");\n        // create icon for that;\n        const icon = d.collapseExapandGroup.append(\"path\");\n        icon.attr(\"id\", \"searchIcon\");\n        icon.style(\"fill\", \"#000\");\n        icon.style(\"stroke-width\", \"0\");\n        icon.attr(\n          \"d\",\n          \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n        );\n        icon.attr(\"transform\", \"translate(24,-48)\");\n\n        d.collapseExapandGroup.on(\"click\", function(e) {\n          console.log(\"WANT TO GET MORE DATA FOR NODE (EXPLORE) !\");\n          console.log(e);\n          that.graphObject.exploreSingleNode(e);\n          console.log(\"Want to collapse a node \");\n        });\n\n        break;\n      case \"collapsed\":\n        d.collapseExapandGroup.append(\"title\").text(\"expand node\");\n        d.collapseExapandGroup\n          .append(\"polygon\")\n          .attr(\"points\", \"15.5,5 11,5 16,12 11,19 15.5,19 20.5,12 \")\n          .attr(\"transform\", \"translate(25,-48)\");\n        d.collapseExapandGroup\n          .append(\"polygon\")\n          .attr(\"points\", \"8.5,5 4,5 9,12 4,19 8.5,19 13.5,12 \")\n          .attr(\"transform\", \"translate(25,-48)\");\n\n        d.collapseExapandGroup.on(\"click\", function(e) {\n          // that.graph.singleNodeExpansion(that);\n          console.log(e);\n          console.log(\"Want to collapse a node \");\n        });\n        break;\n      case \"expanded\":\n        d.collapseExapandGroup.append(\"title\").text(\"collapse node\");\n\n        d.collapseExapandGroup\n          .append(\"polygon\")\n          .attr(\"points\", \"15.5,5 11,5 16,12 11,19 15.5,19 20.5,12 \")\n          .attr(\"transform\", \"translate(47,-48), scale(-1,1)\");\n        d.collapseExapandGroup\n          .append(\"polygon\")\n          .attr(\"points\", \"8.5,5 4,5 9,12 4,19 8.5,19 13.5,12 \")\n          .attr(\"transform\", \"translate(47,-48), scale(-1,1)\");\n\n        d.collapseExapandGroup.on(\"click\", function() {\n          console.log(\"want to expand a node \");\n        });\n        break;\n      default:\n        console.log(\"leaf node should not have hovers\");\n        d.collapseExapandGroup.classed(\"hidden\", true);\n    }\n  };\n\n  nodeHoverIn(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", \"red\");\n  }\n\n  nodeHoverOut(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", d.renderingConfig().style.bgColor);\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n    //  console.log(\"Node has been double clicked\");\n    d3.event.stopPropagation(); // Prevent panning\n    d3.event.preventDefault();\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n    //  console.log(\"Node has been single  clicked\");\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.fixed = true;\n      d.groupRoot.style(\"cursor\", \"pointer\");\n    }\n  };\n\n  drag = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.setPosition(d3.event.x, d3.event.y);\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      d.updateRenderingPosition();\n\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n\n  dragEnd = d => {\n    if (this.hasNodeDragEnabeld) {\n      d.fixed = false;\n      d.groupRoot.style(\"cursor\", \"auto\");\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n}\n","import * as d3 from \"d3\";\n\nexport default class LinkInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false; //TODO\n    this.hasNodeDobleClick = false; // TODO\n    this.hasLinkHover = true;\n    this.hasPropertyHover = true;\n  }\n\n  setHoverEnabled = val => {\n    this.hasLinkHover = val;\n    this.hasPropertyHover = val;\n  };\n  setNodeClickEnabled = val => {\n    this.hasNodeClick = val;\n  };\n  setNodeDoubleClickEnabled = val => {\n    this.hasNodeDobleClick = val;\n  };\n  setDragEnabled = val => {\n    this.hasNodeDragEnabeld = val;\n  };\n\n  applyLinkInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasLinkHover) {\n        d.on(\"mouseover\", that.linkHoverIn);\n        d.on(\"mouseout\", that.linkHoverOut);\n      }\n    };\n    this.propertyHoverBehaviour = function(d) {\n      if (that.hasPropertyHover) {\n        d.on(\"mouseover\", that.propertyHoverIn);\n        d.on(\"mouseout\", that.propertyHoverOut);\n      }\n    };\n\n    const links = this.graphObject.links;\n    if (links.length > 0) {\n      links.forEach(l => {\n        if (l.groupRoot) {\n          l.groupRoot.call(this.hoverBehaviour);\n          // try to get the parentOf shape;\n          if (l.renderingShape) {\n            const parentNode = l.renderingShape.node().parentNode;\n            if (parentNode) {\n              const shapeRoot = d3.select(parentNode);\n              if (shapeRoot) {\n                shapeRoot.call(this.propertyHoverBehaviour);\n                shapeRoot.call(this.dragBehaviour);\n              }\n            }\n          }\n        }\n      });\n    }\n  };\n\n  linkHoverIn(d) {\n    const shape = d.renderingLine;\n    shape.style(\"stroke\", \"red\");\n  }\n\n  linkHoverOut(d) {\n    const shape = d.renderingLine;\n    shape.style(\"stroke\", d.renderingConfig().style.link.lineColor);\n  }\n\n  propertyHoverIn = d => {\n    const shape = d.ref.renderingShape;\n    shape.style(\"fill\", \"red\");\n    // const that = this;\n    if (d.mouseEntered === true) {\n      return;\n    }\n    d.mouseEntered = true;\n    d.keepRendering = true;\n\n    if (d.unblockRendering) {\n      d.keepRendering = false;\n      d.unblockRendering = false;\n    }\n  };\n\n  propertyHoverOut(d) {\n    const shape = d.ref.renderingShape;\n    shape.style(\"fill\", d.ref.renderingConfig().style.propertyNode.bgColor);\n    if (d.ref.__internalType === \"multiLink\") {\n      d3.selectAll(\".MultiLinkHoverButton\").remove();\n    }\n    d.mouseEntered = false;\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.fixed = true;\n      d.groupRoot.style(\"cursor\", \"pointer\");\n    }\n  };\n\n  drag = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.setPosition(d3.event.x, d3.event.y);\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      d.ref.updateRenderingPosition();\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n\n  dragEnd = d => {\n    if (this.hasNodeDragEnabeld) {\n      d.fixed = false;\n      d.groupRoot.style(\"cursor\", \"auto\");\n    }\n  };\n}\n","import GraphInteractions from \"./graphInteractions\";\nimport NodeInteractions from \"./nodeInteractions\";\nimport LinkInteractions from \"./linkInteractions\";\n\nexport default class Interactions {\n  constructor() {\n    this.graphInteractions = null;\n    this.nodeInteractions = null;\n    this.linkInteractions = null;\n  }\n\n  initializeInteractions(graph) {\n    this.graphInteractions = new GraphInteractions(graph);\n    this.nodeInteractions = new NodeInteractions(graph);\n    this.linkInteractions = new LinkInteractions(graph);\n  }\n\n  applyInteractions(graph, redrawCall) {\n    /** GRAPH INTERACTION **/\n    if (!this.graphInteractions) {\n      console.warn(\n        \"NO GRAPH INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.graphInteractions = new GraphInteractions(graph);\n    }\n    this.graphInteractions.applyGraphInteractions(redrawCall);\n\n    /** NODE INTERACTION **/\n    if (!this.nodeInteractions) {\n      console.warn(\n        \"NO NODE INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.nodeInteractions = new NodeInteractions(graph);\n    }\n    this.nodeInteractions.applyNodeInteractions(redrawCall);\n\n    /** LINK INTERACTION **/\n    if (!this.linkInteractions) {\n      console.warn(\n        \"NO LINK INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.linkInteractions = new LinkInteractions(graph);\n    }\n    this.linkInteractions.applyLinkInteractions(redrawCall);\n  }\n}\n","import GraphRenderer from \"./graph\";\nimport Interactions from \"./Interactions/ORKG_Interactions/interactions\";\nimport \"./Interactions/ORKG_Interactions/nodeLoaderAnimation.css\";\nimport OrkgDataLoader from \"../../DataAccessComponent/OrkgDataLoader\";\nimport ORKGParser from \"../../Parsers/ORKGParser\";\nimport BaseVertexEdgeMapper from \"../../Mappers/BaseVertexEdgeMapper\";\nimport BaseNodeLinkMapper from \"../../Mappers/BaseNodeLinkMapper\";\n\nexport default class VOWLRenderer extends GraphRenderer {\n  constructor() {\n    super();\n    this.GRAPH_TYPE = \"ORKG_RENDERING_TYPE\";\n\n    this.layoutHandler = null;\n    this.renderingConfig = null;\n    this.interactionHandler = new Interactions();\n    this.interactionHandler.initializeInteractions(this);\n\n    this.orkgDataLoader = new OrkgDataLoader();\n  }\n\n  /** Exposed functions >> DO NOT OVERWRITE **/\n  setExploreAnimation(node, val) {\n    if (val === true) {\n      const renderingGroup = node.groupRoot;\n      node.renderingAnimationGroup = renderingGroup.append(\"rect\");\n      const radius = 43;\n      node.renderingAnimationGroup.attr(\"x\", -radius);\n      node.renderingAnimationGroup.attr(\"y\", -radius);\n      node.renderingAnimationGroup.attr(\"width\", 2 * radius);\n      node.renderingAnimationGroup.attr(\"height\", 2 * radius);\n      node.renderingAnimationGroup.attr(\"rx\", radius);\n      node.renderingAnimationGroup.attr(\"ry\", radius);\n\n      node.renderingAnimationGroup.style(\"stroke-width\", \"7px\");\n      node.renderingAnimationGroup.classed(\"loadingAnimation\", true);\n    } else {\n      if (this.renderingAnimationGroup) {\n        this.renderingAnimationGroup.remove();\n      }\n    }\n  }\n\n  getStatementsBySubject = async idObj => {\n    this.orkgDataLoader.setRequestResourceId(idObj.id);\n\n    //* ------------- NOTE --------------------*//\n    // this is  quick and dirty approach to handle exploration\n    // the graph renderer creates a pipeline and processes it to add new input to the model\n    // this will be adjusted when component communication is introduced\n\n    const parser = new ORKGParser();\n    const resourceModel = parser.getResult();\n    const mapper_1 = new BaseVertexEdgeMapper();\n    const mapper_2 = new BaseNodeLinkMapper();\n\n    await this.orkgDataLoader.execute();\n    parser.setInputData(this.orkgDataLoader.getResult());\n    parser.execute().then(() => {});\n    mapper_1.setInputData(resourceModel);\n    mapper_1.execute().then(() => {});\n    mapper_2.setInputData(mapper_1.getResult());\n    mapper_2.execute().then(() => {});\n    return mapper_2.getResult().resultingModel.getResult();\n  };\n\n  getDataFromApi = async resourceId => {\n    try {\n      const newModel = await this.getStatementsBySubject({ id: resourceId });\n      if (newModel.nodes.length === 0 && newModel.link === 0) {\n        return {}; // we dont have incremental data\n      } else {\n        // result is the incremental data we get;\n        return newModel;\n      }\n    } catch (error) {\n      return {};\n    }\n  };\n\n  async singleNodeExploration(node) {\n    const idToFetch = node.__id;\n    node.nodeHasBeenExplored = true;\n    const incrementalData = await this.getDataFromApi(idToFetch);\n\n    if (!incrementalData.nodes) {\n      this.setExploreAnimation(node, false);\n      node.status = \"leafNode\";\n    } else {\n      // create the new nodes;\n      incrementalData.nodes.forEach(node => {\n        if (!this.nodeMap[node.__nodeLinkIdentifier]) {\n          this.createNodePrimitive(node);\n        }\n      });\n\n      incrementalData.links.forEach(link => {\n        if (!this.linkMap[link.__nodeLinkIdentifier]) {\n          this.createLinkPrimitive(link);\n        } else {\n          link.__nodeLinkIdentifier += \"$$Clone\";\n          this.createLinkPrimitive(link);\n        }\n      });\n      node.status = \"expanded\";\n    }\n    this.drawNewElements();\n  }\n\n  exploreSingleNode(node) {\n    this.setExploreAnimation(node, true);\n    this.singleNodeExploration(node).then(() => {});\n  }\n\n  drawNewElements() {\n    this.graphRoot.selectAll(\"defs\").remove();\n    this.graphRoot.selectAll(\"g\").remove();\n\n    this._createLayers();\n    this.renderedNodes = [];\n    this.renderedLinks = [];\n    this.redrawRenderingPrimitives();\n\n    if (this.interactionHandler) {\n      this.interactionHandler.applyInteractions(this, true);\n    } else {\n      console.log(\"No Interaction Handler set, the graph will be static!\");\n    }\n    //\n    if (this.layoutHandler) {\n      this.layoutHandler.initializeLayoutEngine();\n      this.layoutHandler.resumeForce();\n    } else {\n      console.log(\"No Layout Handler set, the graph will be static!\");\n    }\n  }\n\n  createRenderingElements() {\n    super.createRenderingElements();\n    // can be adjusted\n    this.createPrimitives();\n\n    // some link positions init\n    let i = 0;\n    this.links.forEach(link => {\n      this.updateMultiLinkTypes(link);\n      link.setPosition(200, i * 50);\n      i++;\n    });\n  }\n}\n","export default class VOWLRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {\n        \"owl:Thing\": {\n          style: {\n            renderingType: \"circle\",\n            bgColor: \"#ffffff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 100,\n            height: 50\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        \"owl:Class\": {\n          style: {\n            renderingType: \"circle\",\n            bgColor: \"#aaccff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 50\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        \"owl:equivalentClass\": {\n          style: {\n            renderingType: \"circle\",\n            bgColor: \"#aaccff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dotted\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 50,\n            doubleStrokes: true\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        \"rdfs:Literal\": {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 50,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        Literal: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 50,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      links: {\n        \"owl:datatypeProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#99CC66\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        },\n\n        \"rdfs:subClassOf\": {\n          style: {\n            link: {\n              lineStyle: \"dashed\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#ECF0F1\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        },\n\n        \"owl:equivalentClass\": {\n          style: {\n            link: {\n              lineStyle: \"dashed\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#ffffff\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#ECF0F1\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        },\n\n        \"owl:objectProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#aaccff\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"curve\" // line or curve\n          }\n        }\n      }\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"circle\",\n        bgColor: \"#ffffff\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#f9fff8\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#d58d88\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#fefdff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"true\",\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","export default class DefaultRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {\n        auxForDataTypeProperties: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#99CC66\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 30,\n            roundedCorner: \"20, 20\"\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        auxForObjectProperties: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#aaccff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 30,\n            roundedCorner: \"20, 20\"\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      links: {\n        auxLink: {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#b0b1b1\",\n\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: true,\n                strokeWidth: \"1px\",\n                strokeStyle: \"dashed\",\n                radius: 50,\n                width: 100,\n                height: 25,\n                roundedCorner: \"10, 10\"\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        }\n      }\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"ellipse\",\n        bgColor: \"#959796\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#000000\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#ffffff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"true\",\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000000\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","export default class UMLRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {\n        \"rdfs:Literal\": {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 90,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n        Literal: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 90,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      links: {\n        \"owl:datatypeProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#99CC66\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        },\n\n        \"owl:objectProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#aaccff\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        }\n      }\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"rect\",\n        bgColor: \"#ffffff\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50,\n        roundedCorner: \"10,10\"\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: true,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#000000\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#ffffff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"true\",\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000000\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","export default class DefaultRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {\n        Resource: {\n          style: {\n            renderingType: \"circle\",\n            bgColor: \"#aaccff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 50\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n        Literal: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 50,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            fontSizeOverWritesShapeSize: true,\n            overwriteOffset: 20,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      links: {\n        \"owl:datatypeProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#99CC66\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: true,\n                overwriteOffset: 10,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        }\n      }\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"circle\",\n        bgColor: \"#aaccff\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#000000\"\n        },\n\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#aaccff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"false\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectDataSource } from \"./redux/actions\";\nimport { connect } from \"react-redux\";\n\nimport VOWLRenderer from \"../Implementation/Renderes/gizmoRenderer/vowlGraph\";\nimport OrkgGraph from \"../Implementation/Renderes/gizmoRenderer/orkgGraph\";\nimport BasicRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/BasicRenderingHandler\";\nimport VOWLRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/VOWLRenderingHandler\";\nimport StaticLocalVowlJSONLoader from \"../Implementation/DataAccessComponent/StaticLocalVowlJSONLoader\";\nimport BaseVertexEdgeMapper from \"../Implementation/Mappers/BaseVertexEdgeMapper\";\nimport BaseNodeLinkMapper from \"../Implementation/Mappers/BaseNodeLinkMapper\";\nimport VOWLParser from \"../Implementation/Parsers/VOWLParser\";\nimport SparqlParser from \"../Implementation/Parsers/SparqlParser\";\nimport RDFStyledRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/RDFStyledRenderingHandler\";\nimport UMLStyledRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/UMLStyledRenderingHandler\";\nimport DBPediaLoader from \"../Implementation/DataAccessComponent/DBPediaLoader\";\nimport VowlNodeLinkMapper from \"../Implementation/Mappers/VowlNodeLinkMapper\";\nimport RDFNodeLinkMapper from \"../Implementation/Mappers/RDFNodeLinkMapper\";\nimport WikiDataLoader from \"../Implementation/DataAccessComponent/WikiDataLoader\";\nimport WikiDataExampleParser from \"../Implementation/Parsers/WikiDataParserExample\";\nimport OrkgDataLoader from \"../Implementation/DataAccessComponent/OrkgDataLoader\";\nimport ORKGParser from \"../Implementation/Parsers/ORKGParser\";\nimport OrkgRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/OrkgRenderingHandler\";\nimport UMLNodeLinkMapper from \"../Implementation/Mappers/UMLNodeLinkMapper\";\n\nclass VisualizationPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0\n    };\n    this.renderingModule = \"null\";\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = prevProps => {\n    // compute the offsets;\n\n    const bb = document\n      .getElementById(\"visualizationPreviewContainer\")\n      .getBoundingClientRect();\n\n    if (this.state.offset !== bb.y) {\n      this.setState({ offset: bb.y });\n    }\n\n    if (\n      this.props.store.createPreviewVisualization !==\n        prevProps.store.createPreviewVisualization &&\n      prevProps.store.createPreviewVisualization === true\n    ) {\n      // clear the visualizations\n      this.renderingModule._clearRenderingContainers();\n    }\n\n    if (\n      this.props.store.createPreviewVisualization !==\n        prevProps.store.createPreviewVisualization &&\n      this.props.store.createPreviewVisualization === true\n    ) {\n      // create the rendering modules;\n      let renderingModule = new VOWLRenderer();\n\n      let renderingConfig = new BasicRenderingHandler();\n      // tell the renderer to use a specific rendering handler;\n\n      if (this.props.store.renderingModuleConfig.configSelected === \"VOWL\") {\n        renderingConfig = new VOWLRenderingHandler();\n      }\n      if (this.props.store.renderingModuleConfig.configSelected === \"RDF\") {\n        console.log(\"Creating RDF Styled Rendering Handler\");\n        renderingConfig = new RDFStyledRenderingHandler();\n      }\n      if (this.props.store.renderingModuleConfig.configSelected === \"UML\") {\n        console.log(\"Creating RDF Styled Rendering Handler\");\n        renderingConfig = new UMLStyledRenderingHandler();\n      }\n      if (this.props.store.renderingModuleConfig.configSelected === \"ORKG\") {\n        renderingModule = new OrkgGraph();\n        console.log(\"Creating ORKG Rendering Handler\");\n        renderingConfig = new OrkgRenderingHandler();\n      }\n\n      renderingModule.setRenderingConfig(renderingConfig);\n\n      // initialize the pipeline;\n      let dah = new StaticLocalVowlJSONLoader();\n      let parser = new VOWLParser();\n      const mapper_1 = new BaseVertexEdgeMapper();\n      let mapper_2 = new BaseNodeLinkMapper();\n\n      // DATA SOURCE AND THEIR PARSERS\n      if (this.props.store.selectedDataSource === \"DBPedia\") {\n        dah = new DBPediaLoader();\n        parser = new SparqlParser();\n      }\n      if (this.props.store.selectedDataSource === \"WikiData\") {\n        dah = new WikiDataLoader();\n        parser = new WikiDataExampleParser();\n      }\n      if (this.props.store.selectedDataSource === \"ORKG\") {\n        dah = new OrkgDataLoader();\n        parser = new ORKGParser();\n      }\n\n      // NODE LINK MAPPERS\n      if (this.props.store.selectedNodeLinkMapper === \"VOWL\") {\n        mapper_2 = new VowlNodeLinkMapper();\n      }\n      if (this.props.store.selectedNodeLinkMapper === \"RDF\") {\n        mapper_2 = new RDFNodeLinkMapper();\n      }\n      if (this.props.store.selectedNodeLinkMapper === \"UML\") {\n        mapper_2 = new UMLNodeLinkMapper();\n      }\n\n      dah.execute().then(() => {\n        console.log(\"DAH Output >> \", dah.getResult());\n        parser.setInputData(dah.getResult());\n        parser.execute().then(() => {});\n        const resourceModel = parser.getResult();\n        console.log(resourceModel);\n        mapper_1.setInputData(resourceModel);\n        mapper_1.execute().then(() => {\n          mapper_2.setInputData(mapper_1.getResult());\n          mapper_2.execute().then(() => {\n            console.log(\">>> EVERYTHING IS PREPARED \");\n            console.log(mapper_2.getResult().resultingModel.getResult());\n            renderingModule.setRenderingContainer(\"visualizationPreviewArea\"); // set div for rendering\n            renderingModule.configureGraphInteractions(\n              this.props.store.renderingModuleConfig\n            );\n            renderingModule.setModel(\n              mapper_2.getResult().resultingModel.getResult()\n            );\n            // do the rendering magic\n            renderingModule.initializeRenderingContainer();\n            renderingModule.createRenderingElements();\n            renderingModule.drawRenderingPrimitives();\n            this.renderingModule = renderingModule;\n          });\n        });\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100%\", height: \"100px\" }}>\n        <div\n          // className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderBottomRightRadius: \"0\",\n            borderBottomLeftRadius: \"0\",\n            height: \"40px\",\n            width: \"100%\",\n\n            color: \"white\",\n            backgroundColor: \"#ad2f38\"\n          }}\n        >\n          <div style={{ width: \"100%\", textAlign: \"left\", padding: \"5px\" }}>\n            {this.props.title}\n          </div>\n        </div>\n\n        <div\n          id=\"visualizationPreviewContainer\"\n          style={{\n            paddingBottom: \"5px\",\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderTopRightRadius: \"0\",\n            borderTopLeftRadius: \"0\",\n            color: \"black\",\n            backgroundColor: \"#ffffff\",\n            marginTop: \"-1px\",\n            position: \"relative\",\n\n            width: \"100%\"\n          }}\n        >\n          <div\n            id=\"visualizationPreviewArea\"\n            style={{\n              height: this.props.store.createPreviewVisualization\n                ? window.innerHeight - this.state.offset - 50\n                : \"10px\",\n              width: \"100%\"\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nVisualizationPreview.propTypes = {\n  title: PropTypes.string,\n  store: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectDataSource: payload => dispatch(selectDataSource(payload))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VisualizationPreview);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport PipeLineVis from \"./PipeLineVis\";\nimport VisualizationPreview from \"./VisualizationPreview\";\nconst expandContentContainerAnimation = ({\n  expandedLeft,\n  oldLeftExpanded,\n  newWidth,\n  oldWidth,\n  leftWidth\n}) => {\n  const needTransitionAnimation = !(expandedLeft === oldLeftExpanded);\n\n  if (needTransitionAnimation) {\n    return keyframes`\n  from {\n    left: ${expandedLeft ? 0 : leftWidth}px;\n    width:${oldWidth}px\n  }\n  to {\n    width: ${newWidth}px\n    left: ${expandedLeft ? leftWidth : 0}px;\n  }\n  `;\n  } else {\n    return keyframes`\n  from {\n    width:${oldWidth}px\n  }\n  to {\n    width: ${newWidth}px\n  }\n  `;\n  }\n};\n\nconst ContentContainer = styled.div`\n    animation-name: ${expandContentContainerAnimation};\n    animation-duration: 20ms;\n    position: relative;\n    width:${props => props.newWidth}px\n    left: ${props => (props.expandedLeft ? props.leftWidth : 0)}px;\n`;\n\nexport default class MainWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: true,\n      minWidth: 300,\n\n      title: props.title,\n      initialRendering: true,\n      updateFlipFlop: false\n    };\n  }\n\n  render() {\n    return (\n      <ContentContainer\n        id=\"MainWidget\"\n        expandedLeft={this.props.leftSideBarExpanded}\n        expandedRight={this.props.rightSideBarExpanded}\n        oldWidth={this.props.oldWidth}\n        newWidth={this.props.newWidth}\n        leftWidth={this.props.leftSidebarWidth}\n        rightWidth={this.props.rightSidebarWidth}\n        oldLeftExpanded={this.props.oldLeftSidebarState}\n        initialRendering={this.state.initialRendering}\n        style={{\n          height: \"100%\",\n          width: window.innerWidth - 250,\n          left: \"250px\"\n        }}\n      >\n        <div\n          style={{\n            width: \"85%\",\n            height: \"100%\",\n            position: \"relative\",\n            left: \"10%\"\n          }}\n        >\n          <PipeLineVis title=\"Pipeline Visualization\" /> <br />\n          <VisualizationPreview\n            style={{ marginTop: \"10px\" }}\n            title=\"Visualization Preview\"\n          />\n        </div>\n      </ContentContainer>\n    );\n  }\n}\n\nMainWidget.propTypes = {\n  title: PropTypes.string,\n  oldWidth: PropTypes.number,\n  newWidth: PropTypes.number,\n  height: PropTypes.number,\n  leftSidebarWidth: PropTypes.number.isRequired,\n  rightSidebarWidth: PropTypes.number.isRequired,\n  oldLeftSidebarState: PropTypes.bool.isRequired,\n  leftSideBarExpanded: PropTypes.bool.isRequired,\n  rightSideBarExpanded: PropTypes.bool.isRequired\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport PropTypes from \"prop-types\";\nimport LeftSideBar from \"./UI/LeftSideBar\";\nimport RightSideBar from \"./UI/RightSideBar\";\nimport MainWidget from \"./UI/MainWidget\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leftSidebarExpanded: true,\n      rightSidebarExpanded: true,\n      oldMainWidgetWidth: 500,\n      newMainWidgetWidth: 500,\n      windowWidth: 500,\n      mainWidgetHeight: 200,\n      componentInitialized: false,\n      oldLeftSideState: true,\n      leftSidebarWidth: 320,\n      rightSidebarWidth: 300\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    this.updateMainWidgetSize();\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  leftSideBarUpdateEvent = expanded => {\n    let result = this.state.windowWidth;\n    if (expanded) {\n      result -= this.state.leftSidebarWidth + 300;\n    }\n    if (this.state.rightSidebarExpanded) {\n      result -= this.state.rightSidebarWidth;\n    }\n    this.setState({\n      leftSidebarExpanded: expanded,\n      oldLeftSideState: this.state.leftSidebarExpanded,\n      oldMainWidgetWidth: this.state.newMainWidgetWidth,\n      newMainWidgetWidth: result\n    });\n  };\n\n  rightSideBarUpdateEvent = expanded => {\n    let result = this.state.windowWidth;\n    if (expanded) {\n      result -= this.state.rightSidebarWidth;\n    }\n    if (this.state.leftSidebarExpanded) {\n      result -= this.state.leftSidebarWidth + 300;\n    }\n    this.setState({\n      oldLeftSideState: this.state.leftSidebarExpanded,\n      rightSidebarExpanded: expanded,\n      oldMainWidgetWidth: this.state.newMainWidgetWidth,\n      newMainWidgetWidth: result\n    });\n    this.updateMainWidgetSize();\n  };\n\n  updateDimensions = () => {\n    let result = window.innerWidth;\n    if (this.state.leftSidebarExpanded) {\n      result -= this.state.leftSidebarWidth + 300;\n    }\n    if (this.state.rightSidebarExpanded) {\n      result -= this.state.rightSidebarWidth;\n    }\n\n    this.setState({\n      windowHeight: window.innerHeight,\n      leftSidebarExpanded: this.state.leftSidebarExpanded,\n      oldLeftSideState: this.state.leftSidebarExpanded,\n      oldMainWidgetWidth: result,\n      newMainWidgetWidth: result,\n      windowWidth: window.innerWidth\n    });\n  };\n\n  updateMainWidgetSize = () => {\n    // get document by ids;\n    const heightLeft = document\n      .getElementById(\"LeftSidebarContainer\")\n      .getBoundingClientRect().height;\n    const heightRight = document\n      .getElementById(\"RightSidebarContainer\")\n      .getBoundingClientRect().height;\n\n    const newHeight = Math.max(heightRight, heightLeft);\n    if (newHeight !== this.state.mainWidgetHeight) {\n      this.setState({ mainWidgetHeight: newHeight });\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: this.state.windowHeight,\n          backgroundColor: \"#3f3a40\",\n          margin: \"auto\",\n          padding: \"10px\"\n        }}\n      >\n        <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n          <MainWidget\n            leftSideBarExpanded={this.state.leftSidebarExpanded}\n            rightSideBarExpanded={this.state.rightSidebarExpanded}\n            leftSidebarWidth={this.state.leftSidebarWidth}\n            rightSidebarWidth={this.state.rightSidebarWidth}\n            oldWidth={this.state.oldMainWidgetWidth}\n            newWidth={this.state.newMainWidgetWidth}\n            oldLeftSidebarState={this.state.oldLeftSideState}\n            height={this.state.mainWidgetHeight}\n            title=\"MAIN\"\n          />\n          <LeftSideBar\n            width={this.state.leftSidebarWidth}\n            title=\"Modules Selection\"\n            loading={false}\n            updateEvent={this.leftSideBarUpdateEvent}\n          />\n          <RightSideBar\n            width={this.state.rightSidebarWidth}\n            title=\"Module Options\"\n            loading={false}\n            updateEvent={this.rightSideBarUpdateEvent}\n            heightUpdateEvent={this.updateMainWidgetSize}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as type from \"./types\";\nconst initialState = {\n  selectedDataSource: \"Ontology File\",\n  selectedDataSourceConfig: {},\n  selectedVertexEdgeMapper: \"Basic Mapper\",\n  selectedVertexEdgeMapperConfig: {},\n  selectedNodeLinkMapper: \"Basic Mapper\",\n  selectedNodeLinkMapperConfig: {},\n  createPreviewVisualization: false,\n  renderingModuleConfig: {\n    // graph defs\n    graph_mouseZoom: true,\n    graph_mouseDrag: true,\n    // node defs\n    node_mouseDrag: true,\n    node_mouseHover: true,\n    node_mouseSingleClick: true,\n    node_mouseDoubleClick: true,\n\n    // graphBgColor\n    graphBgColor: \"white\",\n\n    configSelected: \"Default\",\n\n    // links\n    link_mouseDrag: true,\n    link_mouseHover: true\n    // TODO the clicking interactions\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case type.SELECT_DATASOURCE: {\n      return {\n        ...state,\n        selectedDataSource: action.payload.selectedDataSource\n      };\n    }\n    case type.SELECT_VERTEXEDGE_MAPPER: {\n      return {\n        ...state,\n        selectedVertexEdgeMapper: action.payload.selectedVertexEdgeMapper\n      };\n    }\n    case type.SELECT_NODELINK_MAPPER: {\n      return {\n        ...state,\n        selectedNodeLinkMapper: action.payload.selectedNodeLinkMapper\n      };\n    }\n    case type.CREATE_PREVIEW_VISUALIZATION: {\n      return {\n        ...state,\n        createPreviewVisualization: action.payload.createPreviewVisualization\n      };\n    }\n    case type.UPDATE_RENDERING_MODULE_CONFIG: {\n      return {\n        ...state,\n        renderingModuleConfig: action.payload\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./UI/redux/rootReducer\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // enable redux debug tools\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer(history),\n    composeEnhancers(applyMiddleware(thunk, routerMiddleware(history)))\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport configureStore, { history } from \"./store\";\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport store from \"./store\";\n\nexport default history =>\n  combineReducers({\n    router: history ? connectRouter(history) : null,\n    store\n  });\n","module.exports = __webpack_public_path__ + \"static/media/demoBundle.39e97e15.zip\";"],"sourceRoot":""}