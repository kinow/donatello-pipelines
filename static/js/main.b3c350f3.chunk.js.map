{"version":3,"sources":["UI/TabLikeHeader.js","UI/redux/actions.js","UI/redux/types.js","UI/LeftSideBar.js","UI/RightSideBar.js","UI/VisModal.js","Implementation/Base/BaseComponent.js","Implementation/Base/BaseComponentConstants.js","Implementation/DataAccessComponent/network.js","Implementation/DataAccessComponent/SimpleProxyLoader.js","Implementation/DataAccessComponent/StaticLocalVowlJSONLoader.js","Implementation/Base/BaseModel.js","Implementation/Models/ResourceRelationModel.js","Implementation/Base/globalHelper.js","Implementation/Models/Resource.js","Implementation/Models/Relation.js","Implementation/Parsers/VOWLParser.js","Implementation/Parsers/SparqlParser.js","Implementation/Models/VertexEdgeModel.js","Implementation/Models/Edge.js","Implementation/Models/Vertex.js","Implementation/Mappers/BaseVertexEdgeMapper.js","Implementation/Models/Node.js","Implementation/Models/Link.js","Implementation/Base/LanguageTools.js","Implementation/Models/NodeLinkModel.js","Implementation/Mappers/BaseNodeLinkMapper.js","UI/VisualItemConfigurator.js","UI/RenderingModuleConfig.js","Implementation/DataAccessComponent/DBPediaLoader.js","UI/DataAccessConfigurator.js","Implementation/DataAccessComponent/WikiDataLoader.js","UI/WikiDataAccessConfigurator.js","Implementation/Mappers/RDFNodeLinkMapper.js","Implementation/Parsers/WikiDataParserExample.js","Implementation/DataAccessComponent/OrkgDataLoader.js","UI/ORKGAccessConfigurator.js","Implementation/Parsers/ORKGParser.js","Implementation/Mappers/UMLNodeLinkMapper.js","Implementation/Mappers/VowlNodeLinkMapper.js","UI/PipeLineVis.js","Implementation/Renderes/gizmoRenderer/renderingElements/BasePrimitive.js","Implementation/Renderes/gizmoRenderer/renderingElements/NodePrimitive.js","Implementation/Renderes/gizmoRenderer/renderingElements/LinkPrimitive.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/defaultRenderingHandler.js","Implementation/Renderes/gizmoRenderer/ShapeTools.js","Implementation/Renderes/gizmoRenderer/LineTools.js","Implementation/Renderes/gizmoRenderer/DrawTools.js","Implementation/Renderes/gizmoRenderer/Layout/ForceLayout.js","Implementation/Renderes/gizmoRenderer/Layout/BaseLayoutComponent.js","Implementation/Renderes/gizmoRenderer/Interactions/graphInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/relFinder_nodeInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/linkInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/interactions.js","Implementation/Renderes/gizmoRenderer/Interactions/nodeInteractions.js","Implementation/Renderes/gizmoRenderer/graph.js","Implementation/Renderes/gizmoRenderer/vowlGraph.js","Implementation/Renderes/gizmoRenderer/Interactions/ORKG_Interactions/graphInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/ORKG_Interactions/nodeInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/ORKG_Interactions/linkInteractions.js","Implementation/Renderes/gizmoRenderer/Interactions/ORKG_Interactions/interactions.js","Implementation/Renderes/gizmoRenderer/orkgGraph.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/BasicRenderingHandler.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/VOWLRenderingHandler.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/RDFStyledRenderingHandler.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/UMLStyledRenderingHandler.js","Implementation/Renderes/gizmoRenderer/renderingConfigs/OrkgRenderingHandler.js","UI/VisualizationPreview.js","UI/MainWidget.js","App.js","serviceWorker.js","UI/redux/store.js","store.js","index.js","UI/redux/rootReducer.js"],"names":["IndicatorItem","styled","div","expanded","initialRendering","keyframes","props","collapsable","expand","CollapsableBodyContainer","minHeight","maxHeight","ButtonContainer","createHeader","pos","title","collapse","toggleFunction","style","width","color","backgroundColor","borderTopLeftRadius","borderTopRightRadius","marginLeft","key","size","className","duration","margin","flexGrow","display","alignSelf","height","borderRadius","padding","border","borderColor","float","right","top","position","zIndex","onClick","icon","faAngleLeft","fontSize","createBody","children","collapseable","id","marginBottom","borderBottomLeftRadius","borderBottomRightRadius","overflow","marginTop","TabLikeHeader","useState","setExpand","paddingRight","selectDataSource","sourceName","dispatch","type","payload","selectedDataSource","updateRenderingModuleConfiguration","LeftSideBar","componentDidUpdate","prevProps","prevState","state","setState","updateDimensions","innerHeight","window","collapseLeftSideBar","updateEvent","dataSourceSelected","name","vertexEdgeMapperSelected","selectedVertexEdgeMapper","selectVertexEdgeMapper","nodeLinkMapperSelected","selectedNodeLinkMapper","selectNodeLinkMapper","awailableSources","dataSources","availableSources","awailableVertexEdgeMappers","availableVertexEdgeMappers","availableNodeLinkMappers","undefined","defaultDataSource","defaultVertexEdgeMapper","defaultNodeLinkMapper","addEventListener","this","removeEventListener","ContentContainer","Container","borderWidth","borderStyle","textAlign","overflowY","overflowX","map","item","index","selectedName","Button","Component","connect","store","aside","RightSideBar","heightUpdateEvent","collapseSidebar","document","body","VisModal","windowHeight","Modal","isOpen","showDialog","toggle","onOpened","maxWidth","ModalHeader","paddingTop","ModalBody","BaseComponent","getResult","resultObject","setInputData","inputDataAsJsonObject","execute","a","console","log","__run__","_postRun_","executeProxyJSONRequest","proxyCall","data","url","headers","jsonStringify","Error","myHeaders","Headers","JSON","stringify","Promise","resolve","reject","fetch","method","then","response","ok","json","catch","status","statusText","submitPostRequest","SimpleProxyLoader","dataHandlerObject","theData","setProxyURL","proxyURL","setProxyPort","port","proxyPort","setProxyPath","path","proxyPath","setProxyRequestDataObject","obj","dataRquest","p_runPromise","resultingDataObject","_buildProxyPath","_buildDataRequest","_clearPromise","requestType","fetchCall","p_runPromiseResolver","dataRequest","DataHandler","StaticLocalVowlJSONLoader","parse","ontologyFile","BaseModel","modelAsJsonObject","getResourceIdentifier","__resourceIdentifier","setResourceIdentifier","__isInMap__","identifier","__resourceIdentifier__","resourceObject","__isEqual__","b","ResourceRelationModel","error","addResource","resource","resourceMap","__mergeItem","__integrateResourceItem","resources","r1","r2","integrateResource","target","push","addRelation","relation","relationMap","relations","validIRI","str","test","Resource","addAnnotation","value","lang","inputName","suffix","split","pref","tokens","length","i","prName","prefixMapperL2S","_annotations","languageSelector","tm","_resourceURI","_semanticType","_axioms","val","arguments","t","indexOf","subject","axiom","object","hasOwnProperty","src","forEach","addSemanticType","annoType","langType","ax","Relation","domains","ranges","domainRangePairs","r","d","domain","range","dom","ran","pair","VOWLParser","m","processedData","_preProcess","_processData","classArray","class","propArray","property","Map","cAttr","classAttribute","pAttr","propertyAttribute","get","superClasses","iri","equivalent","subproperty","inverse","resultingModelObject","model","dataObject","__processResources","__processRelations","resultingModel","modelResource","label","comment","eq","addAxiom","sc","modelRelation","addDomain","addRange","addDomainRangePair","resourceIdentifier","__processLabels","__processComments","__processResourceAxioms","__processRelationAxioms","__processRelationAttributes","SparqlParser","output","input","binds","results","bindings","labels","head","vars","res","aStatement","allStatements","concat","definitionMap","statement","predicate","subjectResource","propertyRelation","objectResource","ignoreSubjectResource","ignoreObjectResource","ignorePropertyRelation","VertexEdgeModel","addVertex","vertex","vertexeMap","__integrateVertexEdgeItem","vertices","addEdge","edge","edgeMap","edges","Edge","resourceReference","Vertex","__outgoingEdges","__incomingEdges","BaseVertexEdgeMapper","requestedInputType","hasCompatibleInput","__mapInputModel","modelData","veModel","__mapResourcesToVertex","__mapRelationsToEdge","__adjustEdgeDisplayName","_createVertexFromResource","aVertex","vMapper","vertexMapper","dataPath","dataItem","_createEdgeFromRelation","anEdge","eMapper","edgeMapper","__vertexType","__vertexEdgeIdentifier","__displayName","__edgeType","__domainRangePair","dataArray","mappedVertex","Object","keys","axiomsArray","vertexInMap","targetVertex","getVertexFromName","axiomEdge","__createAxiomEdge","srcVertex","axiomName","__edgeAxiom","__source","__target","addOutgoingEdge","addIncomingEdge","mappedEdge","newEdge","source","src_vertex","tar_vertex","tempVertex","clonedEdge","sourceEdge","Node","__outgoingLinks","__incomingLinks","__nodeType","__aggregatedLink","link","Link","LanguageTools","prefixMap","IRI","textInLanguage","textObject","preferredLanguage","textForLanguage","searchLanguage","language","NodeLinkModel","addNode","node","nodeMap","__integrateNodeLinkItem","nodes","addLink","linkMap","links","tar","__SHADOWNODE","__hasEquivalentClasses","inLink","__SHADOWLINK","outLink","nodesToRemove","linksToRemove","n","idToRemove","splice","l","NodeLinkMapper","nlModel","__mapVerticesToNodes","_mapEdgesToLinks","_mergeAndSplitNodes","_introduceAuxiliaryNode","_autoAssignLinkTypesBasedOnTarget","__aggregateLinks","_createNodeFromVertex","aNode","nMapper","nodeMapper","_createLinkFromEdge","aLink","mapper","linkMapper","__linkType","__nodeLinkIdentifier","__linkAxiom","nodeMerge","nodeSplit","auxiliaryNodes","def","aggregate","allowAggregate","Array","isArray","addAggregatedLink","removeShadowsFromModel","constraints","lT","cT","j","toLowerCase","auxLinks","auxNode","k","auxDef","_auxApplies","auxLink1","link1Def","auxLink2","link2Def","_mergeNodes","_splitNodes","splitDefs","linksToSplit","_splitAppliesOnTarget","cloneIterator","nodeToClone","newNode","mergeDefs","linksToMerge","_mergeApplies","srcNode","getNodeFromName","tarNode","mergeNodes","compares","validCompares","applies","hasDef","cons","linkData","compareValue","nodeTypesToApply","isNodeOfType","langRep","IRI2Label","src_node","tar_node","addOutgoingLink","addIncomingLink","RenderingModuleConfig","propagateState","handleCheckChange","renderGraphInteractionsConfig","FormGroup","check","Label","Input","checked","graph_mouseZoom","onChange","paddingLeft","disabled","graph_mouseDrag","renderNodeInteractionsConfig","node_mouseDrag","node_mouseHover","node_mouseSingleClick","node_mouseDoubleClick","renderLinkInteractionsConfig","link_mouseDrag","link_mouseHover","createVisualAppearanceConfigDropDowns","items","availableConfigs","DropdownItem","configSelected","Dropdown","configSelectionOpen","DropdownToggle","caret","DropdownMenu","graphBgColor","availableRenderingConfigs","initialState","nodeLinkModel","readOnly","DBpediaProxyLoader","executePromisedQuery","query","setQuery","setGraph","graph","dbPediaGraph","setDBPediaURL","dbPediaURL","fullQuery","that","queryPromise","requestPath","encodeURIComponent","result","exampleQuery","teslaExample","fulfil","xhr","XMLHttpRequest","overrideMimeType","onerror","onload","responseText","open","send","DataAccessConfigurator","statePropagation","handleInputChange","newEntry","executeQuery","dbpediaHandler","DBPediaLoader","graphURL","endpointURL","queryResult","rows","cols","e","WikiDataLoader","setEndPointURL","wikiDataEndpointURL","accessHandler","edgeType","auxiliaryLinks","auxiliaryNode","BaseNodeLinkMapper","WikiDataExampleParser","bStatement","cStatement","dStatement","setRequestResourceId","requestResourceId","requestParameters","ORKGLoader","ORKGParser","_class","PipeLineVis","createPreviewVisualization","dataAccessHandlerExecuted","resourceRelationModel","vertexEdgeMapperExecuted","vertexEdgeModel","nodeLinkMapperExecuted","propagate_DBPEdiaConfiguratorState","dataAccessHandler_DBPediaState","childState","configureNodeLinkMapper","moduleName","showModal","selectedModule","selectionType","executeNodeLinkMapper","basicNodeLinkMapper","vowlNodeLinkMapper","VowlNodeLinkMapper","rdfNodeLinkMapper","RDFNodeLinkMapper","umlNodeLinkMapper","UMLNodeLinkMapper","viewNodeLinkMapperOutput","configureVertexEdgeMapper","executeVertexEdgeMapper","basicVertexEdgeMapper","viewVertexEdgeMapperOutput","configureDataAccessHandler","viewDataAccessHandlerOutput","executeDataAccessHandler","fileLoader","vowlParser","resourceModel","dbpediaLoader","simpleSparqlParser","wikiParser","OrkgDataLoader","parser","executeRenderingModule","configureRenderingModule","renderDataAccessHandler","renderVertexEdgeMapper","renderNodeLinkMapper","renderRenderingModule","flexFlow","WikiDataAccessConfigurator","ORKGAccessConfigurator","replacer","BasePrimitive","renderingConfig","cfgObj","__renderingConfig","__id","__drawTools","__visible","groupRoot","visible","drawTools","nameStr","NodePrimitive","incomingLinks","outgoingLinks","setPosition","x","y","updateRenderingPosition","attr","render","renderingElements","renderNode","renderingShape","renderingText","setTransitionAnimationDuration","__transition_animationDuration","startLayoutTransition","max","callback","f_x","parseInt","f_y","transition","tween","tr","d3","translate","px","py","each","__numberOfLoops","__internalObjectType","selectAll","remove","removeAllRenderedElementsFromParent","LinkPrimitive","renderingLine","updateLinePosition","sourceNode","targetNode","__internalType","options","link_renderingType","propertyNodePostion","updatePropertyPosition","propertyContainer","arrowContainer","reloadPos","oldPos","renderLink","setInternalType","lineTools","computeShapeBasedCenterPoint","cx","cy","DefaultRenderingHandler","getNodeConfigFromType","renderingConfigObject","defaultNodeCFG","getLinkConfigFromType","defaultLinkCFG","renderingType","bgColor","strokeElement","strokeWidth","strokeStyle","strokeColor","radius","fontStyle","fontFamily","fontColor","drawDisplayName","drawNestedAttributes","cropLongText","addTitleForDisplayName","overwritesShapeSize","overwriteOffset","fontPositionH","fontPositionV","lineStyle","lineWidth","lineColor","arrowHead","scaleFactor","fillColor","arrowTail","propertyNode","roundedCorner","fontSizeOverWritesShapeSize","overWriteOffset","drawPropertyNode","drawArrowHead","drawArrowTail","ShapeTools","getShapeRadius","shape","parseFloat","getShapeWidth","getShapeHeight","LineTools","computeIntersectionPointsWithProperty","offset","distOffset","parentShape","iP_Src","iP_Prop","iP_Tar","divisor","numberOfLoops","fairShareLoopAngleWithMargin","loopAngle","Math","min","dx","dy","labelRadian","atan2","labelAngle","__calculateAngle","startAngle","endAngle","shapeTools","usedRadius","arcFrom","__calculateRadian","arcTo","x1","cos","y1","sin","x2","y2","offsetDirection","__computeNormalizedOffsetDirection","__shapeBasedIntersection","computeIntersectionPoints","domainOffset","rangeOffset","angle","PI","radian","len","sqrt","IntPoint","cfg","distanceToBorder","scale","distanceToBorderX","distanceToBorderY","abs","DrawTools","__directLineFunction","line","__curveLineFunction","interpolate","__loopLineFunction","tension","group","text","_drawText","applyAdditionalOptions","config","append","labelBBWidth","measureTextWidth","croppedText","cropText","refereceResource","nestedLinks","measureTextHeight","w","fontSizeProperty","getComputedStyle","getPropertyValue","linePosY","linePosX","nestedGroup","offsetVal","shift","subGroupProperty","subGroupNode","linkCFG","renderingConfigHandler","nodeCFG","renderShadowNode","_text_vAlignCenter","_text_hAlignCenter","_addStrokeElements","element","selector","applyShapeStyle","targetPrimitive","renderBaseShape","tok","getRenderingHandler","groupContainer","shapeConfig","displayName","__createLinkLine","__drawArrowHead","__drawArrowTail","__createRenderingShapeForPropertyNode","itemId","dataObj","ref","__data__","elements","linkLine","parent","container","__drawArrowPrimitive","makerType","vB_String","m1X","m1Y","m2X","m2Y","p1","p2","pathString","linkType","curve","controlPoints","parentGroup","parentNode","centerPoint","getElementById","offsetWidth","offsetHeight","renderingTextElement","textWidth","ratio","newTruncatedTextLength","truncatedText","floor","substring","ForceLayout","pauseForceLayoutAnimation","doPause","stopForce","resumeForce","recalculatePositions","renderedNodes","renderedLinks","createForceElements","force","forceLinks","forceNodes","getForceLink","getForceNode","layoutHandlerReference","distanceValue","charge","linkDistance","computeLinkDistance","linkStrength","layoutSize","gravity","on","resume","stop","alpha","updateLayoutSize","start","bb","svgRoot","getBoundingClientRect","GraphInteractions","enableMouseZoom","zoomEnabled","enableMouseDrag","dragEnabled","applyGraphInteractions","graphObject","zoom","scaleExtent","zoomed","sourceEvent","buttons","call","graphRoot","event","resetUserLayout","zoomFactor","graphTranslation","preventDefault","stopPropagation","graphContainer","zoomEventByMWheel","deltaY","transformAnimation","ease","NodeInteractions","applyNodeInteractions","dragBehaviour","drag","origin","dragStart","dragEnd","hoverBehaviour","hasNodeHover","nodeHoverIn","nodeHoverOut","clickBehaviour","hasNodeClick","nodeClick","doubleClickBehavoir","hasNodeDobleClick","nodeDoubleClick","fixed","isAnchorNode","toggleForce","LinkInteractions","setHoverEnabled","hasLinkHover","hasPropertyHover","setNodeClickEnabled","setNodeDoubleClickEnabled","setDragEnabled","hasNodeDragEnabeld","applyLinkInteractions","linkHoverIn","linkHoverOut","propertyHoverBehaviour","propertyHoverIn","propertyHoverOut","shapeRoot","mouseEntered","keepRendering","unblockRendering","Interactions","graphInteractions","nodeInteractions","linkInteractions","redrawCall","warn","GraphRenderer","setGraphBackgroundColor","setRenderingContainer","divId","divRoot","setDrawTools","tools","setModel","setRenderingConfig","setInteractionHandler","handler","interactionHandler","configureGraphInteractions","nodeDrag","nodeHover","linkDrag","linkHover","resetUserNavigation","initializeRenderingContainer","_clearRenderingContainers","_createRenderingContainers","_updateSVG_Size","divBoundingBox","divNode","_checkForPaddingInDivNode","_createLayers","root","layerNamePrefix","layerObject","layer","noError","createNodePrimitive","nodePrimitive","createLinkPrimitive","linkPrimitive","setSourceNode","setTargetNode","updateMultiLinkTypes","isMultiLink","out","redrawRenderingPrimitives","_drawRenderingPrimitivesForNodes","_drawRenderingPrimitivesForLinks","drawRenderingPrimitives","applyInteractions","layoutHandler","initializeLayoutEngine","linkContainer","createRenderingPrimitives","nodeContainer","GRAPH_TYPE","typeClass","enter","classed","VOWLRenderer","addCollapseExpandButton","collapseButton_mouseHoverIn","singleCirc","collapseButton_mouseHoverOut","collapseExapandGroup","offsetX","exploreSingleNode","getStatementsBySubject","idObj","orkgDataLoader","mapper_1","mapper_2","getDataFromApi","resourceId","newModel","initializeInteractions","renderingGroup","renderingAnimationGroup","idToFetch","nodeHasBeenExplored","incrementalData","setExploreAnimation","drawNewElements","singleNodeExploration","VOWLRenderingHandler","doubleStrokes","Literal","auxForDataTypeProperties","auxForObjectProperties","auxLink","UMLRenderingHandler","VisualizationPreview","renderingModule","BasicRenderingHandler","renderingModuleConfig","RDFStyledRenderingHandler","UMLStyledRenderingHandler","OrkgGraph","OrkgRenderingHandler","dah","createRenderingElements","expandedLeft","oldLeftExpanded","newWidth","oldWidth","leftWidth","rightWidth","MainWidget","minWidth","updateFlipFlop","leftSideBarExpanded","expandedRight","rightSideBarExpanded","leftSidebarWidth","rightSidebarWidth","oldLeftSidebarState","innerWidth","left","App","updateMainWidgetSize","leftSideBarUpdateEvent","windowWidth","rightSidebarExpanded","leftSidebarExpanded","oldLeftSideState","oldMainWidgetWidth","newMainWidgetWidth","rightSideBarUpdateEvent","heightLeft","heightRight","newHeight","mainWidgetHeight","componentInitialized","loading","Boolean","location","hostname","match","selectedDataSourceConfig","selectedVertexEdgeMapperConfig","selectedNodeLinkMapperConfig","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","history","createBrowserHistory","basename","process","createStore","combineReducers","router","connectRouter","applyMiddleware","thunk","routerMiddleware","configureStore","ReactDOM","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"09CAMA,IAwEMA,EAAgBC,IAAOC,IAAV,KAjBY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAChC,IADiE,EAAvBC,iBAExC,OAAOC,YAAP,IAEWF,EAAW,EAAI,EAGfA,EAAW,EAAI,EAGfA,EAAW,EAAI,MAUjB,SAAAG,GAAK,OAAKA,EAAMC,aAAeD,EAAME,OAAS,EAAS,KAG9DC,EAA2BR,IAAOC,IAAV,KArDY,SAAC,GAKpC,IAJLM,EAII,EAJJA,OACAD,EAGI,EAHJA,YACAG,EAEI,EAFJA,UACAC,EACI,EADJA,UAEA,OAAIJ,EACKF,YAAP,IAEUG,EAASE,EAAYC,EAGrBH,EAASG,EAAYD,GAK5BH,OAAL,EACSF,YAAP,IAEUK,EAGAA,MAiCF,SAAAJ,GAAK,OACbA,EAAMC,aACFD,EAAME,OACJF,EAAMK,UAERL,EAAMI,aAGRE,EAAkBX,IAAOC,IAAV,KAzFS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBACzC,OAAKA,EAWDA,EACKC,YAAP,UADF,EAVSA,YAAP,IAEoBF,GAAY,GAAK,GAGjBA,EAAW,GAAK,QAqFlB,SAAAG,GAAK,OAAKA,EAAMH,SAAW,GAAK,OA8BhDU,EAAe,SACnBP,EACAQ,EACAC,GAII,IAHJC,EAGG,wDAFHR,EAEG,uCADHS,EACG,uCACH,OACE,yBACEC,MAAO,CACLC,MAAO,QACPC,MAAO,OACPC,gBAAiB,UACjBC,oBAAqB,MACrBC,qBAAsB,OACtBC,WAAoB,SAARV,EAAiB,EAAI,OAEnCW,IAAK,qBAAuBV,GAE3BA,EACAC,EACC,kBAACJ,EAAD,CACEa,IAAK,UAAYV,EACjBW,KAAK,KACLN,MAAM,YACNO,UAAU,gBACVxB,SAAUK,EACVoB,SAAU,IACVV,MAAO,CACLW,OAAQ,MACRC,SAAU,IACVC,QAAS,OACTC,UAAW,SACXb,MAAO,OACPc,OAAQ,OACRC,aAAc,OACdC,QAAS,EACTC,OAAQ,YACRC,YAAa,UACbC,MAAO,QACPC,MAAO,OACPC,IAAK,MACLC,SAAU,WACVC,OAAQ,KAEVC,QAAS1B,GAET,kBAAC,IAAD,CACE2B,KAAMC,IACNlB,UAAU,oBACVT,MAAO,CAAEM,WAAY,MAAOsB,SAAU,WAI1C,KAKFC,EAAa,SACjBzC,EACAS,EACAD,EACAkC,EACAC,EACAzC,EACAE,EACAC,GAEA,OACE,kBAACF,EAAD,CACEyC,GAAI,aAAenC,EACnBR,YAAa0C,EACbzC,OAAQA,EACRE,UAAWA,EACXC,UAAWA,EACXO,MAAO,CACLC,MAAOb,EAAMa,MAAQb,EAAMa,MAAQ,QACnCE,gBAAiB,QACjB8B,aAAc,OACdf,OAAQ,iBACRd,oBAAqB,MACrBC,qBAAsB,OACtB6B,uBAAwB,OACxBC,wBAAyB,EACzBC,SAAU,SACVlC,MAAO,YAGR4B,EACAC,IAAiBzC,GAChB,kBAACR,EAAD,CACEG,SAAUK,EACVU,MAAO,CACLuB,SAAU,WACVH,MAAO,QACPiB,WAAY5C,EAAYD,EAAY,GAAK,EACzCuB,OAAQ,OACRd,MAAO,OACPE,gBAAiB,UACjBa,aAAc,YAiBXsB,EAjJO,SAAAlD,GAAU,IAAD,EACDmD,oBAAS,GADR,mBACtBjD,EADsB,KACdkD,EADc,KAG7B,OACE,yBAAKxC,MAAO,CAAEyC,aAAc,SACzB9C,EACCP,EACAA,EAAMmC,SACNnC,EAAMS,MACNT,EAAMC,YACNC,GARS,kBAAMkD,GAAWlD,MAW3BuC,EACCzC,EACAA,EAAMS,MACNT,EAAMmC,SACNnC,EAAM0C,SACN1C,EAAMC,YACNC,EACAF,EAAMI,UACNJ,EAAMK,a,wBCzHDiD,EAAmB,SAAAC,GAAU,OAAI,SAAAC,GAC5CA,EAAS,CACPC,KCH6B,oBDI7BC,QAAS,CAAEC,mBAAoBJ,OAuBtBK,EAAqC,SAAAF,GAAO,OAAI,SAAAF,GAC3DA,EAAS,CACPC,KCzB0C,iCD0B1CC,QAASA,M,6REdPG,E,kDACJ,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IA0BR8D,mBAAqB,SAACC,EAAWC,GAC3BA,EAAUnE,WAAa,EAAKoE,MAAMpE,UACpC,EAAKqE,SAAS,CAAEpE,kBAAkB,KA7BnB,EAqCnBqE,iBAAmB,WACjB,EAAKD,SAAS,CAAEE,YAAaC,OAAOD,eAtCnB,EAyCnBE,oBAAsB,WACpB,EAAKtE,MAAMuE,aAAa,EAAKN,MAAMpE,UACnC,EAAKqE,SAAS,CAAErE,UAAW,EAAKoE,MAAMpE,YA3CrB,EA8CnB2E,mBAAqB,SAAAC,GACnB,EAAKP,SAAS,CAAEP,mBAAoBc,IAEpC,EAAKzE,MAAMsD,iBAAiBmB,IAjDX,EAoDnBC,yBAA2B,SAAAD,GACzB,EAAKP,SAAS,CAAES,yBAA0BF,IAE1C,EAAKzE,MAAM4E,uBAAuBH,IAvDjB,EA0DnBI,uBAAyB,SAAAJ,GACvB,EAAKP,SAAS,CAAEY,uBAAwBL,IAExC,EAAKzE,MAAM+E,qBAAqBN,IA3DhC,EAAKO,iBAAmBC,EAAoBC,iBAC5C,EAAKC,2BACHF,EAAoBG,2BACtB,EAAKC,yBACHJ,EAAoBI,yBACtB,EAAKpB,MAAQ,CACXpE,UAAU,EACVO,UAAW,IACXK,MAAOT,EAAMS,MACbX,kBAAkB,EAClB6D,wBAAoB2B,EACpBC,kBAAmB,gBACnBZ,8BAA0BW,EAC1BE,wBAAyB,eACzBpB,YAAa,IACbU,4BAAwBQ,EACxBG,sBAAuB,gBAlBR,E,gEAuBjBpB,OAAOqB,iBAAiB,SAAUC,KAAKxB,kBACvCwB,KAAKxB,qB,6CASLE,OAAOuB,oBAAoB,SAAUD,KAAKxB,kBAC1CwB,KAAKxB,qB,+BA8BG,IAAD,OACP,OACE,kBAAC0B,EAAD,CACEjD,GAAG,uBACH/C,SAAU8F,KAAK1B,MAAMpE,SACrBC,iBAAkB6F,KAAK1B,MAAMnE,iBAC7Be,MAAO8E,KAAK3F,MAAMa,MAClBD,MAAO,CACLC,MAAO8E,KAAK3F,MAAMa,MAClBc,OAAQgE,KAAK1B,MAAMG,YAAc,GACjCpC,MAAO,OACPG,SAAU,aAGZ,kBAAC2D,EAAA,EAAD,CACEzE,UAAU,mDACVT,MAAO,CACLgB,aAAc,OACdmE,YAAa,MACbhE,YAAa,mBACbiE,YAAa,QACbjD,wBAAyB,IACzBD,uBAAwB,IACxBnB,OAAQ,OACRT,WAAY,MACZJ,MAAO,QACPC,gBAAiB,YAGnB,yBAAKH,MAAO,CAAEC,MAAO8E,KAAK3F,MAAMa,MAAQ,GAAIoF,UAAW,WACpDN,KAAK1B,MAAMxD,QAIhB,kBAACqF,EAAA,EAAD,CACEzE,UAAU,mDACVT,MAAO,CACLgB,aAAc,OACdmE,YAAa,MACbhE,YAAa,mBACbiE,YAAa,QACb/E,qBAAsB,IACtBD,oBAAqB,IACrBE,WAAY,MACZJ,MAAO,QACPC,gBAAiB,UACjBkC,UAAW,OACXd,SAAU,WACVR,OAAQ,MACRuE,UAAW,SACXC,UAAW,WAGb,yBAAKvF,MAAO,CAAEC,MAAO8E,KAAK3F,MAAMa,MAAQ,GAAIoF,UAAW,WACrD,kBAAC,EAAD,CACExF,MAAM,eACN0B,SAAS,OACTlC,aAAa,EACbY,MAAO,QAEP,yBAAKD,MAAO,CAAEiB,QAAS,OAAQJ,QAAS,SACrCkE,KAAKX,iBAAiBoB,KAAI,SAACC,EAAMC,GAChC,IAAIC,EAAe,EAAKtC,MAAMN,mBAI9B,OAHK4C,IACHA,EAAe,EAAKtC,MAAMsB,mBAG1B,kBAACiB,EAAA,EAAD,CACErF,IAAK,gBAAkBmF,EACvB1F,MAAO,CACLW,OAAQ,MACRK,aAAc,MACdX,qBAAsB,OACtB6B,uBAAwB,OACxB/B,gBACEsF,IAASE,EAAe,UAAY,WAExClE,QAAS,WACP,EAAKmC,mBAAmB6B,KAGzBA,QAMX,kBAAC,EAAD,CACE5F,MAAM,sBACN0B,SAAS,OACTlC,aAAa,EACbY,MAAO,QAEP,yBAAKD,MAAO,CAAEiB,QAAS,OAAQJ,QAAS,SACrCkE,KAAKR,2BAA2BiB,KAAI,SAACC,EAAMC,GAC1C,IAAIC,EAAe,EAAKtC,MAAMU,yBAI9B,OAHK4B,IACHA,EAAe,EAAKtC,MAAMuB,yBAG1B,kBAACgB,EAAA,EAAD,CACErF,IAAK,gBAAkBmF,EACvB1F,MAAO,CACLW,OAAQ,MACRK,aAAc,MACdX,qBAAsB,OACtB6B,uBAAwB,OACxB/B,gBACEsF,IAASE,EAAe,UAAY,WAExClE,QAAS,WACP,EAAKqC,yBAAyB2B,KAG/BA,QAOX,kBAAC,EAAD,CACE5F,MAAM,oBACN0B,SAAS,OACTlC,aAAa,EACbY,MAAO,QAEP,yBAAKD,MAAO,CAAEiB,QAAS,OAAQJ,QAAS,SACrCkE,KAAKN,yBAAyBe,KAAI,SAACC,EAAMC,GACxC,IAAIC,EAAe,EAAKtC,MAAMa,uBAI9B,OAHKyB,IACHA,EAAe,EAAKtC,MAAMwB,uBAG1B,kBAACe,EAAA,EAAD,CACErF,IAAK,gBAAkBmF,EACvB1F,MAAO,CACLW,OAAQ,MACRK,aAAc,MACdX,qBAAsB,OACtB6B,uBAAwB,OACxB/B,gBACEsF,IAASE,EAAe,UAAY,WAExClE,QAAS,WACP,EAAKwC,uBAAuBwB,KAG7BA,e,GArNGI,aA4PXC,eAhBS,SAAAzC,GACtB,MAAO,CACL0C,MAAO1C,EAAM0C,UAIU,SAAAnD,GAEzB,MAAO,CACLF,iBAAkB,SAAAI,GAAO,OAAIF,EAASF,EAAiBI,KACvDkB,uBAAwB,SAAAlB,GAAO,OAC7BF,GFhQgCD,EEgQAG,EFhQc,SAAAF,GAClDA,EAAS,CACPC,KCRoC,2BDSpCC,QAAS,CAAEiB,yBAA0BpB,QAHH,IAAAA,GEiQlCwB,qBAAsB,SAAArB,GAAO,OAAIF,GF3PDD,EE2P+BG,EF3PjB,SAAAF,GAChDA,EAAS,CACPC,KCbkC,yBDclCC,QAAS,CAAEoB,uBAAwBvB,QAHH,IAAAA,ME+PrBmD,CAA6C7C,GA6CtDgC,EAAmBlG,IAAOC,IAAV,KAZkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUgB,EAAY,EAAZA,MACnD,OAAOd,YAAP,IAEUF,GAAYgB,EAAQ,EAGpBhB,EAAW,GAAKgB,MASlB,SAAAb,GAAK,OAAKA,EAAMH,SAAW,GAAKG,EAAMa,S,4RCvRhD,IAYMgF,EAAmBlG,IAAOiH,MAAV,KAZkB,SAAC,GAAyB,IAAvB/G,EAAsB,EAAtBA,SAAUgB,EAAY,EAAZA,MACnD,OAAOd,YAAP,IAEWF,IAAagB,EAAQ,IAAM,EAG3BhB,EAAW,IAAMgB,EAAQ,QAS3B,SAAAb,GAAK,OAAKA,EAAMH,SAAW,IAAMG,EAAMa,MAAQ,OAGrCgG,E,kDACnB,WAAY7G,GAAQ,IAAD,8BACjB,cAAMA,IAaR8D,mBAAqB,SAACC,EAAWC,GAC3BA,EAAUnE,WAAa,EAAKoE,MAAMpE,UACpC,EAAKqE,SAAS,CAAEpE,kBAAkB,IAIpC,EAAKE,MAAM8G,qBApBM,EA2BnBC,gBAAkB,WAChB,EAAK/G,MAAMuE,aAAa,EAAKN,MAAMpE,UACnC,EAAKqE,SAAS,CAAErE,UAAW,EAAKoE,MAAMpE,YA3BtC,EAAKoE,MAAQ,CACXpE,UAAU,EACVO,UAAW,IACXK,MAAOT,EAAMS,MACbX,kBAAkB,GANH,E,gEAWjBkH,SAASC,KAAKrG,MAAMuF,UAAY,W,6CAahCa,SAASC,KAAKrG,MAAMuF,UAAY,S,+BAShC,OACE,kBAAC,EAAD,CACEvD,GAAG,wBACH/C,SAAU8F,KAAK1B,MAAMpE,SACrBgB,MAAO8E,KAAK3F,MAAMa,MAClBf,iBAAkB6F,KAAK1B,MAAMnE,iBAC7Bc,MAAO,CACLC,MAAO8E,KAAK3F,MAAMa,MAClBsB,SAAU,WACVR,OAAQ0C,OAAOD,YAAc,GAC7B3C,QAAS,SAGX,kBAACqE,EAAA,EAAD,CACEzE,UAAU,mDACVT,MAAO,CACLgB,aAAc,OACdmE,YAAa,MACbhE,YAAa,mBACbiE,YAAa,QACbjD,wBAAyB,IACzBD,uBAAwB,IACxBnB,OAAQ,OACRT,WAAY,MACZJ,MAAO,QACPC,gBAAiB,YAGnB,yBAAKH,MAAO,CAAEC,MAAO8E,KAAK3F,MAAMa,MAAQ,GAAIoF,UAAW,WACpDN,KAAK1B,MAAMxD,QAkChB,kBAACqF,EAAA,EAAD,CACEzE,UAAU,mDACVT,MAAO,CACLgB,aAAc,OACdmE,YAAa,MACbhE,YAAa,mBACbiE,YAAa,QACb/E,qBAAsB,IACtBD,oBAAqB,IACrBE,WAAY,MACZJ,MAAO,QACPC,gBAAiB,UACjBkC,UAAW,OACXtB,OAAQ,MACRQ,SAAU,aAIZ,yBAAKvB,MAAO,CAAEC,MAAO8E,KAAK3F,MAAMa,MAAQ,GAAIoF,UAAW,WAAvD,mB,GAnHgCQ,a,mCClDpCS,E,4MAGJjD,MAAQ,CACNkD,aAAc,G,EAShBrD,mBAAqB,SAAAC,K,EAOrBI,iBAAmB,WAGjB,EAAKD,SAAS,CAAEiD,aAAc9C,OAAOD,YADtB,O,kEAbfC,OAAOqB,iBAAiB,SAAUC,KAAKxB,kBACvCwB,KAAKxB,qB,6CAOLE,OAAOuB,oBAAoB,SAAUD,KAAKxB,oB,+BAU1C,OACE,kBAACiD,EAAA,EAAD,CACEC,OAAQ1B,KAAK3F,MAAMsH,WACnBC,OAAQ5B,KAAK3F,MAAMuH,OACnBnG,KAAK,KACLoG,SAAU,aACV5G,MAAO,CAAE6G,SAAU,MAAO5E,aAAc,IAExC,kBAAC6E,EAAA,EAAD,CAAaH,OAAQ5B,KAAK3F,MAAMuH,QAC9B,yBAAKlG,UAAU,SAAST,MAAO,CAAEe,OAAQ,SACvC,yBAAKf,MAAO,CAAEC,MAAO,OAAQc,OAAQ,OAAQgG,WAAY,QACtDhC,KAAK3F,MAAMS,SAIlB,kBAACmH,EAAA,EAAD,CACEhH,MAAO,CACLiB,QAAS,IACTzB,UAAW,QACXuB,OAAQgE,KAAK1B,MAAMkD,aACnBnE,SAAU,SAGX2C,KAAK3F,MAAM0C,e,GAlDC+D,aAoERC,eAJS,SAAAzC,GAAK,MAAK,CAChC0C,MAAO1C,EAAM0C,SAGAD,CAAyBQ,G,wBCvEnBW,GACnB,aAAe,IAAD,gCAOdC,UAAY,WACV,OAAO,EAAKC,cARA,KAWdC,aAAe,SAAAC,GACb,EAAKA,sBAAwBA,GAZjB,KAedC,QAfc,sBAeJ,sBAAAC,EAAA,yDACH,EAAKF,sBADF,uBAENG,QAAQC,IAAI,uCAFN,0CAMF,EAAKC,UANH,OAOR,EAAKC,YAPG,2CAfI,KA0BdD,QAAU,aA1BI,KA6BdC,UAAY,aA5BV5C,KAAKlC,KCJmC,+BDKxCkC,KAAKsC,sBAAwB,KAC7BtC,KAAKoC,aAAe,IEyGXS,GAA0B,SAACC,EAAWC,GAEjD,OAjHwB,SACxBC,EACAC,EACAF,GAGI,IAFJG,IAEG,yDACH,IAAKF,EACH,MAAM,IAAIG,MAAM,yDAGlB,IAAMC,EAAY,IAAIC,QAAQJ,GAK9B,OAJIC,IACFH,EAAOO,KAAKC,UAAUR,IAGjB,IAAIS,SAAQ,SAACC,EAASC,GAC3BC,MAAMX,EAAK,CAAEY,OAAQ,OAAQX,QAASG,EAAW9B,KAAMyB,IACpDc,MAAK,SAAAC,GACJ,GAAKA,EAASC,GAWP,CACL,IAAMC,EAAOF,EAASE,OACtB,IAAIA,EAAKH,KAGP,OAAOJ,EAAQO,GAFfA,EAAKH,KAAKJ,GAASQ,MAAMP,OAdX,CAChB,IAAMM,EAAOF,EAASE,OAClBA,EAAKH,KACPG,EAAKH,KAAKH,GAEVA,EACE,IAAIP,MAAJ,2BACsBW,EAASI,OAD/B,aAC0CJ,EAASK,kBAa1DF,MAAMP,MA0EJU,CACLtB,EACA,CAAE,eAH4B,mCAI9BC,ICjHiBsB,G,kDACnB,aAAe,IAAD,8BACZ,gBAoBFlC,UAAY,WACV,OAAO,EAAKmC,kBAAkBC,SAtBlB,EAyBdC,YAAc,SAAAxB,GACZ,EAAKyB,SAAWzB,GA1BJ,EA4Bd0B,aAAe,SAAAC,GACb,EAAKC,UAAYD,GA7BL,EA+BdE,aAAe,SAAAC,GACb,EAAKC,UAAYD,GAhCL,EAkCdE,0BAA4B,SAAAC,GAC1B,EAAKC,WAAaD,GAnCN,EAuCdtC,QAvCc,sBAuCJ,sBAAAH,EAAA,yDAEkB,OAAtB,EAAK2C,aAFD,uBAGN,EAAKA,aAAe,IAAI3B,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAAlB,EAAA,6DAE9B,EAAK4C,oBAAsB,GAFG,SAIGvC,GAC/B,EAAKwC,kBACL,EAAKC,qBANuB,OAI9B,EAAKF,oBAJyB,OAQ9B3B,IAEK,EAAKa,oBACR,EAAKA,kBAAoB,IAE3B,EAAKA,kBAAkBC,QAAU,EAAKa,oBACtC,EAAKG,gBAdyB,2CAAZ,yDAHd,SAmBA,EAAKJ,aAnBL,2CAvCI,EAgEdE,gBAAkB,WAChB,OAAO,EAAKZ,SAAW,IAAM,EAAKG,UAAY,IAAM,EAAKG,WAjE7C,EAoEdO,kBAAoB,WAClB,MAAO,CACLE,YAAa,YACbC,UACE,2GAxEQ,EA4EdF,cAAgB,WACd,EAAKJ,aAAe,MA3EpB,EAAKrH,KFMwB,oBEL7B,EAAKsH,oBAAsB,KAC3B,EAAKD,aAAe,KACpB,EAAKO,qBAAuB,KAI5B,EAAKjB,SAAW,mBAChB,EAAKG,UAAY,QACjB,EAAKG,UAAY,eACjB,EAAKY,YAAc,CACjBH,YAAa,YACbC,UACE,0GAfQ,E,UAD+BG,I,SCG1BC,G,kDACnB,aAAe,IAAD,8BACZ,gBAIFtD,QALc,sBAKJ,sBAAAC,EAAA,sEACF,EAAKG,UADH,2CALI,EASdA,QATc,sBASJ,sBAAAH,EAAA,sDAEH,EAAK8B,oBACR,EAAKA,kBAAoB,IAE3B,EAAKA,kBAAkBC,QAAUjB,KAAKwC,MACpCxC,KAAKC,UAAUwC,KANT,2CAPR,EAAKjI,KHL6B,yBGGtB,E,UADuCuG,ICFlC2B,GACnB,aAAe,IAAD,gCAOd7D,UAAY,WACV,OAAO,EAAK8D,mBARA,KAWdC,sBAAwB,WACtB,OAAO,EAAKC,sBAZA,KAedC,sBAAwB,SAAAnJ,GAEtB,EAAKkJ,qBAAuBlJ,GAjBhB,KAqBdoJ,YAAc,SAAC5F,EAAK6F,GAClB,OAAO,GAtBK,KAyBdC,uBAAyB,SAAAC,KAzBX,KA6BdC,YAAc,SAACjE,EAAGkE,GAEhB,OAAO,GA9BP1G,KAAKlC,KJU0B,sBIT/BkC,KAAKiG,kBAAoB,KACzBjG,KAAKmG,qBAAuB,+BCLXQ,G,kDACnB,aAAe,IAAD,8BACZ,gBAeFN,YAAc,SAAC5F,EAAK6F,GAClB,OAAKA,IAKM7F,EAAI6F,IAJb7D,QAAQmE,MACN,wIAMG,IAzBK,EA4BdH,YAAc,SAACjE,EAAGkE,GAEhB,OAAO,GA9BK,EAiCdH,uBAAyB,SAAAC,GACvB,OAAOA,EAAe,EAAKL,uBAlCf,EAuCdU,YAAc,SAAAC,GAET,EAAKT,YAAY,EAAKU,YAAa,EAAKR,uBAAuBO,IAShE,EAAKE,YACH,EAAKD,YAAY,EAAKR,uBAAuBO,IAC7CA,GATF,EAAKG,wBACH,EAAKhB,kBAAkBiB,UACvB,EAAKH,YACLD,IA9CQ,EAyDdE,YAAc,SAACG,EAAIC,GAEjBD,EAAGE,kBAAkBD,IA3DT,EA8DdH,wBAA0B,SAACK,EAAQ7G,EAAKqG,GACtCQ,EAAOC,KAAKT,GACZrG,EAAI,EAAK8F,uBAAuBO,IAAaA,GAhEjC,EAmEdU,YAAc,SAAAC,GAET,EAAKpB,YAAY,EAAKqB,YAAa,EAAKnB,uBAAuBkB,IAUhE,EAAKT,YACH,EAAKU,YAAY,EAAKnB,uBAAuBkB,IAC7CA,GAVF,EAAKR,wBACH,EAAKhB,kBAAkB0B,UACvB,EAAKD,YACLD,IAvEJ,EAAK3J,KLUmC,+BKPxC,EAAKmI,kBAAoB,CAAEiB,UAAW,GAAIS,UAAW,IAGrD,EAAKZ,YAAc,GACnB,EAAKW,YAAc,GAEnB,EAAKvB,qBAAuB,uBAZhB,E,UADmCH,ICHtC4B,GAAW,SAAAC,GAEtB,MADiB,6TACDC,KAAKD,ICAFE,G,WACnB,aAAe,IAAD,gCAyBdC,cAAgB,SAAClJ,EAAMmJ,EAAOC,GAG5B,IAAIC,EAAYrJ,EAChB,GAAI8I,GAAS9I,GAAO,CAClB,IAAIsJ,EAAStJ,EAAKuJ,MAAM,KAAK,GACzBC,EAAO,GACX,GAAKF,EAQHE,EAAOxJ,EAAKuJ,MAAM,KAAK,GACvBC,GAAQ,QATG,CACX,IAAMC,EAASzJ,EAAKuJ,MAAM,KAC1BD,EAASG,EAAOA,EAAOC,OAAS,GAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOC,OAAS,EAAGC,IACrCH,GAAQC,EAAOE,GAEjBH,GAAQ,IAMV,IAAMI,EAAS,EAAKC,gBAAgBL,GAChCI,IACFP,EAAYO,EAAS,IAAMN,GAG1B,EAAKQ,aAAaT,KACrB,EAAKS,aAAaT,GAAa,IAGjC,IAAIU,EAAmB,UACnBX,GAAiB,cAATA,IACVW,EAAmBX,GAErB,IAAMY,EAAK,EAAKF,aAAaT,GACxBW,EAAGD,KACNC,EAAGD,GAAoB,IAEzBC,EAAGD,GAAkBtB,KAAKU,IA5D1BjI,KAAK+I,kBAAepJ,EACpBK,KAAKgJ,cAAgB,GACrBhJ,KAAK4I,aAAe,GACpB5I,KAAKiJ,QAAU,GACfjJ,KAAKmG,0BAAuBxG,EAE5BK,KAAK2I,gBAAkB,CACrB,wCAAyC,Q,+DAI1BO,GACjB,IAAKC,UAAUX,OACb,OAAOxI,KAAKmG,qBAEdnG,KAAKmG,qBAAuB+C,I,sCAGdE,IACyB,IAAnCpJ,KAAKgJ,cAAcK,QAAQD,IAC7BpJ,KAAKgJ,cAAczB,KAAK6B,K,+BA2CnBE,EAASC,EAAOC,GAElBxJ,KAAKiJ,QAAQQ,eAAeF,KAC/BvJ,KAAKiJ,QAAQM,GAAS,IAExBvJ,KAAKiJ,QAAQM,GAAOhC,KAAKiC,K,wCAGTE,GAAM,IAAD,OASrB,IAAK,IAAM5K,KANX4K,EAAIV,cAAcW,SAAQ,SAAAP,GACxB,EAAKQ,gBAAgBR,MAKJM,EAAId,aACrB,GAAIc,EAAId,aAAaa,eAAe3K,GAAO,CACzC,IAAM+K,EAAWH,EAAId,aAAa9J,GAE7BkB,KAAK4I,aAAa9J,KACrBkB,KAAK4I,aAAa9J,GAAQ,IAJa,eAO9BgL,GACT,GAAID,EAASJ,eAAeK,GAAW,CAErC,IAAM7B,EAAQ4B,EAASC,GACjBhB,EAAK,EAAKF,aAAa9J,GACxBgK,EAAGgB,KACNhB,EAAGgB,GAAY,IAGjB7B,EAAM0B,SAAQ,SAAA9B,IACuB,IAA/BiB,EAAGgB,GAAUT,QAAQxB,IACvBiB,EAAGgB,GAAUvC,KAAKM,QAX1B,IAAK,IAAMiC,KAAYD,EAAW,EAAvBC,GAjBM,eAqCVhL,GACL4K,EAAIT,QAAQQ,eAAe3K,KACxB,EAAKmK,QAAQnK,KAChB,EAAKmK,QAAQnK,GAAQ,IAIV4K,EAAIT,QAAQnK,GACpB6K,SAAQ,SAAAI,IAE6B,IAApC,EAAKd,QAAQnK,GAAMuK,QAAQU,IAC7B,EAAKd,QAAQnK,GAAMyI,KAAKwC,QAXhC,IAAK,IAAMjL,KAAQ4K,EAAIT,QAAU,EAAtBnK,O,uBC9GMkL,G,kDACnB,aAAe,IAAD,8BACZ,gBAEKC,QAAU,GACf,EAAKC,OAAS,GACd,EAAKC,iBAAmB,GALZ,E,qDAQLC,IACyB,IAA5BpK,KAAKkK,OAAOb,QAAQe,IACtBpK,KAAKkK,OAAO3C,KAAK6C,K,gCAIXC,GACRrK,KAAKiK,QAAQ1C,KAAK8C,K,yCAGDA,EAAGD,GACpBpK,KAAKmK,iBAAiB5C,KAAK,CAAE+C,OAAQD,EAAGE,MAAOH,M,wCAG/BV,GAAM,IAAD,OAErB,2EAAwBA,GAExBA,EAAIO,QAAQN,SAAQ,SAAAa,IACiB,IAA/B,EAAKP,QAAQZ,QAAQmB,IACvB,EAAKP,QAAQ1C,KAAKiD,MAGtBd,EAAIQ,OAAOP,SAAQ,SAAAc,IACiB,IAA9B,EAAKP,OAAOb,QAAQoB,IACtB,EAAKP,OAAO3C,KAAKkD,MAIrBf,EAAIS,iBAAiBR,SAAQ,SAAAe,GAC3B,EAAKP,iBAAiB5C,KAAKmD,U,GAvCK3C,ICKjB4C,G,kDACnB,aAAe,IAAD,8BACZ,gBAMFhI,QAPc,sBAOJ,8BAAAH,EAAA,sDACFoI,EAAI,IAAIjE,GACRkE,EAAgB,EAAKC,cAC3B,EAAKC,aAAaH,EAAGC,GAHb,2CAPI,EA+IdC,YAAc,WAEZ,IAAME,EAAa,EAAK1I,sBAAsB2I,MACxCC,EAAY,EAAK5I,sBAAsB6I,SAGzCpE,EAAc,IAAIqE,IAAIJ,EAAWvK,KAAI,SAAA4J,GAAC,MAAI,CAACA,EAAEpN,GAAIoN,OACjD3C,EAAc,IAAI0D,IAAIF,EAAUzK,KAAI,SAAA4J,GAAC,MAAI,CAACA,EAAEpN,GAAIoN,OAE9CgB,EAAQ,EAAK/I,sBAAsBgJ,eACnCC,EAAQ,EAAKjJ,sBAAsBkJ,kBAmDzC,OAjDAH,EAAM1B,SAAQ,SAAAjJ,GACZA,EAAK5C,KAAOiJ,EAAY0E,IAAI/K,EAAKzD,IAAIa,QAIvCiJ,EAAc,IAAIqE,IAAIC,EAAM5K,KAAI,SAAA4J,GAAC,MAAI,CAACA,EAAEpN,GAAIoN,OAE5CgB,EAAM1B,SAAQ,SAAAjJ,GACZ,GAAIA,EAAKgL,aACP,IAAK,IAAIjD,EAAI,EAAGA,EAAI/H,EAAKgL,aAAalD,OAAQC,IAC5C/H,EAAKgL,aAAajD,GAAK1B,EAAY0E,IAAI/K,EAAKgL,aAAajD,IAAIkD,IAGjE,GAAIjL,EAAKkL,WACP,IAAK,IAAInD,EAAI,EAAGA,EAAI/H,EAAKkL,WAAWpD,OAAQC,IAC1C/H,EAAKkL,WAAWnD,GAAK1B,EAAY0E,IAAI/K,EAAKkL,WAAWnD,IAAIkD,OAK/DJ,EAAM5B,SAAQ,SAAAjJ,GACZA,EAAK5C,KAAO4J,EAAY+D,IAAI/K,EAAKzD,IAAIa,KACjC4C,EAAK4J,SAEP5J,EAAK4J,OAASvD,EAAY0E,IAAI/K,EAAK4J,QAAQqB,KAEzCjL,EAAK6J,QAEP7J,EAAK6J,MAAQxD,EAAY0E,IAAI/K,EAAK6J,OAAOoB,QAK7CjE,EAAc,IAAI0D,IAAIG,EAAM9K,KAAI,SAAA4J,GAAC,MAAI,CAACA,EAAEpN,GAAIoN,OAC5CkB,EAAM5B,SAAQ,SAAAjJ,GACZ,GAAIA,EAAKmL,YACP,IAAK,IAAIpD,EAAI,EAAGA,EAAI/H,EAAKmL,YAAYrD,OAAQC,IAC3C/H,EAAKmL,YAAYpD,GAAKf,EAAY+D,IAAI/K,EAAKmL,YAAYpD,IAAIkD,IAG/D,GAAIjL,EAAKkL,WACP,IAAK,IAAInD,EAAI,EAAGA,EAAI/H,EAAKkL,WAAWpD,OAAQC,IAC1C/H,EAAKkL,WAAWnD,GAAKf,EAAY+D,IAAI/K,EAAKkL,WAAWnD,IAAIkD,IAGzDjL,EAAKoL,UACPpL,EAAKoL,QAAUpE,EAAY+D,IAAI/K,EAAKoL,SAASH,QAG1C,CAAEzE,UAAWmE,EAAO1D,UAAW4D,IA1MtC,EAAKzN,KTDuB,mBSE5B,EAAKiO,qBAAuB,KAHhB,E,yDAaDC,EAAOC,GAClBjM,KAAKkM,mBAAmBF,EAAOC,GAC/BjM,KAAKmM,mBAAmBH,EAAOC,GAC/BjM,KAAKoC,aAAagK,eAAiBJ,I,sCAIrBlF,EAAUuF,GAExB,GAAIvF,EAASwF,MAEX,GAA8B,kBAAnBxF,EAASwF,MAClBD,EAAcrE,cAAc,aAAclB,EAASwF,YAEnD,IAAK,IAAMxN,KAAQgI,EAASwF,MACtBxF,EAASwF,MAAM7C,eAAe3K,IACnB,cAATA,GACFuN,EAAcrE,cACZ,aACAlB,EAASwF,MAAMxN,GACfA,K,wCASIgI,EAAUuF,GAC1B,GAAIvF,EAASyF,QAEX,GAAgC,kBAArBzF,EAASyF,QAClBF,EAAcrE,cAAc,eAAgBlB,EAASyF,cAErD,IAAK,IAAMzN,KAAQgI,EAASyF,QACtBzF,EAASyF,QAAQ9C,eAAe3K,IACrB,cAATA,GACFuN,EAAcrE,cACZ,eACAlB,EAASyF,QAAQzN,GACjBA,K,8CASUgI,EAAUuF,GAC5BvF,EAAS8E,YACX9E,EAAS8E,WAAWjC,SAAQ,SAAA6C,GAC1BH,EAAcI,SAASJ,EAAe,sBAAuBG,MAG7D1F,EAAS4E,cACX5E,EAAS4E,aAAa/B,SAAQ,SAAA+C,GAC5BL,EAAcI,SAASJ,EAAe,kBAAmBK,Q,8CAKvCjF,EAAU4E,M,kDAIN5E,EAAUkF,GAEhClF,EAAS6C,QACXqC,EAAcC,UAAUnF,EAAS6C,QAE/B7C,EAAS8C,OACXoC,EAAcE,SAASpF,EAAS8C,OAG9B9C,EAAS6C,QAAU7C,EAAS8C,OAC9BoC,EAAcG,mBAAmBrF,EAAS6C,OAAQ7C,EAAS8C,S,yCAI5CyB,EAAOC,GAAa,IAAD,OACpCA,EAAW/E,UAAUyC,SAAQ,SAAA7C,GAEtBA,EAAS6E,IAGZ7E,EAASX,qBAAuBW,EAAS6E,IAFzC7E,EAASX,qBAAuBW,EAAShJ,KAK3C,IAAMuO,EAAgB,IAAItE,GAE1BsE,EAAcU,mBAAmBjG,EAASX,sBAC1CkG,EAActD,aAAejC,EAAS6E,IACtCU,EAAczC,gBAAgB9C,EAAShJ,MAEvC,EAAKkP,gBAAgBlG,EAAUuF,GAC/B,EAAKY,kBAAkBnG,EAAUuF,GACjC,EAAKa,wBAAwBpG,EAAUuF,GACvCL,EAAMnF,YAAYwF,Q,yCAIHL,EAAOC,GAAa,IAAD,OACpCA,EAAWtE,UAAUgC,SAAQ,SAAAlC,GAQ3B,GAPKA,EAASkE,IAGZlE,EAAStB,qBAAuBsB,EAASkE,IAFzClE,EAAStB,qBAAuBsB,EAAS3J,KAMrB,oBAAlB2J,EAAS3J,KAAb,CAIA,IAAM6O,EAAgB,IAAI3C,GAE1B2C,EAAcI,mBAAmBtF,EAAStB,sBAC1CwG,EAAc5D,aAAetB,EAASkE,IACtCgB,EAAc/C,gBAAgBnC,EAAS3J,MAEvC,EAAKkP,gBAAgBvF,EAAUkF,GAC/B,EAAKM,kBAAkBxF,EAAUkF,GACjC,EAAKQ,wBAAwB1F,EAAUkF,GACvC,EAAKS,4BAA4B3F,EAAUkF,GAE3CX,EAAMxE,YAAYmF,W,GA7IgBzK,ICAnBmL,G,kDACnB,aAAe,IAAD,8BACZ,gBAwBF1K,QAzBc,sBAyBJ,8BAAAH,EAAA,sDACFoI,EAAI,IAAIjE,GACRkE,EAAgB,EAAKC,cAC3B,EAAKC,aAAaH,EAAGC,GAHb,2CAzBI,EAwIdC,YAAc,WACZrI,QAAQC,IAAI,2BAA4B,EAAKJ,uBAE7C,IAAMgL,EAAS,GACTC,EAAQ,EAAKjL,sBAIbkL,EAAQD,EAAME,QAAQC,SACtBC,EAASJ,EAAMK,KAAKC,KAc1B,OAZAL,EAAM7D,SAAQ,SAAAmE,GAEZ,IAAMC,EAAa,GAEnBJ,EAAOhE,SAAQ,SAAA2C,GACbyB,EAAWzB,GAASwB,EAAIxB,MAG1BgB,EAAO/F,KAAKwG,MAGd,EAAKC,cAAgB,GAAGC,OAAO,EAAKD,cAAeV,GAC5CA,GA7JP,EAAKxP,KVAyB,qBUE9B,EAAKoQ,cAAgB,CAEnB,kDAAmD,YACnD,WAAY,YAEZ,kDAAmD,QACnD,qDAAsD,QACtD,gDAAiD,QAGjD,+CAAgD,aAChD,6CAA8C,aAC9C,mDAAoD,aAGpD,qBAAsB,sBACtB,uBAAwB,uBApBd,E,yDA+BDlC,EAAOC,GAAa,IAAD,OAC9BA,EAAWtC,SAAQ,SAACwE,EAAWxN,GAC7B,IAAM2I,EAAU6E,EAAU7E,QACpB8E,EAAYD,EAAUC,UACtB5E,EAAS2E,EAAU3E,OAInB6E,EAAkB,IAAItG,GACtBuG,EAAmB,IAAItE,GACvBuE,EAAiB,IAAIxG,GAG3BsG,EAAgBtB,mBAAmBzD,EAAQrB,OACvC,EAAKL,SAAS0B,EAAQrB,SACxBoG,EAAgBtF,aAAeO,EAAQrB,OAGzCqG,EAAiBvB,mBAAmBqB,EAAUnG,OAC1C,EAAKL,SAASwG,EAAUnG,SAC1BqG,EAAiBvF,aAAeqF,EAAUnG,OAG5CsG,EAAexB,mBAAmBvD,EAAOvB,OACrC,EAAKL,SAAS4B,EAAOvB,SACvBsG,EAAexF,aAAeS,EAAOvB,OAEnB,YAAhBuB,EAAO1L,MACTyQ,EAAe3E,gBAAgB,WAGjC,IAAI4E,GAAwB,EACxBC,GAAuB,EACvBC,GAAyB,EAE7B,GAA4C,cAAxC,EAAKR,cAAcE,EAAUnG,OAY/B,MAXyC,wBAArC,EAAKiG,cAAc1E,EAAOvB,OAC5BoG,EAAgBzE,gBAAgBJ,EAAOvB,QAEvCxF,QAAQC,IAAI,0CAGZgM,GAAyB,QAI3B1C,EAAMnF,YAAYwH,GAKpB,OAAQ,EAAKH,cAAcE,EAAUnG,QACnC,IAAK,QACHoG,EAAgB5B,SACdnD,EAAQrB,MACRmG,EAAUnG,MACVuB,EAAOvB,OAETwG,GAAuB,EACvB,MACF,IAAK,aACCjF,EAAO,YACT6E,EAAgBrG,cACdoG,EAAUnG,MACVuB,EAAOvB,MACPuB,EAAO,aAGT6E,EAAgBrG,cAAcoG,EAAUnG,MAAOuB,EAAOvB,OAGxDwG,GAAuB,EACvBC,GAAyB,EACzB,MACF,QAQEJ,EAAiB1B,UAAUtD,EAAQrB,OACnCqG,EAAiBzB,SAASrD,EAAOvB,OACjCqG,EAAiBxB,mBAAmBxD,EAAQrB,MAAOuB,EAAOvB,OAE1DwG,GAAuB,EACvBD,GAAwB,EAGvBA,GACHxC,EAAMnF,YAAYwH,GAEfK,GACH1C,EAAMxE,YAAY8G,GAEfG,GACHzC,EAAMnF,YAAY0H,MAGtBvO,KAAKoC,aAAagK,eAAiBJ,I,+BA+B5BnE,GAEP,MADiB,6TACDC,KAAKD,O,GArKiB3F,ICFrByM,G,kDACnB,aAAe,IAAD,8BACZ,gBAuBFtI,YAAc,SAAC5F,EAAK6F,GAClB,OAAKA,IAKM7F,EAAI6F,IAJb7D,QAAQmE,MACN,wIAMG,IAjCK,EAoCdL,uBAAyB,SAAAC,GACvB,OAAOA,EAAe,EAAKL,uBArCf,EA0CdyI,UAAY,SAAAC,GAEP,EAAKxI,YAAY,EAAKyI,WAAY,EAAKvI,uBAAuBsI,KAE/D,EAAKE,0BACH,EAAK9I,kBAAkB+I,SACvB,EAAKF,WACLD,IAjDQ,EAsDdI,QAAU,SAAAC,GACH,EAAK7I,YAAY,EAAK8I,QAAS,EAAK5I,uBAAuB2I,KAC9D,EAAKH,0BACH,EAAK9I,kBAAkBmJ,MACvB,EAAKD,QACLD,IA3DQ,EAgEdH,0BAA4B,SAACzH,EAAQ7G,EAAKqG,GACxCQ,EAAOC,KAAKT,GACZrG,EAAI,EAAK8F,uBAAuBO,IAAaA,GAhE7C,EAAKhJ,KXU6B,yBWPlC,EAAKmI,kBAAoB,CAAE+I,SAAU,GAAII,MAAO,IAGhD,EAAKN,WAAa,GAClB,EAAKK,QAAU,GAEf,EAAKhJ,qBAAuB,yBAXhB,E,wDAcFrH,GAEV,OAAOkB,KAAKqG,YAAYrG,KAAK8O,WAAYhQ,K,wCAGzBA,GAChB,OAAOkB,KAAK8O,WAAWhQ,O,GArBkBkH,ICLxBqJ,GACnB,aAAe,oBACbrP,KAAKsP,kBAAoB,MCFRC,G,WACnB,aAAe,oBACbvP,KAAKsP,kBAAoB,KACzBtP,KAAKwP,gBAAkB,GACvBxP,KAAKyP,gBAAkB,G,4DAGTP,GACdlP,KAAKwP,gBAAgBjI,KAAK2H,K,sCAGZA,GACdlP,KAAKyP,gBAAgBlI,KAAK2H,O,KCLTQ,G,kDACnB,aAAe,IAAD,8BACZ,gBA0BFrN,aAAe,SAAAC,GACb,EAAKA,sBAAwBA,EAGzB,EAAKqN,qBAAuBrN,EAAsB8J,eAAetO,KACnE,EAAK8R,oBAAqB,EAE1BnN,QAAQmE,MACN,0BACEtE,EAAsB8J,eAAetO,KACrC,aACA,EAAK6R,qBAtCC,EA2CdhN,QAAU,WACJ,EAAKiN,mBACP,EAAKC,mBAELpN,QAAQmE,MAAM,cACd,EAAKxE,aAAagK,eAAiB,OAhDzB,EA4DdyD,gBAAkB,WAEhB,IACMC,EADQ,EAAKxN,sBAAsB8J,eACjBjK,YAElB4N,EAAU,IAAIpB,GACpBoB,EAAQ3J,sBAAsB,0BAC9B,EAAK4J,uBAAuBD,EAASD,EAAU5I,WAC/C,EAAK+I,qBAAqBF,EAASD,EAAUnI,WAC7C,EAAKuI,wBAAwBH,EAAQ9J,kBAAkBmJ,OAEvD,EAAKhN,aAAagK,eAAiB2D,GAvEvB,EAyIdI,0BAA4B,SAAAzP,GAC1B,IAAM0P,EAAU,IAAIb,GACpBa,EAAQd,kBAAoB5O,EAG5B,IAAM2P,EAAU,EAAKnC,cAAcoC,aACnC,IAAK,IAAMxR,KAAQuR,EACjB,GAAIA,EAAQ5G,eAAe3K,GAAO,CAEhC,IAAMyR,EAAWF,EAAQvR,GACzB,IAA+B,IAA3ByR,EAASlH,QAAQ,KAAa,CAIhC,IAFA,IAAMd,EAASgI,EAASlI,MAAM,KAC1BmI,EAAW9P,EACN+H,EAAI,EAAGA,EAAIF,EAAOC,OAAQC,IACjC+H,EAAWA,EAASjI,EAAOE,IAE7B2H,EAAQtR,GAAQ0R,OAGhBJ,EAAQtR,GAAQ4B,EAAK6P,GAI3B,OAAOH,GAjKK,EAmPdK,wBAA0B,SAAA/P,GACxB,IAAMgQ,EAAS,IAAIrB,GACnBqB,EAAOpB,kBAAoB5O,EAG3B,IAAMiQ,EAAU,EAAKzC,cAAc0C,WACnC,IAAK,IAAM9R,KAAQ6R,EACjB,GAAIA,EAAQlH,eAAe3K,GAAO,CAEhC,IAAMyR,EAAWI,EAAQ7R,GACzB,IAA+B,IAA3ByR,EAASlH,QAAQ,KAAa,CAIhC,IAFA,IAAMd,EAASgI,EAASlI,MAAM,KAC1BmI,EAAW9P,EACN+H,EAAI,EAAGA,EAAIF,EAAOC,OAAQC,IACjC+H,EAAWA,EAASjI,EAAOE,IAE7BiI,EAAO5R,GAAQ0R,OAGfE,EAAO5R,GAAQ4B,EAAK6P,GAI1B,OAAOG,GAzQP,EAAK5S,KdY8B,0BcVnC,EAAK6R,mBdKmC,+BcJxC,EAAKC,oBAAqB,EAG1B,EAAK1B,cAAgB,CAEnBoC,aAAc,CACZO,aAAc,gBACdC,uBAAwB,uBACxBC,cAAe,2BAGjBH,WAAY,CACVI,WAAY,gBACZF,uBAAwB,uBACxBC,cAAe,0BAEfE,kBAAmB,qBArBX,E,oEAoDUtJ,GACtBA,EAAUgC,SAAQ,SAAAS,GACXA,EAAE2G,gBACL3G,EAAE2G,cAAgB3G,EAAE0G,6B,6CAmBH9E,EAAOkF,GAAY,IAAD,OAEvCA,EAAUvH,SAAQ,SAAAjJ,GAChB,IAAMyQ,EAAe,EAAKhB,0BAA0BzP,GACpDsL,EAAM4C,UAAUuC,MAMCnF,EAAM/F,kBAAkB+I,SAChCrF,SAAQ,SAAAkF,GAEjB,GACEA,EAAOS,kBAAkBrG,SACzBmI,OAAOC,KAAKxC,EAAOS,kBAAkBrG,SAAST,OAAS,EACvD,CACA,IAAM8I,EAAczC,EAAOS,kBAAkBrG,QAD7C,WAEWnK,GACLwS,EAAY7H,eAAe3K,IAEjBwS,EAAYxS,GACpB6K,SAAQ,SAAAJ,GACLyC,EAAMuF,YAAYhI,IACrB9G,QAAQmE,MACN,uDAGJ,IAAM4K,EAAexF,EAAMyF,kBAAkBlI,GACvCmI,EAAY,EAAKC,kBACrB9C,EACA/P,EACA0S,GAEFxF,EAAMiD,QAAQyC,OAhBpB,IAAK,IAAM5S,KAAQwS,EAAc,EAAtBxS,S,wCAwBC8S,EAAWC,EAAWL,GACtC,IAAMd,EAAS,IAAIrB,GAiBnB,OAhBAqB,EAAOpB,kBAAoBuC,EAC3BnB,EAAOM,WAAa,YACpBN,EAAOoB,YAAcD,EACrBnB,EAAOI,uBACLc,EAAUd,uBACV,KACAe,EACA,KACAL,EAAaV,uBACfJ,EAAOK,cAAgBc,EACvBnB,EAAOqB,SAAWH,EAClBlB,EAAOsB,SAAWR,EAElBI,EAAUK,gBAAgBvB,GAC1Bc,EAAaU,gBAAgBxB,GAEtBA,I,2CA8BY1E,EAAOkF,GAAY,IAAD,OAErCA,EAAUvH,SAAQ,SAAAjJ,GAEhB,IADA,IAAMyR,EAAa,EAAK1B,wBAAwB/P,GACvC+H,EAAI,EAAGA,EAAI0J,EAAWlB,kBAAkBzI,OAAQC,IAAK,CAC5D,IAAM2J,EAAU,EAAK3B,wBAAwB/P,GACvC2R,EAASD,EAAQnB,kBAAkBxI,GAAG6B,OACtChD,EAAS8K,EAAQnB,kBAAkBxI,GAAG8B,MACtC+H,EAAatG,EAAMyF,kBAAkBY,GACrCE,EAAavG,EAAMyF,kBAAkBnK,GAS3C,GAPIgL,IACFF,EAAQL,SAAWO,EACnBA,EAAWL,gBAAgBG,IAKzBG,EACFH,EAAQJ,SAAWO,EACnBA,EAAWN,gBAAgBG,QAE3B,GACEpG,EAAMyF,kBACJW,EAAQtB,uBAAyB,KAAOxJ,GAE1C,CACA,IAAMkL,EAAaxG,EAAMyF,kBACvBW,EAAQtB,uBAAyB,KAAOxJ,GAE1C8K,EAAQJ,SAAWQ,EACnBA,EAAWN,gBAAgBC,OACtB,CACL,IAAM/B,EAAU,IAAIb,GACpBa,EAAQd,kBAAoBhI,EACxBM,GAASN,GAEX8I,EAAQU,uBAAyBxJ,GAEjC8I,EAAQS,aAAe,UAEvBT,EAAQU,uBACNsB,EAAQtB,uBAAyB,KAAOxJ,EAC1C8I,EAAQW,cAAgBzJ,GAK1B8I,EAAQ8B,gBAAgBE,GACxBpG,EAAM4C,UAAUwB,GAChBgC,EAAQJ,SAAW5B,EAGvB,GAAIpE,EAAMmD,QAAQiD,EAAQtB,wBAAyB,CACjD,IAAM2B,EAAa,IAAIpD,GACjBqD,EAAa1G,EAAMmD,QAAQiD,EAAQtB,wBACzC,IAAK,IAAMhS,KAAQ4T,EACbA,EAAWjJ,eAAe3K,IACf,sBAATA,IACF2T,EAAW3T,GAAQ4T,EAAW5T,IAIpC2T,EAAWV,SAAWK,EAAQL,SAC9BU,EAAWT,SAAWI,EAAQJ,SAEzBS,EAAW1B,gBACd0B,EAAW1B,cAAgB0B,EAAW3B,wBAExC2B,EAAW3B,wBAA0B,eAAiBrI,EAEtDuD,EAAMiD,QAAQwD,QAEdzG,EAAMiD,QAAQmD,W,GA9O0BlQ,ICP7ByQ,G,WACnB,aAAe,oBACb3S,KAAKsP,kBAAoB,KACzBtP,KAAK4S,gBAAkB,GACvB5S,KAAK6S,gBAAkB,GACvB7S,KAAK8S,WAAa,GAClB9S,KAAK+S,iBAAmB,G,8DAGRC,GAChBhT,KAAK+S,iBAAiBxL,KAAKyL,K,sCAGbA,GACdhT,KAAK4S,gBAAgBrL,KAAKyL,K,sCAGZA,GACdhT,KAAK6S,gBAAgBtL,KAAKyL,K,mCAGflV,GACX,IAAK,IAAI2K,EAAI,EAAGA,EAAIzI,KAAK8S,WAAWtK,OAAQC,IAC1C,GAAIzI,KAAK8S,WAAWrK,KAAO3K,EACzB,OAAO,EAGX,OAAO,M,KC3BUmV,GACnB,aAAe,oBACbjT,KAAKsP,kBAAoB,MCDR4D,G,uGAiCFC,EAAWC,GAC1B,IAAIhL,EAASgL,EAAI/K,MAAM,KAAK,GACxBC,EAAO,GACX,GAAKF,EAQHE,EAAO8K,EAAI/K,MAAM,KAAK,GACtBC,GAAQ,QATG,CACX,IAAMC,EAAS6K,EAAI/K,MAAM,KACzBD,EAASG,EAAOA,EAAOC,OAAS,GAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOC,OAAS,EAAGC,IACrCH,GAAQC,EAAOE,GAEjBH,GAAQ,IAKV,IACMI,EAASyK,EAAU7K,GAMzB,OALII,EACOA,EAAS,IAAMN,EAEfA,M,KApDM8K,GACZG,eAAiB,SAACC,EAAYC,GACnC,GAA0B,qBAAfD,EAAX,CAIA,GAA0B,kBAAfA,EAAyB,CAClC,GAAI1L,GAAS0L,GAAa,CACxB,IAAIlL,EAASkL,EAAWjL,MAAM,KAAK,GACnC,IAAKD,EAAQ,CACX,IAAMG,EAAS+K,EAAWjL,MAAM,KAChCD,EAASG,EAAOA,EAAOC,OAAS,GAElC,OAAOJ,EAET,OAAOkL,EAGT,GAAIC,GAAqBD,EAAW7J,eAAe8J,GACjD,OAAOD,EAAWC,GAAmB,GAGvC,IAAIC,EAtBaN,GAsBUO,eAAeH,EAAY,MACtD,OAAIE,IAGJA,EA1BiBN,GA0BMO,eAAeH,EAAY,YAFzCE,EAAgB,GAMlB,OA9BUN,GAyDZO,eAAiB,SAACH,EAAYC,GACnC,IAAK,IAAMG,KAAYJ,EACrB,GACEI,IAAaH,GACbD,EAAW7J,eAAeiK,GAE1B,OAAOJ,EAAWI,I,IC3DLC,G,kDACnB,aAAe,IAAD,8BACZ,gBAuBFtN,YAAc,SAAC5F,EAAK6F,GAClB,OAAKA,IAKM7F,EAAI6F,IAJb7D,QAAQmE,MACN,wIAMG,IAjCK,EAoCdH,YAAc,SAACjE,EAAGkE,GAEhB,OAAO,GAtCK,EAyCdH,uBAAyB,SAAAC,GACvB,OAAOA,EAAe,EAAKL,uBA1Cf,EA+CdyN,QAAU,SAAAC,GACH,EAAKxN,YAAY,EAAKyN,QAAS,EAAKvN,uBAAuBsN,KAC9D,EAAKE,wBACH,EAAK9N,kBAAkB+N,MACvB,EAAKF,QACLD,IApDQ,EAyDdI,QAAU,SAAAjB,GACH,EAAK3M,YAAY,EAAK6N,QAAS,EAAK3N,uBAAuByM,KAC9D,EAAKe,wBACH,EAAK9N,kBAAkBkO,MACvB,EAAKD,QACLlB,IA9DQ,EAyHde,wBAA0B,SAACzM,EAAQ7G,EAAKqG,GACtCQ,EAAOC,KAAKT,GACZrG,EAAI,EAAK8F,uBAAuBO,IAAaA,GAzH7C,EAAKhJ,KlBW2B,uBkBRhC,EAAKmI,kBAAoB,CAAE+N,MAAO,GAAIG,MAAO,IAG7C,EAAKL,QAAU,GACf,EAAKI,QAAU,GAEf,EAAK/N,qBAAuB,uBAXhB,E,4DAmBErH,GACd,OAAOkB,KAAK8T,QAAQhV,K,iCA+CX4K,EAAK0K,GACdA,EAAIC,cAAe,EACnB3K,EAAIqH,eAAiB,KAAOqD,EAAIrD,cAC3BrH,EAAI4K,yBACP5K,EAAI4K,uBAAyB,IAE/B5K,EAAI4K,uBAAuB/M,KAAK6M,GAGhCA,EAAIvB,gBAAgBlJ,SAAQ,SAAA4K,GACrBA,EAAOC,eACV/R,QAAQmE,MAAM,wCACdnE,QAAQC,IAAI6R,OAIhBH,EAAIxB,gBAAgBjJ,SAAQ,SAAA8K,GACrBA,EAAQD,eACX/R,QAAQmE,MAAM,wCACdnE,QAAQC,IAAI+R,S,+CAKQ,IAAD,OACjBC,EAAgB,GAChBC,EAAgB,GACtB3U,KAAKiG,kBAAkB+N,MAAMrK,SAAQ,SAAAkK,GAC/BA,EAAKQ,eAEPK,EAAcnN,KAAKsM,UACZ,EAAKC,QAAQD,EAAK,EAAK1N,2BAGlCnG,KAAKiG,kBAAkBkO,MAAMxK,SAAQ,SAAAqJ,GAC/BA,EAAKwB,eAEPG,EAAcpN,KAAKyL,UACZ,EAAKkB,QAAQlB,EAAK,EAAK7M,2BAKlCuO,EAAc/K,SAAQ,SAAAiL,GACpB,IAAMC,EAAa,EAAK5O,kBAAkB+N,MAAM3K,QAAQuL,GACxD,EAAK3O,kBAAkB+N,MAAMc,OAAOD,EAAY,MAGlDF,EAAchL,SAAQ,SAAAoL,GACpB,IAAMF,EAAa,EAAK5O,kBAAkBkO,MAAM9K,QAAQ0L,GACxD,EAAK9O,kBAAkBkO,MAAMW,OAAOD,EAAY,U,GAtHX7O,ICKtBgP,G,kDACnB,aAAe,IAAD,8BACZ,gBAwCF3S,aAAe,SAAAC,GACb,EAAKA,sBAAwBA,EAEzB,EAAKqN,qBAAuBrN,EAAsB8J,eAAetO,KACnE,EAAK8R,oBAAqB,EAE1BnN,QAAQmE,MACN,0BACEtE,EAAsB8J,eAAetO,KACrC,aACA,EAAK6R,qBAnDC,EAyDdhN,QAAU,WACJ,EAAKiN,mBACP,EAAKC,mBAELpN,QAAQmE,MAAM,cACd,EAAKxE,aAAagK,eAAiB,OA9DzB,EAkEdyD,gBAAkB,WAEhB,IACMC,EADQ,EAAKxN,sBAAsB8J,eACjBjK,YAClB8S,EAAU,IAAItB,GACpBsB,EAAQ7O,sBAAsB,wBAE9B,EAAK8O,qBAAqBD,EAASnF,EAAUd,UAC7C,EAAKmG,iBAAiBF,EAASnF,EAAUV,OAEzC,EAAKgG,oBAAoBH,GACzB,EAAKI,wBAAwBJ,GAC7B,EAAKK,kCAAkCL,EAAQ9S,YAAYgS,OAC3D,EAAKoB,iBAAiBN,GACtB,EAAK7S,aAAagK,eAAiB6I,GAhFvB,EA2YdO,sBAAwB,SAAA9U,GACtB,IAAM+U,EAAQ,IAAI9C,GAClB8C,EAAMnG,kBAAoB5O,EAG1B,IAAMgV,EAAU,EAAKxH,cAAcyH,WACnC,IAAK,IAAM7W,KAAQ4W,EACjB,GAAIA,EAAQjM,eAAe3K,GAAO,CAEhC,IAAMyR,EAAWmF,EAAQ5W,GACzB,IAA+B,IAA3ByR,EAASlH,QAAQ,KAAa,CAIhC,IAFA,IAAMd,EAASgI,EAASlI,MAAM,KAC1BmI,EAAW9P,EACN+H,EAAI,EAAGA,EAAIF,EAAOC,OAAQC,IACjC+H,EAAWA,EAASjI,EAAOE,IAE7BgN,EAAM3W,GAAQ0R,OAGdiF,EAAM3W,GAAQ4B,EAAK6P,GAKzB,OAAOkF,GApaK,EAuadG,oBAAsB,SAAAlV,GACpB,IAAMmV,EAAQ,IAAI5C,GAClB4C,EAAMvG,kBAAoB5O,EAG1B,IAAMoV,EAAS,EAAK5H,cAAc6H,WAClC,IAAK,IAAMjX,KAAQgX,EACjB,GAAIA,EAAOrM,eAAe3K,IAAkB,aAATA,EAAqB,CAEtD,IAAMyR,EAAWuF,EAAOhX,GACxB,IAA+B,IAA3ByR,EAASlH,QAAQ,KAAa,CAIhC,IAFA,IAAMd,EAASgI,EAASlI,MAAM,KAC1BmI,EAAW9P,EACN+H,EAAI,EAAGA,EAAIF,EAAOC,OAAQC,IACjC+H,EAAWA,EAASjI,EAAOE,IAE7BoN,EAAM/W,GAAQ0R,OAGdqF,EAAM/W,GAAQ4B,EAAK6P,GAYzB,MALyB,cAArBsF,EAAMG,aACRH,EAAMG,WAAa,aAErBH,EAAM9E,cAAgBmC,GAAcG,eAAewC,EAAM9E,eAElD8E,GArcP,EAAK/X,KnBS8B,0BmBPnC,EAAK6R,mBnBG6B,yBmBFlC,EAAKC,oBAAqB,EAE1B,EAAKjH,gBAAkB,CACrB,8CAA+C,MAC/C,wCAAyC,OACzC,iCAAkC,MAClC,oCAAqC,MACrC,mCAAoC,KACpC,uCAAwC,MACxC,4BAA6B,MAC7B,gDAAiD,KACjD,6BAA8B,OAC9B,uCAAwC,QAG1C,EAAKuF,cAAgB,CACnByH,WAAY,CACV7C,WAAY,eACZmD,qBAAsB,yBACtBlF,cAAe,iBAEjBgF,WAAY,CACVC,WAAY,aACZC,qBAAsB,yBACtBlF,cAAe,gBACfmF,YAAa,cACbnE,SAAU,WACVC,SAAU,YAEZmE,UAAW,CAAC,IACZC,UAAW,CAAC,IACZC,eAAgB,IApCN,E,6DAmFGrK,GACf,IAAMsK,EAAMtW,KAAKkO,cAAcqI,UAC3BD,GAAOA,EAAI9N,OAAS,IACtBwD,EAAM7J,YAAYgS,MAAMxK,SAAQ,SAAAqJ,GAC9B,IAAIwD,GAAiB,EACjBC,MAAMC,QAAQ1D,EAAKgD,aACrBhD,EAAKgD,WAAWrM,SAAQ,SAAAP,IACE,IAApBkN,EAAIjN,QAAQD,KACdoN,GAAiB,OAKnBA,IAAoD,IAAlCF,EAAIjN,QAAQ2J,EAAKgD,eACrChD,EAAKjB,SAAS4E,kBAAkB3D,GAChCA,EAAKhB,SAASqC,cAAe,EAC7BrB,EAAKwB,cAAe,MAGxBxI,EAAM4K,4B,kCAIE5D,EAAM6D,GAChB,IAAK,IAAIpO,EAAI,EAAGA,EAAIoO,EAAYrO,OAAQC,IACtC,IAAK,IAAM3J,KAAQ+X,EAAYpO,GAC7B,GAAIoO,EAAYpO,GAAGgB,eAAe3K,IAGnB,aAATA,EAAqB,CACvB,IAAMgY,EAAK9D,EAAKgD,WACVe,EAAKF,EAAYpO,GAAG3J,GAE1B,GAAkB,kBAAPgY,GACT,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAGvO,OAAQwO,IAC7B,GAAIF,EAAGG,gBAAkBF,EAAGC,GAAGC,cAC7B,MAAO,CACLC,SAAUL,EAAYpO,GAAZ,eACV0O,QAASN,EAAYpO,GAAZ,oBAKf,IAAK,IAAI2O,EAAI,EAAGA,EAAIN,EAAGtO,OAAQ4O,IAC7B,IAAK,IAAIJ,EAAI,EAAGA,EAAID,EAAGvO,OAAQwO,IAC7B,GAAIF,EAAGM,GAAGH,gBAAkBF,EAAGC,GAAGC,cAChC,MAAO,CACLC,SAAUL,EAAYpO,GAAZ,eACV0O,QAASN,EAAYpO,GAAZ,eAU3B,OAAO,I,8CAGeuD,GAAQ,IAAD,OAC7B,GAAIhM,KAAKkO,cAAcmI,eAAgB,CACrC,IAAMC,EAAMtW,KAAKkO,cAAcmI,eACjBrK,EAAM/F,kBAAkBkO,MAEhCxK,SAAQ,SAAAqJ,GAEZ,IAAMqE,EAAS,EAAKC,YAAYtE,EAAMsD,GAGtC,IAAe,IAAXe,EAAkB,CACpBrE,EAAKwB,cAAe,EAGpB,IAAM2C,EAAU,IAAIxE,GACM,kBAAtB0E,EAAOF,QAAQ,GACjBA,EAAQpG,cAAgBiC,EAAKjC,cAE7BoG,EAAQpG,cAAgBsG,EAAOF,QAAQ,GAEzCA,EAAQrE,WAAa,CAACuE,EAAOF,QAAQ,IACrCA,EAAQ7H,kBAAoB0D,EAG5B,IAAMuE,EAAW,IAAItE,GACfuE,EAAWH,EAAOH,SAAS7E,OACjCkF,EAASxG,cAAgByG,EAAS,GAClCD,EAASvB,WAAawB,EAAS,GAC/BD,EAASxF,SAAWoF,EACpBI,EAASvF,SAAWgB,EAAKjB,SAEzB,IAAM0F,EAAW,IAAIxE,GACfyE,EAAWL,EAAOH,SAAS5P,OACjCmQ,EAAS1G,cAAgB2G,EAAS,GAClCD,EAASzB,WAAa0B,EAAS,GAC/BD,EAAS1F,SAAWoF,EACpBM,EAASzF,SAAWgB,EAAKhB,SAGzBmF,EAAQlB,qBACNjD,EAAKjB,SAASkE,qBACd,KACAjD,EAAKiD,qBACL,KACAjD,EAAKhB,SAASiE,qBACd,aAEFsB,EAAStB,qBACPjD,EAAKjB,SAASkE,qBACd,KACAjD,EAAKiD,qBACL,KACAjD,EAAKhB,SAASiE,qBACd,cAEFwB,EAASxB,qBACPjD,EAAKjB,SAASkE,qBACd,KACAjD,EAAKiD,qBACL,KACAjD,EAAKhB,SAASiE,qBACd,cAEFjK,EAAM4H,QAAQuD,GACdnL,EAAMiI,QAAQsD,GACdvL,EAAMiI,QAAQwD,OAIpBzL,EAAM4K,2B,0CAEY5K,GAClBhM,KAAK2X,YAAY3L,GACjBA,EAAM4K,yBAEN5W,KAAK4X,YAAY5L,GACjBA,EAAM4K,2B,wDAE0BzC,GAChCA,EAAMxK,SAAQ,SAAAqJ,GAEPA,EAAKhB,SAASc,aAEjBE,EAAKhB,SAASc,WAAa,oBAIE,YAA7BE,EAAKhB,SAASc,aACmC,IAAjDE,EAAKhB,SAASc,WAAWzJ,QAAQ,WAEjC2J,EAAKgD,WAAa,uBAGfhD,EAAKkD,aACJlD,EAAKgD,YAAyC,IAA3BhD,EAAKgD,WAAWxN,SAErCwK,EAAKgD,WAAa,2B,kCAKdhK,GAAQ,IAAD,OACXmI,EAAQnI,EAAM/F,kBAAkBkO,MAChC0D,EAAY7X,KAAKkO,cAAckI,UAE/B0B,EAAe,GACrB3D,EAAMxK,SAAQ,SAAAqJ,GACe,EAAK+E,sBAAsB/E,EAAM6E,IAE1DC,EAAavQ,KAAKyL,MAGtB,IAAIgF,EAAgB,EACpBF,EAAanO,SAAQ,SAAAqJ,GAEnB,IAAMiF,EAAcjF,EAAKhB,SACzBiG,EAAY5D,cAAe,EAC3B,IAAM6D,EAAU,IAAIvF,GACpB,IAAK,IAAM7T,KAAQmZ,EACbA,EAAYxO,eAAe3K,IAChB,oBAATA,GAAuC,oBAATA,IAChCoZ,EAAQpZ,GAAQmZ,EAAYnZ,IAKlCoZ,EAAQjC,qBACNiC,EAAQjC,qBAAuB,UAAY+B,EAC7CE,EAAQ7D,cAAe,EACvBrI,EAAM4H,QAAQsE,GACdlF,EAAKhB,SAAWkG,EAChBF,S,kCAIQhM,GAAQ,IAAD,OAGXmI,EAAQnI,EAAM/F,kBAAkBkO,MAChCgE,EAAYnY,KAAKkO,cAAciI,UAE/BiC,EAAe,GACrBjE,EAAMxK,SAAQ,SAAAqJ,GACS,EAAKqF,cAAcrF,EAAMmF,KAE5CnF,EAAKwB,cAAe,EACpB4D,EAAa7Q,KAAKyL,OAGtBoF,EAAazO,SAAQ,SAAAqJ,GACnB,IAAMzK,EAASyK,EAAKiD,qBAAqB5N,MAAM,MACzCiQ,EAAUtM,EAAMuM,gBAAgBhQ,EAAO,IACvCiQ,EAAUxM,EAAMuM,gBAAgBhQ,EAAO,IAE7CyD,EAAMyM,WAAWH,EAASE,Q,oCAIhBxF,EAAM6D,GAClB,IAAI6B,EAAW,EACXC,EAAgB,EAChBC,GAAU,EACVC,GAAS,EAoBb,OAnBAhC,EAAYlN,SAAQ,SAAAmP,GAClB,IAAK,IAAMha,KAAQga,EACjB,GAAIA,EAAKrP,eAAe3K,GAAO,CAE7B+Z,GAAS,EACT,IAAME,EAAW/F,EAAKlU,GAChBka,EAAeF,EAAKha,GAC1B4Z,IACIK,IAAaC,GACfL,IAKN,GAAIE,GAAUF,IAAkBD,EAE9B,OADAE,GAAU,KAIPA,I,4CAEa5F,EAAM6D,GAC1B,IAAI6B,EAAW,EACXC,EAAgB,EAChBC,GAAU,EACVC,GAAS,EAkCb,OAjCAhC,EAAYlN,SAAQ,SAAAmP,GAClB,IAAK,IAAMha,KAAQga,EACjB,GAAIA,EAAKrP,eAAe3K,GAGtB,GADA+Z,GAAS,EACI,gBAAT/Z,GAAyC,SAAfga,EAAKha,GAEjC4Z,IACAC,SAGA,GAAa,SAAT7Z,EAAiB,CAKnB,IADA,IAAMma,EAAmBH,EAAKha,GACrB2J,EAAI,EAAGA,EAAIwQ,EAAiBzQ,OAAQC,IAAK,CAChD,IAAMW,EAAI6P,EAAiBxQ,GACvBuK,EAAKhB,SAASkH,aAAa9P,IAC7BuP,IAGJD,IAMR,GAAIG,GAAUF,IAAkBD,EAE9B,OADAE,GAAU,KAIPA,I,2CAGY5M,EAAOkF,GAAY,IAAD,OAGrCA,EAAUvH,SAAQ,SAAAjJ,GAChB,IAAM+U,EAAQ,EAAKD,sBAAsB9U,GAErCyY,EAAUjG,GAAcG,eAAeoC,EAAM1E,eACjC,OAAZoI,QAAgCxZ,IAAZwZ,IAClBvR,GAASlH,EAAKoQ,wBAChBqI,EAAUjG,GAAckG,UACtB,EAAKzQ,gBACLjI,EAAKoQ,wBAGPrO,QAAQmE,MACN,sCAAwClG,EAAKoQ,yBAInD2E,EAAM1E,cAAgBoI,EACtBnN,EAAM4H,QAAQ6B,Q,uCAqEDzJ,EAAOkF,GAAY,IAAD,OAGjCA,EAAUvH,SAAQ,SAAAjJ,GAGhB,IAAMsS,EAAO,EAAK4C,oBAAoBlV,GAEhC2Y,EAAWrN,EAAMuM,gBACrB7X,EAAKqR,SAASjB,wBAEVwI,EAAWtN,EAAMuM,gBACrB7X,EAAKsR,SAASlB,wBAEZuI,IACFrG,EAAKjB,SAAWsH,EAChBA,EAASE,gBAAgBvG,IAGvBsG,IACFtG,EAAKhB,SAAWsH,EAChBA,EAASE,gBAAgBxG,IAG3BhH,EAAMiI,QAAQjB,U,GAnewB9Q,I,+ECPvBuX,G,4MAGnBtb,mBAAqB,SAACC,EAAWC,K,oGAsB/B,OAAO,0C,GAzBwCyC,aCY7C2Y,G,kDACJ,WAAYpf,GAAQ,IAAD,8BACjB,cAAMA,IAyBR8D,mBAAqB,SAACC,EAAWC,GAG/B,EAAKhE,MAAMqf,eAAe,EAAKpb,QA7Bd,EAiDnBqb,kBAAoB,SAAA7a,GAClB,EAAKP,UAAS,SAAAF,GAAS,sBACpBS,GAAQT,EAAUS,QAnDJ,EAuDnB8a,8BAAgC,WAC9B,OACE,yBAAK3e,MAAO,CAAEiB,QAAS,MAAOX,WAAY,SACxC,kBAACse,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLmc,QAAS,EAAK3b,MAAM4b,gBACpBC,SAAU,WACR,EAAKR,kBAAkB,sBAExB,IAPL,eAWF,kBAACE,GAAA,EAAD,CAAWC,OAAK,EAAC7e,MAAO,CAAEmf,YAAa,SACrC,kBAACL,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLuc,UAAU,EACVJ,QAAS,EAAK3b,MAAM4b,gBACpBC,SAAU,WACR,EAAKR,kBAAkB,sBAN7B,+BAYF,kBAACE,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLmc,QAAS,EAAK3b,MAAMgc,gBACpBH,SAAU,WACR,EAAKR,kBAAkB,sBAExB,IAPL,iBApFW,EAkGnBY,6BAA+B,WAC7B,OACE,yBAAKtf,MAAO,CAAEiB,QAAS,MAAOX,WAAY,SACxC,kBAACse,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLmc,QAAS,EAAK3b,MAAMkc,eACpBL,SAAU,WACR,EAAKR,kBAAkB,qBAExB,IAPL,cAWF,kBAACE,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLmc,QAAS,EAAK3b,MAAMmc,gBACpBN,SAAU,WACR,EAAKR,kBAAkB,sBAL7B,eAWF,kBAACE,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLmc,QAAS,EAAK3b,MAAMoc,sBACpBP,SAAU,WACR,EAAKR,kBAAkB,4BAExB,IAPL,4BAWF,kBAACE,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLmc,QAAS,EAAK3b,MAAMqc,sBACpBR,SAAU,WACR,EAAKR,kBAAkB,4BAExB,IAPL,8BA1IW,EAyJnBiB,6BAA+B,WAC7B,OACE,yBAAK3f,MAAO,CAAEiB,QAAS,MAAOX,WAAY,SACxC,kBAACse,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLmc,QAAS,EAAK3b,MAAMuc,eACpBV,SAAU,WACR,EAAKR,kBAAkB,qBAExB,IAPL,cAWF,kBAACE,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAOD,OAAK,GACV,kBAACE,GAAA,EAAD,CACElc,KAAK,WACLmc,QAAS,EAAK3b,MAAMwc,gBACpBX,SAAU,WACR,EAAKR,kBAAkB,sBAL7B,iBAzKW,EAwLnBoB,sCAAwC,WACtC,IAAMC,EAAQ,EAAKC,iBAAiBxa,KAAI,SAACC,EAAMC,GAC7C,OACE,kBAACua,GAAA,EAAD,CACE1f,IAAK,uBAAyBmF,EAC9BjE,QAAS,WACP,EAAK6B,SAAS,CAAE4c,eAAgBza,MAGjCA,MAKP,OACE,kBAAC0a,GAAA,EAAD,CACEjgB,MAAM,WACNM,KAAK,KAELR,MAAO,CACLM,WAAY,OACZM,SAAU,IACVC,QAAS,OACTE,OAAQ,cACRgG,WAAY,QAEdN,OAAQ,EAAKpD,MAAM+c,oBACnBzZ,OAAQ,WACN,EAAKrD,SAAS,CACZ8c,qBAAsB,EAAK/c,MAAM+c,wBAIrC,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLpgB,MAAM,WACNF,MAAO,CACLiB,QAAS,MACTke,YAAa,MACbje,OAAQ,oBAGT,EAAKmC,MAAM6c,gBAEd,kBAACK,GAAA,EAAD,KAAeR,KAlOnB,EAAK1c,MAAQ,CACX4b,iBAAiB,EACjBI,iBAAiB,EACjBE,gBAAgB,EAChBC,iBAAiB,EACjBC,uBAAuB,EACvBC,uBAAuB,EACvBE,gBAAgB,EAChBC,iBAAiB,EAEjBW,aAAc,UAGdJ,qBAAqB,EACrBF,eAAgB,WAGlB,EAAKF,iBAAmB3b,EAAoBoc,0BAnB3B,E,gEAuBjB1b,KAAKzB,SAAL,gBAAmByB,KAAK3F,MAAMshB,iB,+BAkNtB,IAAD,OACP,OACE,oCACE,yBACE1gB,MAAO,CACLC,MAAO,OACPY,QAAS,OACTP,WAAY,OACZ6e,YAAa,SAGf,yBAAKnf,MAAO,CAAEkB,OAAQ,iBAAkBjB,MAAO,QAC7C,qDACC8E,KAAK4Z,iCAER,yBAAK3e,MAAO,CAAEkB,OAAQ,iBAAkBjB,MAAO,QAC7C,oDACC8E,KAAKua,gCAER,yBAAKtf,MAAO,CAAEkB,OAAQ,iBAAkBjB,MAAO,QAC7C,oDACC8E,KAAK4a,iCAIV,6BAEA,yBAAK3f,MAAO,CAAEa,QAAS,SACrB,yBAAKb,MAAO,CAAEC,MAAO,OAAQK,WAAY,SACvC,6DACA,yBAAKN,MAAO,IACV,6DACgC,MAAO,IACrC,yDAEF,yBAAKA,MAAO,CAAEa,QAAS,SAAvB,0BAEE,kBAACke,GAAA,EAAD,CACElc,KAAM,QACN7C,MAAO,CACLC,MAAO,OACPK,WAAY,MACZW,QAAS,MACTF,OAAQ,QAEViM,MAAOjI,KAAK1B,MAAMmd,aAClBtB,SAAU,SAAA/Q,GACR,EAAK7K,SAAS,CAAEkd,aAAcrS,EAAE9B,OAAOW,cAMjD,yBAAKhN,MAAO,CAAEC,MAAO,OAAQK,WAAY,SACvC,kDACA,yBAAKN,MAAO,CAAEa,QAAS,SACrB,yDACCkE,KAAK+a,2CAIZ,6BACA,yBAAK9f,MAAO,CAAEa,QAAS,SACpBkE,KAAK3F,MAAMuhB,cACV,0DAC6B,IACI,iBAA9B5b,KAAK1B,MAAM6c,eACV,0CAEA,GAEF,kBAAC,GAAD,CACES,cAAe5b,KAAK3F,MAAMuhB,cAC1BC,SAAwC,iBAA9B7b,KAAK1B,MAAM6c,kBAIzB,2G,GAvTwBra,aAwVrBC,gBAdS,SAAAzC,GACtB,MAAO,CACL0C,MAAO1C,EAAM0C,UAIU,SAAAnD,GAEzB,MAAO,CACLI,mCAAoC,SAAAF,GAAO,OACzCF,EAASI,EAAmCF,QAInCgD,CAGb0Y,I,SCxWmBqC,G,kDACnB,aAAe,IAAD,8BACZ,gBAiDF3Z,UAAY,WACV,OAAO,EAAKmC,kBAAkBC,SAnDlB,EAsDdhC,QAtDc,sBAsDJ,sBAAAC,EAAA,sEACF,EAAKG,UADH,2CAtDI,EA0DdA,QA1Dc,sBA0DJ,sBAAAH,EAAA,6DACR,EAAK8B,kBAAoB,GADjB,SAE+B,EAAKyX,qBAC1C,EAAKC,OAHC,OAER,EAAK1X,kBAAkBC,QAFf,kDA1DI,EAkEd0X,SAAW,SAAAD,GACT,EAAKA,MAAQA,GAnED,EAsEdE,SAAW,SAAAC,GACT,EAAKC,aAAeD,GAvER,EA0EdE,cAAgB,SAAArZ,GACd,EAAKsZ,WAAatZ,GA3EN,EA8Ed+Y,qBA9Ec,uCA8ES,WAAMQ,GAAN,mBAAA/Z,EAAA,6DACfga,EADe,gBAEjB1O,EAAM,GACJ2O,EAAe,IAAIjZ,SAAQ,SAASC,GACxC,IAAMiZ,EACJF,EAAKF,WACL,sBACAK,mBAAmBH,EAAKJ,cACxB,UACAO,mBAAmBJ,GACnBC,EAAKpU,OAEPoU,EAAK/Q,IAAIiR,GAAa7Y,MAAK,SAAA+Y,GACzB9O,EAAM8O,EACNnZ,UAdiB,SAiBfgZ,EAjBe,gCAkBdnZ,KAAKwC,MAAMgI,IAlBG,2CA9ET,sDAGZ,EAAK1I,oBAAsB,KAE3B,EAAKtH,KtBHyB,qBsBK9B,EAAKwe,WAAa,kCAClB,EAAKF,aAAe,qBAEpB,EAAKhU,OACH,oIACF,EAAKyU,aACH,mFACF,EAAKC,aACH,u+BAgCF,EAAKd,MAAQ,EAAKc,aA/CN,E,gDAsHV9Z,GACF,OAAO,IAAIQ,SAAQ,SAACuZ,EAAQrZ,GAC1B,IACMsZ,EAAM,IAAIC,eAEhBD,EAAIE,iBAHa,oBAKjBF,EAAIG,QAAUzZ,EACdsZ,EAAII,OAAS,kBAAML,EAAOC,EAAIK,eAC9BL,EAAIM,KAAK,MAAOta,GAEhBga,EAAIO,c,GAlIsCrb,ICK1Csb,G,kDACJ,WAAYnjB,GAAQ,IAAD,8BACjB,cAAMA,IA2CR8D,mBAAqB,SAACC,EAAWC,GAE/B,EAAKhE,MAAMojB,iBAAiB,EAAKnf,QA9ChB,EAuDnBof,kBAAoB,SAAC5e,EAAMwI,GACzB,IAAMqW,EAAWrW,EAAOA,OAAOW,MAC/B,EAAK1J,SAAL,eAAiBO,EAAO6e,KAzDP,EA4DnBC,aAAe,WACb,IAAMC,EAAiB,IAAIC,GAC3BD,EAAe3B,SAAS,EAAK5d,MAAMyf,UACnCF,EAAexB,cAAc,EAAK/d,MAAM0f,aACxCH,EAAe5B,SAAS,EAAK3d,MAAM0d,OAEnC6B,EAAe9B,qBAAqB,EAAKzd,MAAM0d,OAAOnY,MAAK,SAAAiK,GACzD,EAAKvP,SAAS,CAAE0f,YAAanQ,QAjE/B,EAAKxP,MAAQ,CACX0f,YAAa,kCACbD,SAAU,qBACV/B,MACE,0+BAgCFiC,iBAAate,GAtCE,E,kGAuET,IAAD,OACP,OACE,yBAAK1E,MAAO,CAAEiB,QAAS,OAAQJ,QAAS,SACtC,6BACE,yEACA,yBAAKb,MAAO,CAAEC,MAAO,QACnB,kBAAC2e,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAO9e,MAAO,CAAEa,QAAS,SACvB,4CACA,kBAACke,GAAA,EAAD,CACElc,KAAK,OACLqc,SAAU,SAAA/Q,GACR,EAAKsU,kBAAkB,cAAetU,IAExCnB,MAAOjI,KAAK1B,MAAM0f,gBAIxB,kBAACnE,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAO9e,MAAO,CAAEa,QAAS,SACvB,yCACA,kBAACke,GAAA,EAAD,CACElc,KAAK,OACLqc,SAAU,SAAA/Q,GACR,EAAKsU,kBAAkB,WAAYtU,IAErCnB,MAAOjI,KAAK1B,MAAMyf,aAKxB,6BACE,uCADF,IACkB,6BAChB,2BACG,IACD,qCAAc,KACX,IALP,gFAOY,6BAPZ,kGAUE,8BACEjgB,KAAK,OACLogB,KAAK,KACLC,KAAK,KACLljB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAOjI,KAAK1B,MAAM0d,MAClB7B,SAAU,SAAAiE,GACR,EAAK7f,SAAS,CAAEyd,MAAOoC,EAAE9W,OAAOW,cAO1C,yBAAKhN,MAAO,CAAEC,MAAO,QAClB,IACD,kBAAC2F,EAAA,EAAD,CACEnE,QAAS,WACP,EAAKkhB,iBAGN,IALH,cAQA,6BAVF,SAYE,8BACE9f,KAAK,OACLogB,KAAK,KACLC,KAAK,KACLljB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAO3E,KAAKC,UAAUvD,KAAK1B,MAAM2f,YAAa,KAAM,c,GAhJ3Bnd,aA2KtBC,gBAXS,SAAAzC,GACtB,MAAO,CACL0C,MAAO1C,EAAM0C,UAIU,SAAAnD,GAEzB,MAAO,KAGMkD,CAGbyc,ICnLmBa,G,kDACnB,aAAe,IAAD,8BACZ,gBAmBFlc,UAAY,WACV,OAAO,EAAKmC,kBAAkBC,SArBlB,EAwBdhC,QAxBc,sBAwBJ,sBAAAC,EAAA,sEACF,EAAKG,UADH,2CAxBI,EA4BdA,QA5Bc,sBA4BJ,sBAAAH,EAAA,6DACR,EAAK8B,kBAAoB,GADjB,SAE+B,EAAKyX,qBAC1C,EAAKC,OAHC,OAER,EAAK1X,kBAAkBC,QAFf,kDA5BI,EAoCd0X,SAAW,SAAAD,GACT,EAAKA,MAAQA,GArCD,EAwCdsC,eAAiB,SAAAtb,GACf,EAAKub,oBAAsBvb,GAzCf,EA4Cd+Y,qBA5Cc,uCA4CS,WAAMQ,GAAN,mBAAA/Z,EAAA,6DACfga,EADe,gBAEjB1O,EAAM,GACJ2O,EAAe,IAAIjZ,SAAQ,SAASC,GACxC,IAAMiZ,EACJF,EAAK+B,oBAAL/B,gBAGAG,mBAAmBJ,GACnBC,EAAKpU,OAEP3F,QAAQC,IAAIga,GAEZF,EAAK/Q,IAAIiR,GAAa7Y,MAAK,SAAA+Y,GACzB9O,EAAM8O,EACNnZ,UAfiB,SAkBfgZ,EAlBe,gCAmBdnZ,KAAKwC,MAAMgI,IAnBG,2CA5CT,sDAGZ,EAAK1I,oBAAsB,KAE3B,EAAKtH,KAAO,mBACZ,EAAKygB,oBAAsB,8BAE3B,EAAKnW,OAAS,eAEd,EAAKyU,aACH,2OAMF,EAAKb,MAAQ,EAAKa,aAjBN,E,gDAqFV7Z,GACF,OAAO,IAAIQ,SAAQ,SAACuZ,EAAQrZ,GAC1B,IACMsZ,EAAM,IAAIC,eAEhBD,EAAIE,iBAHa,oBAKjBF,EAAIG,QAAUzZ,EACdsZ,EAAII,OAAS,kBAAML,EAAOC,EAAIK,eAC9BL,EAAIM,KAAK,MAAOta,GAEhBga,EAAIO,c,GAjGkCrb,ICKtCsb,G,kDACJ,WAAYnjB,GAAQ,IAAD,8BACjB,cAAMA,IAgBR8D,mBAAqB,SAACC,EAAWC,GAE/B,EAAKhE,MAAMojB,iBAAiB,EAAKnf,QAnBhB,EA4BnBof,kBAAoB,SAAC5e,EAAMwI,GACzB,IAAMqW,EAAWrW,EAAOA,OAAOW,MAC/B,EAAK1J,SAAL,eAAiBO,EAAO6e,KA9BP,EAiCnBC,aAAe,WACb,IAAMY,EAAgB,IAAIH,GAC1BG,EAAcF,eAAe,EAAKhgB,MAAM0f,aACxCQ,EAAcvC,SAAS,EAAK3d,MAAM0d,OAElCwC,EAAczC,qBAAqB,EAAKzd,MAAM0d,OAAOnY,MAAK,SAAAiK,GACxD,EAAKvP,SAAS,CAAE0f,YAAanQ,QArC/B,EAAKxP,MAAQ,CACX0f,YAAa,8BACbhC,MACE,2OAMFiC,iBAAate,GAXE,E,kGA2CT,IAAD,OACP,OACE,yBAAK1E,MAAO,CAAEiB,QAAS,OAAQJ,QAAS,SACtC,6BACE,yEACA,yBAAKb,MAAO,CAAEC,MAAO,QACnB,kBAAC2e,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAO9e,MAAO,CAAEa,QAAS,SACvB,4CACA,kBAACke,GAAA,EAAD,CACElc,KAAK,OACLqc,SAAU,SAAA/Q,GACR,EAAKsU,kBAAkB,cAAetU,IAExCnB,MAAOjI,KAAK1B,MAAM0f,gBAKxB,6BACE,uCADF,IACkB,6BAChB,2BACG,IACD,qCAAc,KACX,IALP,4CAM2C,uCAN3C,6CAQE,8BACElgB,KAAK,OACLogB,KAAK,KACLC,KAAK,KACLljB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAOjI,KAAK1B,MAAM0d,MAClB7B,SAAU,SAAAiE,GACR,EAAK7f,SAAS,CAAEyd,MAAOoC,EAAE9W,OAAOW,cAO1C,yBAAKhN,MAAO,CAAEC,MAAO,QAClB,IACD,kBAAC2F,EAAA,EAAD,CACEnE,QAAS,WACP,EAAKkhB,iBAGN,IALH,cAQA,6BAVF,SAYE,8BACE9f,KAAK,OACLogB,KAAK,KACLC,KAAK,KACLljB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAO3E,KAAKC,UAAUvD,KAAK1B,MAAM2f,YAAa,KAAM,c,GAtG3Bnd,aAiItBC,gBAXS,SAAAzC,GACtB,MAAO,CACL0C,MAAO1C,EAAM0C,UAIU,SAAAnD,GAEzB,MAAO,KAGMkD,CAGbyc,ICtImBxI,G,kDACnB,aAAe,IAAD,8BACZ,gBACKlX,K1Bc8B,0B0BZnC,EAAK6R,mB1BQ6B,yB0BPlC,EAAKC,oBAAqB,EAE1B,EAAKjH,gBAAkB,CACrB,8CAA+C,MAC/C,wCAAyC,OACzC,iCAAkC,MAClC,oCAAqC,MACrC,mCAAoC,KACpC,uCAAwC,MACxC,4BAA6B,MAC7B,gDAAiD,KACjD,6BAA8B,OAC9B,uCAAwC,QAG1C,EAAKuF,cAAgB,CACnByH,WAAY,CACV7C,WAAY,eACZmD,qBAAsB,yBACtBlF,cAAe,iBAEjBgF,WAAY,CACVC,WAAY,aACZC,qBAAsB,yBACtBlF,cAAe,gBACfmF,YAAa,cACbnE,SAAU,WACVC,SAAU,YAEZmE,UAAW,CAAC,IACZC,UAAW,CAAC,IACZC,eAAgB,CACd,CACEoI,SAAU,CAAC,sBACXC,eAAgB,CACdrM,OAAQ,CAAC,SAAU,WACnB/K,OAAQ,CAAC,QAAS,YAEpBqX,cAAe,CAAC,gBAAiB,2BAEnC,CACEF,SAAU,CAAC,wBACXC,eAAgB,CACdrM,OAAQ,CAAC,SAAU,WACnB/K,OAAQ,CAAC,QAAS,YAEpBqX,cAAe,CAAC,gBAAiB,+BAnD3B,E,UAD4BC,ICEvBC,G,kDACnB,aAAe,IAAD,8BACZ,gBAwBFlc,QAzBc,sBAyBJ,8BAAAH,EAAA,sDACFoI,EAAI,IAAIjE,GACRkE,EAAgB,EAAKC,cAC3B,EAAKC,aAAaH,EAAGC,GAHb,2CAzBI,EAkIdC,YAAc,WACZrI,QAAQC,IACN,kDACA,EAAKJ,uBAGP,IAAMgL,EAAS,GAKTE,EAJQ,EAAKlL,sBAICmL,QAAQC,SA4D5B,OAnDAF,EAAM7D,SAAQ,SAAAmE,GAGZ,IAAMC,EAAa,GACnBA,EAAWzE,QAAUwE,EAAG,EACxBC,EAAWK,UAAY,CACrBtQ,KAAM,MACNmK,MAAO,8CAET8F,EAAWvE,OAASsE,EAAG,OAGvB,IAAMgR,EAAa,GACnBA,EAAWxV,QAAUwE,EAAG,EACxBgR,EAAW1Q,UAAY,CACrBtQ,KAAM,MACNmK,MAAO,mCAET6W,EAAWtV,OAASsE,EAAG,MAEvB,IAAMiR,EAAa,GACnBA,EAAWzV,QAAUwE,EAAG,MACxBiR,EAAW3Q,UAAY,CACrBtQ,KAAM,MACNmK,MAAO,8CAET8W,EAAWvV,OAASsE,EAAG,WAEvB,IAAMkR,EAAa,GACnBA,EAAW1V,QAAUwE,EAAG,EACxBkR,EAAW5Q,UAAY,CACrBtQ,KAAM,MACNmK,MAAO,gCAET+W,EAAWxV,OAASsE,EAAG,KAUvBR,EAAO/F,KAAKwG,GACZT,EAAO/F,KAAKuX,GACZxR,EAAO/F,KAAKwX,GACZzR,EAAO/F,KAAKyX,MAGd,EAAKhR,cAAgB,GAAGC,OAAO,EAAKD,cAAeV,GAC5CA,GAvMP,EAAKxP,K3BAyB,qB2BE9B,EAAKoQ,cAAgB,CAEnB,kDAAmD,YACnD,WAAY,YAEZ,kDAAmD,QACnD,qDAAsD,QACtD,gDAAiD,QAGjD,+CAAgD,aAChD,6CAA8C,aAC9C,mDAAoD,aAGpD,qBAAsB,sBACtB,uBAAwB,uBApBd,E,yDA+BDlC,EAAOC,GAAa,IAAD,OAC9BA,EAAWtC,SAAQ,SAACwE,EAAWxN,GAC7B,IAAM2I,EAAU6E,EAAU7E,QACpB8E,EAAYD,EAAUC,UACtB5E,EAAS2E,EAAU3E,OAInB6E,EAAkB,IAAItG,GACtBuG,EAAmB,IAAItE,GACvBuE,EAAiB,IAAIxG,GAG3BsG,EAAgBtB,mBAAmBzD,EAAQrB,OACvC,EAAKL,SAAS0B,EAAQrB,SACxBoG,EAAgBtF,aAAeO,EAAQrB,OAGzCqG,EAAiBvB,mBAAmBqB,EAAUnG,OAC1C,EAAKL,SAASwG,EAAUnG,SAC1BqG,EAAiBvF,aAAeqF,EAAUnG,OAG5CsG,EAAexB,mBAAmBvD,EAAOvB,OACrC,EAAKL,SAAS4B,EAAOvB,SACvBsG,EAAexF,aAAeS,EAAOvB,OAGvC,IAAIuG,GAAwB,EACxBC,GAAuB,EACvBC,GAAyB,EAE7B,GAA4C,cAAxC,EAAKR,cAAcE,EAAUnG,OAY/B,MAXyC,wBAArC,EAAKiG,cAAc1E,EAAOvB,OAC5BoG,EAAgBzE,gBAAgBJ,EAAOvB,QAEvCxF,QAAQC,IAAI,0CAGZgM,GAAyB,QAI3B1C,EAAMnF,YAAYwH,GAKpB,OAAQ,EAAKH,cAAcE,EAAUnG,QACnC,IAAK,QACHoG,EAAgB5B,SACdnD,EAAQrB,MACRmG,EAAUnG,MACVuB,EAAOvB,OAETwG,GAAuB,EACvB,MACF,IAAK,aACCjF,EAAO,YACT6E,EAAgBrG,cACdoG,EAAUnG,MACVuB,EAAOvB,MACPuB,EAAO,aAGT6E,EAAgBrG,cAAcoG,EAAUnG,MAAOuB,EAAOvB,OAGxDwG,GAAuB,EACvBC,GAAyB,EACzB,MACF,QAKEJ,EAAiB1B,UAAUtD,EAAQrB,OACnCqG,EAAiBzB,SAASrD,EAAOvB,OACjCqG,EAAiBxB,mBAAmBxD,EAAQrB,MAAOuB,EAAOvB,OAE1DwG,GAAuB,EACvBD,GAAwB,EAGvBA,GACHxC,EAAMnF,YAAYwH,GAEfK,GACH1C,EAAMxE,YAAY8G,GAEfG,GACHzC,EAAMnF,YAAY0H,MAGtBvO,KAAKoC,aAAagK,eAAiBJ,I,+BA+E5BnE,GAEP,MADiB,6TACDC,KAAKD,O,GA/M0B3F,ICJ9Bmc,G,kDACnB,aAAe,IAAD,8BACZ,gBAWFlc,UAAY,WACV,OAAO,EAAKmC,kBAAkBC,SAblB,EAgBdhC,QAhBc,sBAgBJ,sBAAAC,EAAA,sEAEF,EAAKG,UAFH,2CAhBI,EAqBdA,QArBc,sBAqBJ,sBAAAH,EAAA,6DAER,EAAK8B,kBAAoB,GAFjB,SAG+B,EAAKyX,qBAC1C,EAAKC,OAJC,OAGR,EAAK1X,kBAAkBC,QAHf,kDArBI,EA+Bd0a,qBAAuB,SAAAhiB,GACrB,EAAKiiB,kBAAoBjiB,GAhCb,EAmCdqhB,eAAiB,SAAAtb,GACf,EAAKgb,YAAchb,GApCP,EAuCd+Y,qBAvCc,uCAuCS,WAAMQ,GAAN,mBAAA/Z,EAAA,6DACrBC,QAAQC,IAAI,gCACN8Z,EAFe,gBAGjB1O,EAAM,GACJ2O,EAAe,IAAIjZ,SAAQ,SAASC,GACxC,IAAMiZ,EACJF,EAAKwB,YACLxB,EAAK2C,kBACL3C,EAAK0C,kBACL1C,EAAKpU,OAEP3F,QAAQC,IAAIga,GAEZF,EAAK/Q,IAAIiR,GAAa7Y,MAAK,SAAA+Y,GACzB9O,EAAM8O,EACNnZ,UAfiB,SAkBfgZ,EAlBe,gCAmBdnZ,KAAKwC,MAAMgI,IAnBG,2CAvCT,sDAGZ,EAAK1I,oBAAsB,KAE3B,EAAKtH,KAAO,mBACZ,EAAKkgB,YAAc,6BACnB,EAAKmB,kBAAoB,0BACzB,EAAKD,kBAAoB,QACzB,EAAK9W,OAAS,kDATF,E,gDAgFVpF,GACF,OAAO,IAAIQ,SAAQ,SAACuZ,EAAQrZ,GAC1B,IACMsZ,EAAM,IAAIC,eAEhBD,EAAIE,iBAHa,oBAKjBF,EAAIG,QAAUzZ,EACdsZ,EAAII,OAAS,kBAAML,EAAOC,EAAIK,eAC9BL,EAAIM,KAAK,MAAOta,GAEhBga,EAAIO,c,GA5FkCrb,ICItCsb,G,kDACJ,WAAYnjB,GAAQ,IAAD,8BACjB,cAAMA,IAaR8D,mBAAqB,SAACC,EAAWC,GAE/B,EAAKhE,MAAMojB,iBAAiB,EAAKnf,QAhBhB,EAyBnBof,kBAAoB,SAAC5e,EAAMwI,GACzB,IAAMqW,EAAWrW,EAAOA,OAAOW,MAC/B,EAAK1J,SAAL,eAAiBO,EAAO6e,KA3BP,EA8BnBC,aAAe,WACb,IAAMY,EAAgB,IAAIY,GAC1BZ,EAAcF,eAAe,EAAKhgB,MAAM0f,aACxCQ,EAAcS,qBAAqB,EAAK3gB,MAAM4gB,mBAE9CV,EAAczC,qBAAqB,EAAKzd,MAAM0d,OAAOnY,MAAK,SAAAiK,GACxD,EAAKvP,SAAS,CAAE0f,YAAanQ,QAlC/B,EAAKxP,MAAQ,CACX0f,YAAa,6BACbmB,kBAAmB,0BACnBD,kBAAmB,QACnB9W,OAAQ,kDAER6V,iBAAate,GARE,E,kGAwCT,IAAD,OACP,OACE,yBAAK1E,MAAO,CAAEiB,QAAS,OAAQJ,QAAS,SACtC,6BACE,yEACA,yBAAKb,MAAO,CAAEC,MAAO,QACnB,kBAAC2e,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAO9e,MAAO,CAAEa,QAAS,SACvB,4CACA,kBAACke,GAAA,EAAD,CACElc,KAAK,OACLqc,SAAU,SAAA/Q,GACR,EAAKsU,kBAAkB,cAAetU,IAExCnB,MAAOjI,KAAK1B,MAAM0f,gBAIxB,kBAACnE,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAO9e,MAAO,CAAEa,QAAS,SACvB,iDACA,kBAACke,GAAA,EAAD,CACElc,KAAK,OACLqc,SAAU,SAAA/Q,GACR,EAAKsU,kBAAkB,oBAAqBtU,IAE9CnB,MAAOjI,KAAK1B,MAAM4gB,wBAO5B,yBAAKjkB,MAAO,CAAEC,MAAO,QAClB,IACD,kBAAC2F,EAAA,EAAD,CACEnE,QAAS,WACP,EAAKkhB,iBAGN,IALH,cAQA,6BAVF,SAYE,8BACE9f,KAAK,OACLogB,KAAK,KACLC,KAAK,KACLljB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAO3E,KAAKC,UAAUvD,KAAK1B,MAAM2f,YAAa,KAAM,c,GA3F3Bnd,aAsHtBC,gBAXS,SAAAzC,GACtB,MAAO,CACL0C,MAAO1C,EAAM0C,UAIU,SAAAnD,GAEzB,MAAO,KAGMkD,CAGbyc,IC1HmB6B,G,kDACnB,aAAe,IAAD,8BACZ,gBAwBF1c,QAzBc,sBAyBJ,8BAAAH,EAAA,sDACFoI,EAAI,IAAIjE,GACRkE,EAAgB,EAAKC,cAC3B,EAAKC,aAAaH,EAAGC,GAHb,2CAzBI,EA8EdC,YAAc,WACZ,OAAO,EAAKxI,uBA7EZ,EAAKxE,KAAO,aAEZ,EAAKoQ,cAAgB,CAEnB,kDAAmD,YACnD,WAAY,YAEZ,kDAAmD,QACnD,qDAAsD,QACtD,gDAAiD,QAGjD,+CAAgD,aAChD,6CAA8C,aAC9C,mDAAoD,aAGpD,qBAAsB,sBACtB,uBAAwB,uBApBd,E,yDA+BDlC,EAAOC,GAClBA,EAAWtC,SAAQ,SAAAwE,GAEjB,IAAME,EAAkB,IAAItG,GAC5BsG,EAAgBtB,mBAAmBoB,EAAU7E,QAAQrM,IACrDoR,EAAgBzE,gBAAgB,YAChCyE,EAAgBrG,cACd,6CACAmG,EAAU7E,QAAQgD,OAGpB,IAAMiC,EAAiB,IAAIxG,GAC3BwG,EAAexB,mBAAmBoB,EAAU3E,OAAOvM,IACnB,YAA5BkR,EAAU3E,OAAO8V,OACnB/Q,EAAe3E,gBAAgB,WAE/B2E,EAAe3E,gBAAgB,YAEjC2E,EAAevG,cACb,6CACAmG,EAAU3E,OAAO8C,OAGnB,IAAMgC,EAAmB,IAAItE,GAC7BsE,EAAiBvB,mBAAmBoB,EAAUC,UAAUnR,IACxDqR,EAAiB1E,gBAAgB,YACjC0E,EAAiBtG,cACf,6CACAmG,EAAUC,UAAU9B,OAEtBgC,EAAiB1B,UAAUuB,EAAU3E,OAAOvM,IAC5CqR,EAAiBzB,SAASsB,EAAU3E,OAAOvM,IAC3CqR,EAAiBxB,mBACfqB,EAAU7E,QAAQrM,GAClBkR,EAAU3E,OAAOvM,IAGnB+O,EAAMnF,YAAYwH,GAClBrC,EAAMxE,YAAY8G,GAClBtC,EAAMnF,YAAY0H,MAGpBvO,KAAKoC,aAAagK,eAAiBJ,M,GA1EC9J,ICDnB8S,G,kDACnB,aAAe,IAAD,8BACZ,gBACKlX,K/Bc8B,0B+BZnC,EAAK6R,mB/BQ6B,yB+BPlC,EAAKC,oBAAqB,EAE1B,EAAKjH,gBAAkB,CACrB,8CAA+C,MAC/C,wCAAyC,OACzC,iCAAkC,MAClC,oCAAqC,MACrC,mCAAoC,KACpC,uCAAwC,MACxC,4BAA6B,MAC7B,gDAAiD,KACjD,6BAA8B,OAC9B,uCAAwC,QAG1C,EAAKuF,cAAgB,CACnByH,WAAY,CACV7C,WAAY,eACZmD,qBAAsB,yBACtBlF,cAAe,iBAEjBgF,WAAY,CACVC,WAAY,aACZC,qBAAsB,yBACtBlF,cAAe,gBACfmF,YAAa,cACbnE,SAAU,WACVC,SAAU,YAEZmE,UAAW,CAAC,IACZC,UAAW,CAAC,IACZG,UAAW,CAAC,wBACZF,eAAgB,IArCN,E,UAD4BuI,ICAvB5J,G,kDACnB,aAAe,IAAD,8BACZ,gBACKlX,KhCc8B,0BgCZnC,EAAK6R,mBhCQ6B,yBgCPlC,EAAKC,oBAAqB,EAE1B,EAAKjH,gBAAkB,CACrB,8CAA+C,MAC/C,wCAAyC,OACzC,iCAAkC,MAClC,oCAAqC,MACrC,mCAAoC,KACpC,uCAAwC,MACxC,4BAA6B,MAC7B,gDAAiD,KACjD,6BAA8B,OAC9B,uCAAwC,QAG1C,EAAKuF,cAAgB,CACnByH,WAAY,CACV7C,WAAY,eACZmD,qBAAsB,yBACtBlF,cAAe,iBAEjBgF,WAAY,CACVC,WAAY,aACZC,qBAAsB,yBACtBlF,cAAe,gBACfmF,YAAa,cACbnE,SAAU,WACVC,SAAU,YAEZmE,UAAW,CACT,CACEH,WAAY,YACZjF,cAAe,wBAGnBqF,UAAW,CACT,CACES,YAAa,OACb/Y,KAAM,CAAC,kBAIXuY,eAAgB,IA/CN,E,UAD4BuI,ICyBtCW,G,kDACJ,WAAYllB,GAAQ,IAAD,8BACjB,cAAMA,IA8ER8D,mBAAqB,SAACC,EAAWC,GAE7BD,EAAU4C,MAAMhD,qBAAuB,EAAK3D,MAAM2G,MAAMhD,qBAExD,EAAK3D,MAAMmlB,4BAA2B,GACtC,EAAKjhB,SAAS,CACZkhB,2BAA2B,EAC3BC,2BAAuB/f,EACvBggB,0BAA0B,EAC1BC,qBAAiBjgB,KAKnBvB,EAAU4C,MAAM7B,yBAChB,EAAK9E,MAAM2G,MAAM7B,yBAEjB,EAAK9E,MAAMmlB,4BAA2B,GACtC,EAAKjhB,SAAS,CACZshB,wBAAwB,EACxBjE,mBAAejc,MAnGF,EAwGnBmgB,mCAAqC,SAAAxhB,GACnC,EAAKyhB,+BAAiCzhB,GAzGrB,EA4GnBob,eAAiB,SAAApb,GACf,EAAK0hB,WAAa1hB,EACd,EAAKjE,MAAM2G,MAAMwe,4BACnB,EAAKnlB,MAAMmlB,4BAA2B,IA/GvB,EAsHnBS,wBAA0B,SAAAC,GACxB,EAAK3hB,SAAS,CACZ4hB,WAAW,EACXC,eAAgB,mBAChBC,cAAe,eA1HA,EA8HnBC,sBAAwB,SAAAJ,GAetB,GAdmB,iBAAfA,GAEE,EAAK5hB,MAAMshB,kBACb,EAAKW,oBAAoBle,aAAa,EAAK/D,MAAMshB,iBAEjD,EAAKW,oBAAoBhe,UAAUsB,MAAK,WACtC,IAAM+X,EAAgB,EAAK2E,oBAAoBpe,YAC/C,EAAK5D,SAAS,CACZshB,wBAAwB,EACxBjE,cAAeA,QAKJ,SAAfsE,GAEE,EAAK5hB,MAAMshB,gBAAiB,CAC9B,IAAMY,EAAqB,IAAIC,GAC/BD,EAAmBne,aAAa,EAAK/D,MAAMshB,iBAC3CY,EAAmBje,UAAUsB,MAAK,WAChC,IAAM+X,EAAgB4E,EAAmBre,YACzC,EAAK5D,SAAS,CACZshB,wBAAwB,EACxBjE,cAAeA,OAMvB,GAAmB,QAAfsE,GAEE,EAAK5hB,MAAMshB,gBAAiB,CAC9B,IAAMc,EAAoB,IAAIC,GAC9BD,EAAkBre,aAAa,EAAK/D,MAAMshB,iBAC1Cc,EAAkBne,UAAUsB,MAAK,WAC/B,IAAM+X,EAAgB8E,EAAkBve,YACxC,EAAK5D,SAAS,CACZshB,wBAAwB,EACxBjE,cAAeA,OAMvB,GAAmB,QAAfsE,GAEE,EAAK5hB,MAAMshB,gBAAiB,CAC9B,IAAMgB,EAAoB,IAAIC,GAC9BD,EAAkBve,aAAa,EAAK/D,MAAMshB,iBAC1CgB,EAAkBre,UAAUsB,MAAK,WAC/B,IAAM+X,EAAgBgF,EAAkBze,YACxC,EAAK5D,SAAS,CACZshB,wBAAwB,EACxBjE,cAAeA,SApLN,EA2LnBkF,yBAA2B,SAAAZ,GACzB,EAAK3hB,SAAS,CACZ4hB,WAAW,EACXC,eAAgB,mBAChBC,cAAe,gBA/LA,EAiNnBU,0BAA4B,SAAAb,GAC1B,EAAK3hB,SAAS,CACZ4hB,WAAW,EACXC,eAAgB,qBAChBC,cAAe,eArNA,EAwNnBW,wBAA0B,SAAAd,GACL,iBAAfA,GAEE,EAAK5hB,MAAMohB,wBACb,EAAKuB,sBAAsB5e,aACzB,EAAK/D,MAAMohB,uBAGb,EAAKuB,sBAAsB1e,UAAUsB,MAAK,WACxC,IAAM+b,EAAkB,EAAKqB,sBAAsB9e,YACnD,EAAK5D,SAAS,CACZohB,0BAA0B,EAC1BC,gBAAiBA,SApOR,EA0OnBsB,2BAA6B,SAAAhB,GAC3B,EAAK3hB,SAAS,CACZ4hB,WAAW,EACXC,eAAgB,qBAChBC,cAAe,gBA9OA,EAkPnBc,2BAA6B,SAAAjB,GAC3B,EAAK3hB,SAAS,CACZ4hB,WAAW,EACXC,eAAgB,sBAChBC,cAAe,eAtPA,EA0PnBe,4BAA8B,SAAAlB,GAC5B,EAAK3hB,SAAS,CACZ4hB,WAAW,EACXC,eAAgB,sBAChBC,cAAe,gBA9PA,EAkQnBgB,yBAA2B,SAAAnB,GACzB,GAAmB,kBAAfA,EAAgC,CAElC,IAAMoB,EAAa,IAAIzb,GAEvByb,EAAW/e,UAAUsB,MAAK,WAExB,IAAM0d,EAAa,IAAI5W,GACvB4W,EAAWlf,aAAaif,EAAWnf,aACnCof,EAAWhf,UACX,IAAMif,EAAgBD,EAAWpf,YACjC,EAAK5D,SAAS,CACZkhB,2BAA2B,EAC3BC,sBAAuB8B,OAK7B,GAAmB,YAAftB,EAA0B,CAE5B,IAAMuB,EAAgB,IAAI3D,GAE1B2D,EAAcvF,SAAS,EAAK6D,+BAA+BhC,UAC3D0D,EAAcpF,cACZ,EAAK0D,+BAA+B/B,aAEtCyD,EAAcxF,SAAS,EAAK8D,+BAA+B/D,OAE3DyF,EAAclf,UAAUsB,MAAK,WAC3B,IAAM6d,EAAqB,IAAIrU,GAC/BqU,EAAmBrf,aAAaof,EAActf,aAC9Cuf,EAAmBnf,UAAUsB,MAAK,WAChC,IAAM2d,EAAgBE,EAAmBvf,YACzC,EAAK5D,SAAS,CACZkhB,2BAA2B,EAC3BC,sBAAuB8B,UAM/B,GAAmB,aAAftB,EAA2B,CAE7B,IAAM1B,EAAgB,IAAIH,GAC1BG,EAAcjc,UAAUsB,MAAK,WAC3B,IAAM8d,EAAa,IAAI9C,GACvB8C,EAAWtf,aAAamc,EAAcrc,aACtCwf,EAAWpf,UAAUsB,MAAK,WACxB,IAAM2d,EAAgBG,EAAWxf,YACjC,EAAK5D,SAAS,CACZkhB,2BAA2B,EAC3BC,sBAAuB8B,UAM/B,GAAmB,SAAftB,EAAuB,CAEzB,IAAM1B,EAAgB,IAAIoD,GAC1BpD,EAAcjc,UAAUsB,MAAK,WAC3B,IAAMge,EAAS,IAAIxC,GACnBwC,EAAOxf,aAAamc,EAAcrc,aAClC0f,EAAOtf,UAAUsB,MAAK,WACpB,IAAM2d,EAAgBK,EAAO1f,YAC7B,EAAK5D,SAAS,CACZkhB,2BAA2B,EAC3BC,sBAAuB8B,YArUd,EA4UnBM,uBAAyB,WAMvB,EAAKznB,MAAMmlB,4BAA2B,GAClC,EAAKQ,WAAWvW,eAAe,oBACjC,EAAKpP,MAAM4D,mCAAmC,EAAK+hB,aApVpC,EAwVnB+B,yBAA2B,SAAA7B,GACzB,EAAK3hB,SAAS,CACZ4hB,WAAW,EACXC,eAAgB,mBAChBC,cAAe,eA5VA,EAgWnB2B,wBAA0B,WACxB,IAAM9B,EAAa,EAAK7lB,MAAM2G,MAAMhD,mBAcpC,OACE,kBAAC,EAAD,CACElD,MAAM,uBACN0B,SAAS,OACTtB,MAAO,IACPZ,aAAa,GAEZ4lB,EACD,wBAAIjlB,MAAO,CAAEW,OAAQ,SACrB,yBACEX,MAAO,CACLqF,UAAW,OACXxE,QAAS,WAGX,kBAAC+E,EAAA,EAAD,CACE5F,MAAO,CAAEiB,QAAS,MAAON,OAAQ,OACjCc,QAAS,WACP,EAAKykB,2BAA2BjB,KAHpC,aAQA,kBAACrf,EAAA,EAAD,CACE5F,MAAO,CACLiB,QAAS,MACTN,OAAQ,MACRR,gBAAiB,EAAKkD,MAAMmhB,0BACxB,UACA,WAEN/iB,QAAS,WACP,EAAK2kB,yBAAyBnB,KATlC,WAcA,kBAACrf,EAAA,EAAD,CACE5F,MAAO,CACLiB,QAAS,MACTN,OAAQ,MACRR,gBAAiB,EAAKkD,MAAMohB,sBACxB,UACA,WAENhjB,QAAS,WACP,EAAK0kB,4BAA4BlB,KATrC,kBApZW,EAwanB+B,uBAAyB,WACvB,IAAM/B,EAAa,EAAK7lB,MAAM2G,MAAMhC,yBACpC,OACE,kBAAC,EAAD,CACElE,MAAM,qBACN0B,SAAS,OACTtB,MAAO,IACPZ,aAAa,GAEZ4lB,EACD,wBAAIjlB,MAAO,CAAEW,OAAQ,SACrB,yBACEX,MAAO,CACLqF,UAAW,OACXxE,QAAS,WAGX,kBAAC+E,EAAA,EAAD,CACE5F,MAAO,CAAEiB,QAAS,MAAON,OAAQ,OACjCc,QAAS,WACP,EAAKqkB,0BAA0Bb,KAHnC,aAQA,kBAACrf,EAAA,EAAD,CACE5F,MAAO,CACLiB,QAAS,MACTN,OAAQ,MACRR,gBAAiB,EAAKkD,MAAMqhB,yBACxB,UACA,WAENjjB,QAAS,WACP,EAAKskB,wBAAwBd,KATjC,WAcA,kBAACrf,EAAA,EAAD,CACE5F,MAAO,CACLiB,QAAS,MACTN,OAAQ,MACRR,gBAAiB,EAAKkD,MAAMshB,gBACxB,UACA,WAENljB,QAAS,WACP,EAAKwkB,2BAA2BhB,KATpC,kBA/cW,EAmenBgC,qBAAuB,WACrB,IAAMhC,EAAa,EAAK7lB,MAAM2G,MAAM7B,uBACpC,OACE,kBAAC,EAAD,CACErE,MAAM,mBACN0B,SAAS,OACTtB,MAAO,IACPZ,aAAa,GAEZ4lB,EACD,wBAAIjlB,MAAO,CAAEW,OAAQ,SACrB,yBACEX,MAAO,CACLqF,UAAW,OACXxE,QAAS,WAGX,kBAAC+E,EAAA,EAAD,CACE5F,MAAO,CAAEiB,QAAS,MAAON,OAAQ,OACjCc,QAAS,WACP,EAAKujB,wBAAwBC,KAHjC,aAQA,kBAACrf,EAAA,EAAD,CACE5F,MAAO,CACLiB,QAAS,MACTN,OAAQ,MACRR,gBAAiB,EAAKkD,MAAMuhB,uBACxB,UACA,WAENnjB,QAAS,WACP,EAAK4jB,sBAAsBJ,KAT/B,WAcA,kBAACrf,EAAA,EAAD,CACE5F,MAAO,CACLiB,QAAS,MACTN,OAAQ,MACRR,gBAAiB,EAAKkD,MAAMsd,cAAgB,UAAY,WAE1Dlf,QAAS,WACP,EAAKokB,yBAAyBZ,KAPlC,kBA1gBW,EA2hBnBiC,sBAAwB,WACtB,IAAMjC,EAAa,uBACnB,OACE,kBAAC,EAAD,CACEplB,MAAM,mBACN0B,SAAS,OACTtB,MAAO,IACPZ,aAAa,GAEZ4lB,EACD,wBAAIjlB,MAAO,CAAEW,OAAQ,SACrB,yBACEX,MAAO,CACLqF,UAAW,OACXxE,QAAS,WAGX,kBAAC+E,EAAA,EAAD,CACE5F,MAAO,CAAEiB,QAAS,MAAON,OAAQ,OACjCc,QAAS,WACP,EAAKolB,uBAAuB5B,KAHhC,WAQA,kBAACrf,EAAA,EAAD,CACE5F,MAAO,CAAEiB,QAAS,MAAON,OAAQ,OACjCc,QAAS,WACP,EAAKqlB,yBAAyB7B,KAHlC,gBApjBW,EAikBnBte,OAAS,SAAA9D,GACP,EAAKS,UAAS,SAAAF,GAAS,sBACpBP,GAAQO,EAAUP,QAjkBrB,EAAKQ,MAAQ,CACX6hB,WAAW,EACXC,oBAAgBzgB,EAChB0gB,mBAAe1gB,EAEf8f,2BAA2B,EAC3BC,2BAAuB/f,EAEvBggB,0BAA0B,EAC1BC,qBAAiBjgB,EAEjBkgB,wBAAwB,EACxBjE,mBAAejc,GAGjB,EAAKshB,sBAAwB,IAAIvR,GACjC,EAAK6Q,oBAAsB,IAAI3B,GAE/B,EAAKoB,WAAa,CAChB9F,iBAAiB,EACjBI,iBAAiB,EACjBE,gBAAgB,EAChBC,iBAAiB,EACjBC,uBAAuB,EACvBC,uBAAuB,EACvBE,gBAAgB,EAChBC,iBAAiB,EAEjBW,aAAc,UAGdJ,qBAAqB,EACrBF,eAAgB,WAGlB,EAAK4E,+BAAiC,CACpC/B,YAAa,kCACbD,SAAU,qBACV/B,MACE,0+BAgCFiC,YAAa,IAzEE,E,kGAmMVziB,EAAKyM,GAEZ,GACU,oBAARzM,GACQ,oBAARA,GACQ,oBAARA,GACQ,oBAARA,GACQ,sBAARA,EAIF,OAAOyM,I,+BAyXC,IAAD,OACP,OACE,yBAAKhN,MAAO,CAAEC,MAAO,SACnB,yBAEED,MAAO,CACLgB,aAAc,OACdmE,YAAa,MACbhE,YAAa,mBACbiE,YAAa,QACbjD,wBAAyB,IACzBD,uBAAwB,IACxBnB,OAAQ,OACRd,MAAO,OAEPC,MAAO,QACPC,gBAAiB,YAGnB,yBAAKH,MAAO,CAAEC,MAAO,OAAQoF,UAAW,OAAQpE,QAAS,QACtD8D,KAAK3F,MAAMS,QAIhB,yBACEY,UAAU,mDACVT,MAAO,CACLgB,aAAc,OACdmE,YAAa,MACbhE,YAAa,mBACbiE,YAAa,QACb/E,qBAAsB,IACtBD,oBAAqB,IACrBF,MAAO,QACPC,gBAAiB,UACjBkC,UAAW,OACXd,SAAU,WACVR,OAAQ,MACRd,MAAO,SAGT,yBACED,MAAO,CACLC,MAAO,OACPc,OAAQ,QACRsE,UAAW,SACXxE,QAAS,OACTsmB,SAAU,SAGXpiB,KAAKgiB,0BACLhiB,KAAKiiB,yBACLjiB,KAAKkiB,uBACLliB,KAAKmiB,0BAIqB,wBAA9BniB,KAAK1B,MAAM8hB,gBACV,kBAAC,EAAD,CACEtlB,MACEkF,KAAK1B,MAAM8hB,eACX,KACApgB,KAAK3F,MAAM2G,MAAMhD,mBAEnB4D,OAAQ,kBAAM,EAAKA,OAAO,cAC1BD,WAAY3B,KAAK1B,MAAM6hB,WAEvB,6BAC2C,kBAAxCngB,KAAK3F,MAAM2G,MAAMhD,oBACa,cAA7BgC,KAAK1B,MAAM+hB,eACT,yBAAKplB,MAAO,CAAEiB,QAAS,QACrB,6EACA,4HAIA,wDAC2B,IACzB,qEAIiC,YAAxC8D,KAAK3F,MAAM2G,MAAMhD,oBACa,cAA7BgC,KAAK1B,MAAM+hB,eACT,kBAAC,GAAD,CACE5C,iBAAkBzd,KAAK8f,qCAIY,aAAxC9f,KAAK3F,MAAM2G,MAAMhD,oBACa,cAA7BgC,KAAK1B,MAAM+hB,eACT,kBAACgC,GAAD,CACE5E,iBAAkB,WAChBhb,QAAQC,IAAI,WAKqB,SAAxC1C,KAAK3F,MAAM2G,MAAMhD,oBACa,cAA7BgC,KAAK1B,MAAM+hB,eACT,kBAACiC,GAAD,CACE7E,iBAAkB,WAChBhb,QAAQC,IAAI,WAKU,eAA7B1C,KAAK1B,MAAM+hB,eACoB,wBAA9BrgB,KAAK1B,MAAM8hB,gBACT,yBAAKnlB,MAAO,CAAEiB,QAAS,QACrB,6BACG,IADH,wDAIC8D,KAAK1B,MAAMohB,sBACV,8BACExB,KAAK,KACLC,KAAK,KACLljB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChC6f,UAAU,EACV5T,MAAO3E,KAAKC,UACVvD,KAAK1B,MAAMohB,sBAAsBtT,eAC9BnG,kBACH,KACA,SAIJ,+BASiB,uBAA9BjG,KAAK1B,MAAM8hB,gBACV,kBAAC,EAAD,CACEtlB,MACEkF,KAAK1B,MAAM8hB,eACX,KACApgB,KAAK3F,MAAM2G,MAAMhC,yBAEnB4C,OAAQ,kBAAM,EAAKA,OAAO,cAC1BD,WAAY3B,KAAK1B,MAAM6hB,WAEvB,6BACiD,iBAA9CngB,KAAK3F,MAAM2G,MAAMhC,0BACa,cAA7BgB,KAAK1B,MAAM+hB,eACT,yBAAKplB,MAAO,CAAEiB,QAAS,QACrB,6EACA,8BACEgiB,KAAK,KACLC,KAAK,KACLtC,UAAU,EACV5gB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAO3E,KAAKC,UACVvD,KAAKihB,sBAAsB/S,cAC3B,KACA,UAMoB,eAA7BlO,KAAK1B,MAAM+hB,eACV,6BACE,8EACCrgB,KAAK1B,MAAMshB,gBACV,8BACE1B,KAAK,KACLC,KAAK,KACLtC,UAAU,EACV5gB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAO3E,KAAKC,UACVvD,KAAK1B,MAAMshB,gBAAgBxT,eACxBnG,kBACHjG,KAAKuiB,SACL,SAIJ,+BASmB,qBAA9BviB,KAAK1B,MAAM8hB,gBACV,kBAAC,EAAD,CACEtlB,MACEkF,KAAK1B,MAAM8hB,eACX,KACApgB,KAAK3F,MAAM2G,MAAMhC,yBAEnB4C,OAAQ,kBAAM,EAAKA,OAAO,cAC1BD,WAAY3B,KAAK1B,MAAM6hB,WAEvB,6BACiD,iBAA9CngB,KAAK3F,MAAM2G,MAAMhC,0BACa,cAA7BgB,KAAK1B,MAAM+hB,eACT,yBAAKplB,MAAO,CAAEiB,QAAS,QACrB,6EACA,8BACEgiB,KAAK,KACLC,KAAK,KACLtC,UAAU,EACV5gB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAO3E,KAAKC,UACVvD,KAAKugB,oBAAoBrS,cACzBlO,KAAKuiB,SACL,UAMoB,eAA7BviB,KAAK1B,MAAM+hB,eACV,6BACE,4EACCrgB,KAAK1B,MAAMsd,cACV,8BACEsC,KAAK,KACLC,KAAK,KACLtC,UAAU,EACV5gB,MAAO,CAAEC,MAAO,OAAQc,OAAQ,QAChCiM,MAAO3E,KAAKC,UACVvD,KAAK1B,MAAMsd,cAAcxP,eACtBnG,kBACHjG,KAAKuiB,SACL,SAIJ,+BAOmB,qBAA9BviB,KAAK1B,MAAM8hB,gBACV,kBAAC,EAAD,CACEtlB,MAAOkF,KAAK1B,MAAM8hB,eAAiB,oBACnCxe,OAAQ,kBAAM,EAAKA,OAAO,cAC1BD,WAAY3B,KAAK1B,MAAM6hB,WAEvB,6BACE,kBAAC,GAAD,CACEzG,eAAgB1Z,KAAK0Z,eACrBkC,cAAe5b,KAAK1B,MAAMsd,cAC1BD,aAAc3b,KAAKggB,oB,GAv0BTlf,aA02BXC,gBAjBS,SAAAzC,GACtB,MAAO,CACL0C,MAAO1C,EAAM0C,UAIU,SAAAnD,GAEzB,MAAO,CACL2hB,2BAA4B,SAAAzhB,GAAO,OACjCF,GvC72BoCqL,EuC62BAnL,EvC72BO,SAAAF,GAC/CA,EAAS,CACPC,KCnBwC,+BDoBxCC,QAAS,CAAEyhB,2BAA4BtW,QAHD,IAAAA,GuC82BtCjL,mCAAoC,SAAAF,GAClCF,EAASI,EAAmCF,QAKnCgD,CAA6Cwe,I,QCx4BvCiD,G,WACnB,aAAe,IAAD,gCAuCdC,gBAAkB,SAAAC,GAChB,IAAKA,EACH,OAAO,EAAKC,kBAGd,EAAKA,kBAAoBrf,KAAKwC,MAAMxC,KAAKC,UAAUmf,KA3CnD1iB,KAAK4iB,UAAOjjB,EACZK,KAAK+Q,mBAAgBpR,EACrBK,KAAK2iB,uBAAoBhjB,EACzBK,KAAK6iB,iBAAcljB,EAEnBK,KAAK8iB,WAAY,EAEjB9iB,KAAK+iB,eAAYpjB,E,oDAGXqjB,GACN,IAAK7Z,UAAUX,OACb,OAAOxI,KAAK8iB,UAEd9iB,KAAK8iB,UAAYE,I,yBAGhB/lB,GACD,IAAKkM,UAAUX,OACb,OAAOxI,KAAK4iB,KAEd5iB,KAAK4iB,KAAO3lB,I,gCAGJgmB,GACR,IAAK9Z,UAAUX,OACb,OAAOxI,KAAK6iB,YAEd7iB,KAAK6iB,YAAcI,I,kCAGTC,GACV,IAAK/Z,UAAUX,OACb,OAAOxI,KAAK+Q,cAEd/Q,KAAK+Q,cAAgBmS,I,+BAarBzgB,QAAQC,IAAI,kC,KC/CKygB,G,kDACnB,aAAe,IAAD,8BACZ,gBAYF3J,gBAAkB,SAAAxG,GAChB,EAAKoQ,cAAc7b,KAAKyL,IAdZ,EAgBduG,gBAAkB,SAAAvG,GAChB,EAAKqQ,cAAc9b,KAAKyL,IAjBZ,EAoBdsQ,YAAc,SAACC,EAAGC,GAChB,EAAKD,EAAIA,EACT,EAAKC,EAAIA,GAtBG,EAgCdC,wBAA0B,WACpB,EAAKV,WACP,EAAKA,UAAUW,KACb,YACA,aAAe,EAAKH,EAAI,IAAM,EAAKC,EAAI,KAI3C,EAAKJ,cAAcnV,OAAO,EAAKoV,eAAe1Z,SAAQ,SAAAoL,GACpDA,EAAE0O,8BAzCQ,EA4DdE,OAAS,SAAAZ,GACP,EAAKA,UAAYA,EAGjB,IAAMa,EAAoB,EAAKX,YAAYY,WACzC,EAAKd,UACL,EAAKN,kBAFmB,iBAK1B,EAAKqB,eAAiBF,EAAkBE,eACxC,EAAKC,cAAgBH,EAAkBG,cAQvC,EAAKN,2BA9EO,EAkFdO,+BAAiC,SAAA9a,GAC/B,EAAK+a,+BAAiC/a,GAnF1B,EAqFdgb,sBAAwB,SAACjnB,EAAIknB,EAAKC,GAChC,IAAMC,EAAMC,SAAS,EAAKf,GACpBgB,EAAMD,SAAS,EAAKd,GACpBhH,EAAI,gBACVA,EAAKuG,UACFyB,aACAC,MAAM,kBAAkB,WACvB,OAAO,SAASrb,GACd,IAAMsb,EAAKC,aAAanI,EAAKuG,UAAUW,KAAK,cAC5ClH,EAAK+G,EAAImB,EAAGE,UAAU,GACtBpI,EAAKgH,EAAIkB,EAAGE,UAAU,GACtBpI,EAAKqI,GAAKrI,EAAK+G,EACf/G,EAAKsI,GAAKtI,EAAKgH,EACfhH,EAAK4G,cAAczZ,SAAQ,SAAAqJ,GACzBA,EAAKyQ,6BAEPjH,EAAK6G,cAAc1Z,SAAQ,SAAAqJ,GACzBA,EAAKyQ,iCAIV9nB,SAAS,EAAKsoB,gCACdc,KAAK,OAAO,WACPX,GAAYnnB,IAAOknB,GACrBC,OAGHV,KAAK,YAAa,aAAeW,EAAM,IAAME,EAAM,MA9GtD,EAAKhB,EAAI,EACT,EAAKC,EAAI,EAET,EAAKJ,cAAgB,GACrB,EAAKC,cAAgB,GACrB,EAAK2B,gBAAkB,EACvB,EAAKC,qBAAuB,OAE5B,EAAKhB,+BAAiC,IAV1B,E,0DAyBA/a,GACZ,IAAKC,UAAUX,OACb,OAAOxI,KAAKglB,gBAEdhlB,KAAKglB,gBAAkB9b,I,4DAiBnBlJ,KAAK+iB,YAEP/iB,KAAK+iB,UAAUmC,UAAU,QAAQC,SACjCnlB,KAAK+iB,UAAUmC,UAAU,QAAQC,SACjCnlB,KAAK+iB,UAAUmC,UAAU,KAAKC,Y,+BAKhCnlB,KAAKolB,sCACLplB,KAAK2jB,OAAO3jB,KAAK+iB,e,GAzDsBP,ICDtB6C,G,kDACnB,aAAe,IAAD,8BACZ,gBAyBF/B,YAAc,SAACC,EAAGC,GAChB,EAAKD,EAAIA,EACT,EAAKC,EAAIA,GA5BG,EA8EdC,wBAA0B,WAGpB,EAAK6B,gBAEP,EAAKrC,YAAYsC,mBAAjB,gBAEE,EAAKD,cACL,EAAKE,WACL,EAAKC,WACL,EAAKC,eACiD,UAAtD,EAAKjD,kBAAkBkD,QAAQC,oBACL,SAAxB,EAAKF,gBAGT,EAAKG,oBAAsB,EAAK5C,YAAY6C,uBAAjB,gBAEzB,EAAKhC,eACL,EAAK0B,WACL,EAAKC,WACL,EAAKC,eACiD,UAAtD,EAAKjD,kBAAkBkD,QAAQC,sBAnGvB,EAkIdjC,OAAS,SAACZ,EAAWgD,EAAmBC,GACtC,EAAKjD,UAAYA,EACjB,EAAKgD,kBAAoBA,EACzB,EAAKC,eAAiBA,EAKtB,IAAIC,GAAY,EAChB,GAAI,EAAKnC,eAAgB,CACvBmC,GAAY,EACZ,IAAMC,EAAS,CACb,EAAKpC,eAAe/gB,OAAO,GAAGwgB,EAC9B,EAAKO,eAAe/gB,OAAO,GAAGygB,GAGhC,EAAKqC,oBAAsB,CAAEtC,EAAG2C,EAAO,GAAI1C,EAAG0C,EAAO,IAIvD,IAAMtC,EAAoB,EAAKX,YAAYkD,WACzC,EAAKpD,UACL,EAAKgD,kBACL,EAAKC,eACL,EAAKvD,kBAJmB,iBAO1B,EAAK6C,cAAgB1B,EAAkB0B,cACvC,EAAKxB,eAAiBF,EAAkBE,eACxC,EAAKC,cAAgBH,EAAkBG,cAEX,SAAxB,EAAK2B,gBAAqD,cAAxB,EAAKA,iBAEiB,SAAtD,EAAKjD,kBAAkBkD,QAAQC,mBACjC,EAAKQ,gBAAgB,cAGmC,UAAtD,EAAK3D,kBAAkBkD,QAAQC,oBACP,SAAxB,EAAKF,gBAEL,EAAKU,gBAAgB,cAKvBH,IACF,EAAKnC,eAAe/gB,OAAO,GAAGwgB,EAAI,EAAKsC,oBAAoBtC,EAC3D,EAAKO,eAAe/gB,OAAO,GAAG8hB,GAAK,EAAKgB,oBAAoBtC,EAC5D,EAAKO,eAAe/gB,OAAO,GAAGygB,EAAI,EAAKqC,oBAAoBrC,EAC3D,EAAKM,eAAe/gB,OAAO,GAAG+hB,GAAK,EAAKe,oBAAoBrC,GAG9D,EAAKC,2BApLL,EAAKF,EAAI,EACT,EAAKC,EAAI,EACT,EAAKgC,WAAa,KAClB,EAAKC,WAAa,KAClB,EAAKC,eAAiB,aACtB,EAAKG,oBAAsB,KAC3B,EAAKZ,qBAAuB,OARhB,E,4DAWEnnB,GAEdkC,KAAK0lB,eAAiB5nB,I,oCAIV+V,GACZ7T,KAAKylB,WAAa5R,EAClBA,EAAK2F,gBAAgBxZ,Q,oCAET6T,GACZ7T,KAAKwlB,WAAa3R,EAClBA,EAAK0F,gBAAgBvZ,Q,qCASrB,GAC0B,SAAxBA,KAAK0lB,gBACmB,cAAxB1lB,KAAK0lB,gBACmB,eAAxB1lB,KAAK0lB,eAIL,OADqB1lB,KAAK8jB,eAAe/gB,S,qCAO3C,MAA4B,SAAxB/C,KAAK0lB,eACA,CACL,CACErT,OAAQrS,KAAKwlB,WACble,OAAQtH,KAAK8jB,eAAe/gB,OAAO,GACnCjF,KAAM,SAKL,CACL,CACEuU,OAAQrS,KAAKwlB,WACble,OAAQtH,KAAK8jB,eAAe/gB,OAAO,GACnCjF,KAAM,UAER,CACEuU,OAAQrS,KAAK8jB,eAAe/gB,OAAO,GACnCuE,OAAQtH,KAAKylB,WACb3nB,KAAM,a,wGA8CV,IAAMjD,EAAMmF,KAAKijB,YAAYoD,UAAUC,6BACrCtmB,KAAKwlB,WACLxlB,KAAKylB,WACL,GAGFzlB,KAAK6lB,oBAAsB,CAAEtC,EAAG1oB,EAAI0rB,GAAI/C,EAAG3oB,EAAI2rB,M,8CAGzB3rB,GACtBmF,KAAK6lB,oBAAsBhrB,EACvBmF,KAAK8jB,iBACP9jB,KAAK8jB,eAAe/gB,OAAO,GAAGwgB,EAAIvjB,KAAK6lB,oBAAoBtC,EAC3DvjB,KAAK8jB,eAAe/gB,OAAO,GAAG8hB,GAAK7kB,KAAK6lB,oBAAoBtC,EAC5DvjB,KAAK8jB,eAAe/gB,OAAO,GAAGygB,EAAIxjB,KAAK6lB,oBAAoBrC,EAC3DxjB,KAAK8jB,eAAe/gB,OAAO,GAAG+hB,GAAK9kB,KAAK6lB,oBAAoBrC,O,GA9HvBhB,ICFtBiE,GACnB,aAAe,IAAD,gCA4FdC,sBAAwB,SAAA5oB,GACtB,OAAK,EAAK6oB,sBAAsBld,eAAe3L,GAIxC,EAAK6oB,sBAAsB7oB,IAHhC2E,QAAQC,IAAI,+BAAiC5E,GACtC,EAAK8oB,iBA/FF,KAoGdC,sBAAwB,SAAA/oB,GACtB,OAAK,EAAK6oB,sBAAsBld,eAAe3L,GAKxC,EAAK6oB,sBAAsB7oB,IAJhC2E,QAAQC,IAAI,+BAAiC5E,GAEtC,EAAKgpB,iBAvGd9mB,KAAK2mB,sBAAwB,GAE7B3mB,KAAK4mB,eAAiB,CACpB3rB,MAAO,CACL8rB,cAAe,SACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInBhoB,KAAK8mB,eAAiB,CACpB7rB,MAAO,CACL+X,KAAM,CACJiV,UAAW,SACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbC,UAAW,CACTxB,cAAe,UACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,UCzFPmD,G,sCAEnBC,eAAiB,SAAAC,GAEf,OAAOC,WAAWD,EAAMvF,KAAK,Q,KAG/ByF,cAAgB,SAAAF,GAEd,OAAOC,WAAWD,EAAMvF,KAAK,W,KAG/B0F,eAAiB,SAAAH,GAEf,OAAOC,WAAWD,EAAMvF,KAAK,aCZZ2F,G,WACnB,aAAe,IAAD,gCA4BdC,sCAAwC,SAAChf,EAAQC,EAAOyI,EAAMuW,GAC5D,IAAIC,EAAa,EACbD,IACFC,EAAaD,GAGf,IAAME,EAAczW,EAAK8Q,eACzB2F,EAAY1mB,OAAO,GAAG0gB,0BAEtB,IAAMiG,EAAS,CAAEnG,EAAGjZ,EAAOiZ,EAAGC,EAAGlZ,EAAOkZ,GAClCmG,EAAU,CAAEpG,EAAGkG,EAAY1mB,OAAO,GAAGwgB,EAAGC,EAAGiG,EAAY1mB,OAAO,GAAGygB,GACjEoG,EAAS,CAAErG,EAAGhZ,EAAMgZ,EAAGC,EAAGjZ,EAAMiZ,GAEtC,GAA4B,SAAxBxQ,EAAK0S,eAiBF,CACL,IAAImE,EAAU,EACVvf,EAAOwf,gBAAkB,IAC3BD,EAAUvf,EAAOwf,iBAEnB,IACEC,EAAoD,IAD3B,IAAMF,GAE/BG,EAAYC,KAAKC,IAAI,GAAIH,GAErBI,EAAKR,EAAQpG,EAAIjZ,EAAOiZ,EAC5B6G,EAAKT,EAAQnG,EAAIlZ,EAAOkZ,EACxB6G,EAAcJ,KAAKK,MAAMF,EAAID,GAC7BI,EAAa,EAAKC,iBAAiBH,GAC/BI,EAAaF,EAAaP,EAAY,EACtCU,EAAWH,EAAaP,EAAY,EAIpC3C,EACJ,EAAKsD,WAAW3B,eAAe1e,EAAOwZ,gBAAkB0F,EACpDtuB,EACJ,EAAKyvB,WAAWxB,cAAc7e,EAAOwZ,gBAAkB0F,EACnDxtB,EACJ,EAAK2uB,WAAWvB,eAAe9e,EAAOwZ,gBAAkB0F,EAEtDoB,EAAaX,KAAKC,IAAI,GAAMhvB,EAAO,GAAMc,GACzCd,IAAUc,IACZ4uB,EAAavD,GAGf,IAAMwD,EAAU,EAAKC,kBAAkBL,GACrCM,EAAQ,EAAKD,kBAAkBJ,GAC/BM,EAAKf,KAAKgB,IAAIJ,GAAWD,EACzBM,EAAKjB,KAAKkB,IAAIN,GAAWD,EACzBQ,EAAKnB,KAAKgB,IAAIF,GAASH,EACvBS,EAAKpB,KAAKkB,IAAIJ,GAASH,EAEzB,MAAO,CACL,CAACtgB,EAAOiZ,EAAIyH,EAAI1gB,EAAOkZ,EAAI0H,GAC3B,CAACvB,EAAQpG,EAAGoG,EAAQnG,GACpB,CAAClZ,EAAOiZ,EAAI6H,EAAI9gB,EAAOkZ,EAAI6H,IAxD7B,IAAIC,EAAkB,EAAKC,mCACzB7B,EACAC,GAyDJ,OAvDE,EAAK6B,yBACH9B,EACApf,EACAghB,EACA9B,GAGF8B,EAAkB,EAAKC,mCACrB3B,EACAD,GAEF,EAAK6B,yBAAyB5B,EAAQrf,EAAO+gB,EAAiB9B,GA4CzD,CACL,CAACE,EAAOnG,EAAGmG,EAAOlG,GAClB,CAACmG,EAAQpG,EAAGoG,EAAQnG,GACpB,CAACoG,EAAOrG,EAAGqG,EAAOpG,KAxGR,KAwHdiI,0BAA4B,SAACnhB,EAAQC,EAAOgf,GAE1C,IAAIC,EAAa,EACbD,IACFC,EAAaD,GAEf,IAAMG,EAAS,CAAEnG,EAAGjZ,EAAOiZ,EAAGC,EAAGlZ,EAAOkZ,GAClCoG,EAAS,CAAErG,EAAGhZ,EAAMgZ,EAAGC,EAAGjZ,EAAMiZ,GAClC8H,EAAkB,EAAKC,mCACzBjhB,EACAC,GAMF,OAJA,EAAKihB,yBAAyB9B,EAAQpf,EAAQghB,EAAiB9B,GAE/D8B,EAAkB,EAAKC,mCAAmChhB,EAAOD,GACjE,EAAKkhB,yBAAyB5B,EAAQrf,EAAO+gB,EAAiB9B,GACvD,CACL,CAACE,EAAOnG,EAAGmG,EAAOlG,GAClB,CAACoG,EAAOrG,EAAGqG,EAAOpG,KAzIpBxjB,KAAK2qB,WAAa,IAAI5B,G,+DAGLze,EAAQC,EAAOgf,GAGhC,MAAO,CAAEhD,GAFE,IAAOhc,EAAMgZ,EAAIjZ,EAAOiZ,GAAKgG,EAEvB/C,GADN,IAAOjc,EAAMiZ,EAAIlZ,EAAOkZ,GAAK+F,K,mDAIbjf,EAAQC,EAAOgf,GAC1C,IAAMmC,EAAe,GAAMpH,SAASha,EAAOwZ,eAAeJ,KAAK,UACzDiI,EAAc,GAAMrH,SAAS/Z,EAAMuZ,eAAeJ,KAAK,UAE7DjhB,QAAQC,IAAI,sBAAuBgpB,EAAcC,GAEjD,IAAMpF,EACJjc,EAAOiZ,EACPmI,EACA,IAAOnhB,EAAMgZ,EAAIoI,EAAcrhB,EAAOiZ,EAAImI,GAGtClF,EAAK,IAAOjc,EAAMiZ,EAAIlZ,EAAOkZ,GAAK+F,EAGxC,OAFA9mB,QAAQC,IAAI,uBAAyB6jB,EAAIC,GAElC,CAAED,GAAIA,EAAIC,GAAIA,K,wCAmFLoF,GAKhB,OAJAA,GAAgB,KACJ,IACVA,GAAgB,KAEV3B,KAAK4B,GAAKD,EAAS,M,uCAGZE,GACf,OAAOA,GAAU,IAAM7B,KAAK4B,M,yDAyBKxZ,EAAQ/K,GACzC,IAAMic,EAAIjc,EAAOic,EAAIlR,EAAOkR,EACtBC,EAAIlc,EAAOkc,EAAInR,EAAOmR,EAEtBuI,EAAM9B,KAAK+B,KAAKzI,EAAIA,EAAIC,EAAIA,GAClC,MAAO,CAAED,EAAGA,EAAIwI,EAAKvI,EAAGA,EAAIuI,K,+CAGLE,EAAUpY,EAAMyX,EAAiB9B,GACxD,IAAM0C,EAAMrY,EAAK4O,kBACjB,GAAgC,WAA5ByJ,EAAIjxB,MAAM8rB,cAA4B,CACxC,IAAMoF,EACJnsB,KAAK2qB,WAAW3B,eAAenV,EAAKiQ,gBAAkB0F,EAKxDyC,EAAS1I,EAAI1P,EAAK0P,EAAI4I,EAAmBb,EAAgB/H,EACzD0I,EAASzI,EAAI3P,EAAK2P,EAAI2I,EAAmBb,EAAgB9H,MAEpD,IACuB,SAA5B0I,EAAIjxB,MAAM8rB,eACkB,YAA5BmF,EAAIjxB,MAAM8rB,cACV,CACA,IAQIqF,EARElxB,EACJ8E,KAAK2qB,WAAWxB,cAActV,EAAKiQ,gBAAkB0F,EAEjDxtB,EACJgE,KAAK2qB,WAAWvB,eAAevV,EAAKiQ,gBAAkB0F,EAElD6C,EAAoB,GAAMnD,WAAWhuB,GACrCoxB,EAAoB,GAAMpD,WAAWltB,GAS3C,OANEowB,EADEnC,KAAKsC,IAAIjB,EAAgB/H,IAAM0G,KAAKsC,IAAIjB,EAAgB9H,GAClD,EAAMyG,KAAKsC,IAAIjB,EAAgB/H,GAE/B,EAAM0G,KAAKsC,IAAIjB,EAAgB9H,GAEzCyI,EAAS1I,EAAI1P,EAAK0P,EAAI6I,EAAQC,EAAoBf,EAAgB/H,EAClE0I,EAASzI,EAAI3P,EAAK2P,EAAI4I,EAAQE,EAAoBhB,EAAgB9H,EAC3DyI,EAIPA,EAAS1I,EAAI1P,EAAK0P,EAClB0I,EAASzI,EAAI3P,EAAK2P,O,KC3LHgJ,G,WACnB,WAAYrQ,GAAQ,IAAD,gCA+TnBsQ,qBAAuB9H,OAAO+H,OA/TX,KAgUnBC,oBAAsBhI,OAAO+H,OAAOE,YAAY,YAhU7B,KAiUnBC,mBAAqBlI,OAClB+H,OACAE,YAAY,YACZE,SAAS,GApUO,KAsUnBrF,gBAAkB,SAACsF,EAAOC,EAAMd,GAG9B,IAAoC,IAAhCA,EAAIvG,QAAQ8B,gBACd,OAAO,EAAKwF,UAAUF,EAAOC,EAAMd,EAAI5E,YA1UxB,KAgXnB4F,uBAAyB,SAACH,EAAO9D,EAAO3c,EAAO6gB,EAAQtZ,GACrD,IAAM8R,EAAUwH,EAAOxH,QAMvB,GALIA,EAAQiC,wBACVmF,EAAMK,OAAO,SAASJ,KAAK1gB,EAAM0gB,SAIS,IAAxCrH,EAAQ+C,4BAAsC,CAChD,IAAM2E,EAAe,EAAKC,iBACxBhhB,EAAM0gB,OACNG,EAAO7F,UAAUC,WACjB4F,EAAO7F,UAAUzqB,UAGnBosB,EAAMvF,KAAK,KAAM,IAAO2J,EAAe1H,EAAQmC,kBAE/CmB,EAAMvF,KAAK,QAAS2J,EAAe1H,EAAQmC,iBAK7C,GAAInC,EAAQgC,cAER,EAAK2F,iBACHhhB,EAAM0gB,OACNG,EAAO7F,UAAUC,WACjB4F,EAAO7F,UAAUzqB,UACfqsB,WAAWD,EAAMvF,KAAK,UAC1B,CAEA,IAAM6J,EAAc,EAAKC,SACvBlhB,EAAM0gB,OACNG,EAAO7F,UACP4B,WAAWD,EAAMvF,KAAK,WAGxBpX,EAAM0gB,KAAKO,GAIf,IACmC,IAAjC5H,EAAQ+B,sBACR7T,EAAK4Z,kBACL5Z,EAAK4Z,iBAAiB1a,kBACtBc,EAAK4Z,iBAAiB1a,iBAAiBvK,OAAS,EAChD,CAEA,IAAMklB,EAAc7Z,EAAK4Z,iBAAiB1a,iBAGpC/W,EAASktB,WAAWD,EAAMvF,KAAK,WAAkC,GAArBgK,EAAYllB,OAE9DygB,EAAMvF,KAAK,KAAK,KAChBuF,EAAMvF,KAAK,KAAM,GAAM1nB,GACvBitB,EAAMvF,KAAK,QALG,KAMduF,EAAMvF,KAAK,SAAU1nB,GAGrB,IAOMutB,GAAU,GAAMvtB,EAPA,EAAK2xB,kBACzBrhB,EAAM0gB,OACNG,EAAO7F,UAAUC,WACjB4F,EAAO7F,UAAUzqB,UAKnByP,EAAMoX,KAAK,KAAM6F,EAAS,MAG1B,IAAMmD,EAAOK,EAAMK,OAAO,QAEpB7J,EAAI0F,EAAMvF,KAAK,KACfF,EAAIyF,EAAMvF,KAAK,KACfkK,EAAI3E,EAAMvF,KAAK,SAEfmK,EAAmBnvB,OACtBovB,iBAAiBxhB,EAAMuH,QACvBka,iBAAiB,aACdlxB,EAAWqsB,WAAW2E,GACtBG,EAAW9E,WAAW1F,GAAK,EAAI3mB,EAC/BoxB,EAAW/E,WAAW3F,GAAK2F,WAAW0E,GAC5ClB,EACGhJ,KAAK,KAAMH,GACXG,KAAK,KAAMsK,GACXtK,KAAK,KAAMuK,GACXvK,KAAK,KAAMsK,GACdtB,EAAKzxB,MAAM,SAAU,SACrB,IAAMizB,EAAcnB,EAAMK,OAAO,KACjCc,EAAYxK,KAAK,KAAM,qBAAuB7P,EAAK5W,MAEnD,IAAIkxB,EAAY,EAGVC,EAAQ,GAA0B,GAArBV,EAAYllB,OAE/BklB,EAAY/jB,SAAQ,SAAAqJ,GAElB,IAAMqb,EAAmBH,EAAYd,OAAO,KACtCkB,EAAeJ,EAAYd,OAAO,KAGlCmB,EAAU,EAAKC,uBAAuB3H,sBAC1C7T,EAAKgD,YAGDyY,EAAU,EAAKD,uBAAuB9H,sBAC1C1T,EAAKhB,SAASc,YAGhB,EAAK4b,iBACHL,EACAE,EAAQtzB,MAAMutB,aACdxV,GAIFqb,EAAiB3K,KACf,YACA,kBAA4B0K,EAAQD,GAAa,KAGnD,EAAKO,iBAAiBJ,EAAcG,EAASzb,EAAKhB,UAElDsc,EAAa5K,KACX,YACA,iBAA2B0K,EAAQD,GAAa,KAGlDA,GAAa,QAkBbxI,EAAQ+B,sBACP7T,EAAK4Z,kBACJ5Z,EAAK4Z,iBAAiB1a,kBAC4B,IAAlDc,EAAK4Z,iBAAiB1a,iBAAiBvK,SAC3Cmd,EAAQqC,eACkB,WAA1BrC,EAAQqC,eAER,EAAK2G,mBAAmBriB,EAAO2c,EAAOkE,GAGpCxH,EAAQoC,eAA2C,WAA1BpC,EAAQoC,eACnC,EAAK6G,mBAAmBtiB,EAAO2c,EAAOkE,IA7gBvB,KAihBnBwB,mBAAqB,SAACriB,EAAO2c,EAAOkE,GAClC,IAQM5D,EAAS,IARO,EAAKoE,kBACzBrhB,EAAM0gB,OACNG,EAAO7F,UAAUC,WACjB4F,EAAO7F,UAAUzqB,UAMnByP,EAAMoX,KAAK,KAAM6F,EAAS,OA3hBT,KA8hBnBqF,mBAAqB,SAACtiB,EAAO2c,EAAOkE,GAClC,IAKM5D,GAAU,GALK,EAAK+D,iBACxBhhB,EAAM0gB,OACNG,EAAO7F,UAAUC,WACjB4F,EAAO7F,UAAUzqB,UAGnByP,EAAMoX,KAAK,KAAM6F,EAAS,OAriBT,KAmjBnBsF,mBAAqB,SAACC,EAAS5C,EAAK6C,GAClC,IAAM5zB,EAAQ+wB,EAAI6C,EAAW,SACvB7zB,EAAQgxB,EAAI6C,EAAW,SACvB9zB,EAAQixB,EAAI6C,EAAW,SAE7BD,EAAQ7zB,MAAM,SAAUE,GACxB2zB,EAAQ7zB,MAAM,eAAgBC,GAChB,UAAVD,IACY,WAAVA,GACF6zB,EAAQ7zB,MAAM,mBAAoB,GAEtB,WAAVA,GACF6zB,EAAQ7zB,MAAM,mBAAoB,KA/jBrB,KAokBnB+zB,gBAAkB,SAACC,EAAiBxM,GAClCwM,EAAgBvL,KAAK,OAAQjB,EAAgBuE,SAC7C,EAAK6H,mBAAmBI,EAAiBxM,EAAiB,WAtkBzC,KAykBnByM,gBAAkB,SAACD,EAAiBxM,GAClC,IAAM4E,EAAS/C,SAAS7B,EAAgB4E,QAClCnsB,EAAQopB,SAAS7B,EAAgBvnB,OACjCc,EAASsoB,SAAS7B,EAAgBzmB,QAcxC,GAVsC,WAAlCymB,EAAgBsE,gBAClBkI,EAAgBvL,KAAK,KAAM2D,GAC3B4H,EAAgBvL,KAAK,KAAM2D,GAC3B4H,EAAgBvL,KAAK,QAAS,EAAI2D,GAClC4H,EAAgBvL,KAAK,SAAU,EAAI2D,GACnC4H,EAAgBvL,KAAK,KAAM2D,GAC3B4H,EAAgBvL,KAAK,KAAM2D,IAIS,SAAlC5E,EAAgBsE,gBAClBkI,EAAgBvL,KAAK,KAAM,GAAMxoB,GACjC+zB,EAAgBvL,KAAK,KAAM,GAAM1nB,GACjCizB,EAAgBvL,KAAK,QAASxoB,GAC9B+zB,EAAgBvL,KAAK,SAAU1nB,GAC3BymB,EAAgBgG,eAAe,CACjC,IAAM0G,EAAM1M,EAAgBgG,cAAcpgB,MAAM,KAChD4mB,EAAgBvL,KAAK,KAAMwF,WAAWiG,EAAI,KAC1CF,EAAgBvL,KAAK,KAAMwF,WAAWiG,EAAI,KAKR,YAAlC1M,EAAgBsE,gBAClBkI,EAAgBvL,KAAK,KAAM,GAAMxoB,GACjC+zB,EAAgBvL,KAAK,KAAM,GAAM1nB,GACjCizB,EAAgBvL,KAAK,QAASxoB,GAC9B+zB,EAAgBvL,KAAK,SAAU1nB,GAC/BizB,EAAgBvL,KAAK,KAAMxoB,GAC3B+zB,EAAgBvL,KAAK,KAAM1nB,KA3mB7BgE,KAAKqmB,UAAY,IAAIgD,GACrBrpB,KAAKwuB,uBAAyBrS,EAAMiT,sB,6DAGrBC,EAAgB5M,EAAiB5O,GAIhD,IAAMiQ,EAAiBuL,EAAejC,OAAO,QACvCkC,EAAc7M,EAAgBxnB,MACpC+E,KAAKkvB,gBAAgBpL,EAAgBwL,GACrCtvB,KAAKgvB,gBAAgBlL,EAAgBwL,GACrC,IAAMC,EAAcvvB,KAAKynB,gBACvB4H,EACAxb,EAAK9C,cACL0R,GAYF,OATAziB,KAAKktB,uBACHmC,EACAvL,EACAyL,EACA9M,EACA5O,GAIK,CAAEiQ,eAAgBA,EAAgBC,cAAewL,K,iCAG/CF,EAAgB5M,EAAiB5O,GAI1C,IAAMiQ,EAAiBuL,EAAejC,OAAO,QACvCkC,EAAc7M,EAAgBxnB,MACpC+E,KAAKkvB,gBAAgBpL,EAAgBwL,GACrCtvB,KAAKgvB,gBAAgBlL,EAAgBwL,GACrC,IAAMC,EAAcvvB,KAAKynB,gBACvB4H,EACAxb,EAAK0b,cACL9M,GAYF,OATAziB,KAAKktB,uBACHmC,EACAvL,EACAyL,EACA9M,EACA5O,GAIK,CAAEiQ,eAAgBA,EAAgBC,cAAewL,K,iCAIxDF,EACAtJ,EACAC,EACAvD,EACAzP,GAEA,IAAMsS,EAAgBtlB,KAAKwvB,iBACzBH,EACA5M,GAGEqB,EAAiB,KACjBC,EAAgB,KAkBpB,GAhBItB,EAAgBkD,QAAQkD,eAC1B7oB,KAAKyvB,gBACHJ,EACArJ,EACA,aAAehT,EAAK/V,KACpBwlB,EAAgBxnB,MAAMmtB,WAGtB3F,EAAgBkD,QAAQmD,eAC1B9oB,KAAK0vB,gBACHL,EACArJ,EACA,aAAehT,EAAK/V,KACpBwlB,EAAgBxnB,MAAMstB,WAGtB9F,EAAgBkD,QAAQiD,iBAAkB,CAC5C,IACMhF,EAAoB5jB,KAAK2vB,sCAC7B5J,EAFqB,KAIrBtD,EAAgBxnB,MAAMutB,aACtBxV,GAEF8Q,EAAiBF,EAAkBE,eACnCC,EAAgBH,EAAkB2L,YAGpC,MAAO,CACLjK,cAAeA,EACfxB,eAAgBA,EAChBC,cAAeA,K,4DAKjBgC,EACAsJ,EACAnD,EACAlZ,GAGAqc,EAAiBtJ,EAAkBqH,OAAO,KAC1C,IAAMwC,EACJ,iBACA5c,EAAKwS,WAAWvoB,KAChB,IACA+V,EAAK/V,KACL,IACA+V,EAAKyS,WAAWxoB,KAClBoyB,EAAexb,OAAO5W,GAAK2yB,EAG3B,IAAMC,EAAU,CACdtM,EAAGvQ,EAAKuQ,EACRC,EAAGxQ,EAAKwQ,EACRZ,KAAMgN,EACNE,IAAK9c,EACL+P,UAAWsM,GAEbA,EAAexb,OAAOkc,SAAWF,EACjCA,EAAQ5yB,GAAK,WACX,OAAO+C,KAAK4iB,MAEdiN,EAAQpM,wBAA0B,WAChCzjB,KAAK+iB,UAAUW,KACb,YACA,aAAe1jB,KAAKujB,EAAI,IAAMvjB,KAAKwjB,EAAI,MAG3CqM,EAAQvM,YAAc,SAASC,EAAGC,GAChCxjB,KAAKujB,EAAIA,EACTvjB,KAAKwjB,EAAIA,GAEX,IAAMwM,EAAWhwB,KAAK6jB,WAAWwL,EAAgBnD,EAAKlZ,GACtD,MAAO,CACL8Q,eAAgBkM,EAASlM,eACzByL,YAAaS,EAAST,e,uCAITxC,EAAOI,GACtB,IAAM8C,EAAWlD,EAAMK,OAAO,QAG9B,OAFAptB,KAAK6uB,mBAAmBoB,EAAU9C,EAAOlyB,MAAM+X,KAAM,QACrDid,EAASh1B,MAAM,OAAQ,QAChBg1B,I,sCAGOC,EAAQC,EAAW7pB,EAAY4lB,GAC7ClsB,KAAKowB,qBAAqBF,EAAQC,EAAW7pB,EAAY4lB,EAAK,gB,sCAEhDgE,EAAQC,EAAW7pB,EAAY4lB,GAC7ClsB,KAAKowB,qBACHF,EACAC,EACA7pB,EACA4lB,EACA,kB,2CAIiBgE,EAAQC,EAAW7pB,EAAY4lB,EAAKmE,GACvD,IAAMjE,EAAQlD,WAAWgD,EAAI7D,aAMvBiI,GALc,GAATlE,EAKY,KAJH,GAATA,EAIuB,IAHf,GAARA,EAGkC,IAF1B,GAARA,EAGLhE,EAAY+H,EACf/C,OAAO,UAEP1J,KAAK,KAAMpd,GACXod,KAAK,UAAW4M,GAChB5M,KAAK,cAAuB,GAAR0I,GACpB1I,KAAK,eAAwB,GAAR0I,GAErB1I,KAAK,SAAU,QAElBwM,EAAOxM,KAAK2M,EAAW,QAAU/pB,EAAa,KAC9C,IAAMwd,EAAiBsE,EAAUgF,OAAO,QACxC,GAA0B,aAAtBlB,EAAInF,cAA8B,CACpC,IAAMwJ,GAAO,GAAKnE,EACZoE,EAAM,EAAIpE,EACVqE,GAAO,GAAKrE,EACZsE,GAAO,EAAItE,EACjBtI,EAAeJ,KACb,IACA,SAAW6M,EAAM,IAAMC,EAAM,IAAMC,EAAM,IAAMC,EAA/C,QAGJ,GAA0B,YAAtBxE,EAAInF,cAA6B,CACnC,IACM4J,GAAM,EAAIvE,EACVwE,EAAK,EAAIxE,EACTyE,EACJ,MAGAF,EACA,IACAC,EALA,QAWAA,EACA,IACAD,EAbA,QAmBAA,EACA,IACAC,EArBA,KAyBF9M,EAAeJ,KAAK,IAAKmN,GAG3B/M,EAAe7oB,MAAM,SAAUixB,EAAI9E,aACnCtD,EAAe7oB,MAAM,eAAgBixB,EAAIhF,aACzCpD,EAAe7oB,MAAM,OAAQixB,EAAI5D,WACT,UAApB4D,EAAI/E,cACkB,WAApB+E,EAAI/E,aACNrD,EAAe7oB,MAAM,mBAAoB,GAEnB,WAApBixB,EAAI/E,aACNrD,EAAe7oB,MAAM,mBAAoB,M,yCAK5B+X,EAAM0Z,EAAMhjB,EAAK0K,EAAK0c,EAAUC,GAMjD,GAJiB,SAAbD,GAAoC,cAAbA,IACzBC,GAAQ,IAGI,IAAVA,EAAiB,CACnB,IAAMC,EAAgBhxB,KAAKqmB,UAAUoF,0BACnC/hB,EACA0K,EACA,GAEFsY,EAAKhJ,KAAK,IAAK1jB,KAAKysB,qBAAqBuE,QACpC,CACL,IAAMA,EAAgBhxB,KAAKqmB,UAAUiD,sCACnC5f,EACA0K,EACApB,EACA,GAEe,SAAb8d,EACFpE,EAAKhJ,KAAK,IAAK1jB,KAAK6sB,mBAAmBmE,IAEvCtE,EAAKhJ,KAAK,IAAK1jB,KAAK2sB,oBAAoBqE,O,6CAKvBhe,EAAMiW,EAAOvf,EAAK0K,EAAK0c,EAAUC,GAItD,GAHiB,SAAbD,GAAoC,cAAbA,IACzBC,GAAQ,GAENA,GACF,GAAI9H,EAAO,CACT,IAAMgI,EAAchI,EAAMpV,OAAOqd,WAIjC,MAAO,CAAE3N,EAHCoB,UAAUsM,GAAaluB,OAAO,GAAGwgB,EAG/BC,EAFFmB,UAAUsM,GAAaluB,OAAO,GAAGygB,SAM/C,GAAIyF,EAAO,CACT,IAAMgI,EAAchI,EAAMpV,OAAOqd,WACjC,GAAID,IACY,IAAVF,EAAiB,CACnB,IAAMC,EAAgBhxB,KAAKqmB,UAAUiD,sCACnC5f,EACA0K,EACApB,EACA,GAGIme,EAAc,CAClB5K,GAAI,IAAOyK,EAAc,GAAG,GAAKA,EAAc,GAAG,IAClDxK,GAAI,IAAOwK,EAAc,GAAG,GAAKA,EAAc,GAAG,KAGpDrM,UAAUsM,GACPluB,OAAO,GACPugB,YAAY6N,EAAY5K,GAAI4K,EAAY3K,IAC3C7B,UAAUsM,GACPluB,OAAO,GACP0gB,8B,uCAsBMuJ,EAAMzF,EAAY1qB,GACjC,IAAMwN,EAAIsa,UAAU,QAAQyI,OAAO,QACnC/iB,EAAEqZ,KAAK,KAAM,cACbrZ,EAAEqZ,KACA,QACA,kEACE6D,EACA,eACA1qB,GAGJwN,EAAE2iB,KAAKA,GACP,IAAMY,EAAIvsB,SAAS+vB,eAAe,cAAcC,YAEhD,OADAhnB,EAAE8a,SACKyI,I,wCAESZ,EAAMzF,EAAY1qB,GAClC,IAAMwN,EAAIsa,UAAU,QAAQyI,OAAO,QACnC/iB,EAAEqZ,KAAK,KAAM,cACbrZ,EAAEqZ,KACA,QACA,kEACE6D,EACA,eACA1qB,GAGJwN,EAAE2iB,KAAKA,GACP,IAAMY,EAAIvsB,SAAS+vB,eAAe,cAAcE,aAEhD,OADAjnB,EAAE8a,SACKyI,I,gCA2LCuC,EAAWnD,EAAMd,GACzB,IAAMqF,EAAuBpB,EAAU/C,OAAO,QAAQJ,KAAKA,GAO3D,OAJAuE,EAAqBt2B,MAAM,cAAeixB,EAAI3E,YAC9CgK,EAAqBt2B,MAAM,YAAaixB,EAAIrvB,UAC5C00B,EAAqBt2B,MAAM,OAAQixB,EAAI1E,WACvC+J,EAAqBt2B,MAAM,iBAAkB,QACtCs2B,I,+BAmEAhkB,EAAO4f,EAAQjyB,GAKtB,IAJA,IACIs2B,EACAC,EACAC,EAHAC,EAAgBpkB,KAKlBikB,EAAYxxB,KAAKstB,iBACfqE,EACAxE,EAAO5F,WACP4F,EAAOtwB,YAEQ3B,KAGjBu2B,EAAQD,EAAYt2B,EACpBw2B,EAAyBzH,KAAK2H,MAAMD,EAAcnpB,OAASipB,GACvDE,EAAcnpB,SAAWkpB,IAG7BC,EAAgBA,EAAcE,UAAU,EAAGH,GAE7C,OAAInkB,EAAM/E,OAASmpB,EAAcnpB,OACxB+E,EAAMskB,UAAU,EAAGF,EAAcnpB,OAAS,GAAK,MAEjD+E,M,KC5oBUukB,G,kDACnB,WAAY3V,GAAQ,IAAD,8BACjB,cAAMA,IASR4V,0BAA4B,SAAAC,GACtBA,EACF,EAAKC,YAEL,EAAKC,eAdU,EAgEnBC,qBAAuB,WACrB,EAAKC,cAAczoB,SAAQ,SAAAkK,GACzBA,EAAK4P,6BAEP,EAAK4O,cAAc1oB,SAAQ,SAAAqJ,GACzBA,EAAKyQ,8BArEU,EAyEnB6O,oBAAsB,WACpB,IAOI7pB,EAPE+T,EAAI,gBAkBV,SAjBmB7c,IAAf,EAAK4yB,QACP,EAAKA,MAAQ5N,UAAU4N,SAGzB,EAAKC,WAAa,GAClB,EAAKC,WAAa,GAYbhqB,EAAI,EAAGA,EAAI,EAAK2pB,cAAc5pB,OAAQC,IACrC,EAAK2pB,cAAc3pB,GAAGua,WACxB,EAAKyP,WAAWlrB,KAAK,EAAK6qB,cAAc3pB,IAI5C,IAAKA,EAAI,EAAGA,EAAI,EAAK4pB,cAAc7pB,OAAQC,IACrC,EAAK4pB,cAAc5pB,GAAGua,YACxB,EAAKwP,WAAa,EAAKA,WAAWvkB,OAChC,EAAKokB,cAAc5pB,GAAGiqB,gBAExB,EAAKD,WAAa,EAAKA,WAAWxkB,OAChC,EAAKokB,cAAc5pB,GAAGkqB,iBAK5B,EAAKJ,MAAMve,MAAM,EAAKye,YACtB,EAAKF,MAAMpe,MAAM,EAAKqe,YAGtB,EAAKC,WAAW9oB,SAAQ,SAAAkK,GACtBA,EAAK+e,uBAAL,mBAGF,EAAKJ,WAAW7oB,SAAQ,SAAAqJ,GACtBA,EAAK4f,uBAAL,mBAGF,EAAKC,cAAgB,IAErB,EAAKN,MACFO,QAAO,SAAShE,GACf,OAAQ,OAETiE,aAAa,EAAKC,qBAClBC,aAAa,IACbx3B,KAAK,CAAC+gB,EAAK0W,WAAW,GAAI1W,EAAK0W,WAAW,KAC1CC,QAAQ,MAEX,EAAKhB,uBACL,EAAKI,MAAMa,GAAG,OAAQ,EAAKjB,uBAnI3B,EAAKI,WAAQ5yB,EACb,EAAK6yB,WAAa,GAClB,EAAKC,WAAa,GAClB,EAAKM,aAAe,OACpB,EAAKF,cAAgB,IACrB,EAAKK,WAAa,GAPD,E,4DAkBHjrB,GACdjI,KAAK6yB,cAAgB5qB,EACjBjI,KAAKuyB,OACPvyB,KAAKuyB,MAAMQ,aAAa9qB,K,oCAItBjI,KAAKuyB,OACPvyB,KAAKuyB,MAAMc,W,kCAITrzB,KAAKuyB,OACPvyB,KAAKuyB,MAAMe,S,oCAITtzB,KAAKuyB,QACoB,IAAvBvyB,KAAKuyB,MAAMgB,QACbvzB,KAAKuyB,MAAMc,SAEXrzB,KAAKuyB,MAAMe,U,+CAMftzB,KAAKwzB,mBAELxzB,KAAKoyB,cAAgBpyB,KAAKmc,MAAMnI,MAEhChU,KAAKqyB,cAAgBryB,KAAKmc,MAAMhI,MAC5BnU,KAAKuyB,OACPvyB,KAAKuyB,MAAMe,OAEbtzB,KAAKsyB,sBACLtyB,KAAKuyB,MAAMkB,QACXzzB,KAAKuyB,MAAMe,S,yCAIX,IAAMI,EAAK1zB,KAAKmc,MAAMwX,QAAQ9f,OAAO+f,wBACrC5zB,KAAKkzB,WAAW,GAAKQ,EAAGx4B,MACxB8E,KAAKkzB,WAAW,GAAKQ,EAAG13B,S,0CA2ENgX,GAClB,MAAkB,WAAdA,EAAKlV,KACA,IAES,SAAdkV,EAAKlV,KACA,IAES,WAAdkV,EAAKlV,KACA,SADT,M,IClJF,WAAYqe,GAAQ,oBAClBnc,KAAKmc,MAAQA,EAEbnc,KAAKoyB,cAAgBjW,EAAMnI,MAC3BhU,KAAKqyB,cAAgBlW,EAAMhI,SCHV0f,GACnB,WAAY1X,GAAQ,IAAD,gCAWnB2X,gBAAkB,SAAA5qB,GAChB,EAAK6qB,YAAc7qB,GAZF,KAcnB8qB,gBAAkB,SAAA9qB,GAChB,EAAK+qB,YAAc/qB,GAfF,KAkBnBgrB,uBAAyB,WACvB,GAAK,EAAKC,YAAV,CAKA,IAAM3X,EAAO,EAGb,EAAK4X,KAAOzP,YACTyP,OACAz4B,SAAS,KACT04B,YAAY,CAAC,IAAM,IACnBjB,GAAG,OAAQ,EAAKkB,QAChBlB,GAAG,aAAa,WAEbzO,SAAS4P,aACT5P,SAAS4P,YAAYC,SACY,IAAjC7P,SAAS4P,YAAYC,SAErBhY,EAAK2X,YAAYR,QAAQ14B,MAAM,SAAU,iBAG5Cm4B,GAAG,WAAW,WACb5W,EAAK2X,YAAYR,QAAQ14B,MAAM,SAAU,WAG7C,EAAKk5B,YAAYR,QAAQc,KAAK,EAAKL,MACnC,EAAKA,KAAO,EAAKA,KAAKC,YAAY,CAAC,IAAM,IACrC,EAAKF,YAAYO,WACnB,EAAKN,KAAKO,MAAM,EAAKR,YAAYO,gBA5BjCjyB,QAAQmE,MAAM,0BApBC,KAoDnBguB,gBAAkB,WAChBnyB,QAAQC,IAAI,qDACZD,QAAQC,IAAI,EAAKmyB,YACjBpyB,QAAQC,IAAI,EAAKoyB,mBAvDA,KAgEnBR,OAAS,WAwEH3P,SAAS4P,cACX5P,SAAS4P,YAAYQ,iBACrBpQ,SAAS4P,YAAYS,mBAGvB,IAAMxY,EAAO,EAEPyY,EADQ,EAAKd,YACUO,UACzBQ,GAAoB,EAMxB,GALIvQ,SAAS4P,aACP5P,SAAS4P,YAAYY,SACvBD,GAAoB,IAGE,IAAtBA,EAA6B,CAC/B,IAAgC,IAA5B,EAAKE,mBACP,OAWF,OANA,EAAKP,WAAalQ,SAASyH,MAC3B,EAAK0I,iBAAmBnQ,SAASC,eACjCqQ,EAAevR,KACb,YACA,aAAe,EAAKoR,iBAAmB,UAAY,EAAKD,WAAa,KAKzE,EAAKA,WAAalQ,SAASyH,MAC3B,EAAK0I,iBAAmBnQ,SAASC,UACjCqQ,EACGzQ,aACAC,MAAM,kBAAkB,WACvB,OAAO,WAELjI,EAAK4Y,oBAAqB,EAC1B,IAAM1Q,EAAKC,aAAasQ,EAAevR,KAAK,cAC5ClH,EAAKsY,iBAAiB,GAAKpQ,EAAGE,UAAU,GACxCpI,EAAKsY,iBAAiB,GAAKpQ,EAAGE,UAAU,GACxCpI,EAAKqY,WAAanQ,EAAG0H,MAAM,OAG9BrH,KAAK,OAAO,WACXvI,EAAK4Y,oBAAqB,KAE3B1R,KACC,YACA,aAAelH,EAAKsY,iBAAmB,UAAYtY,EAAKqY,WAAa,KAEtEQ,KAAK,UACL15B,SAAS,MA3LZqE,KAAKm0B,YAAchY,EACnBnc,KAAKo0B,UAAOz0B,EACZK,KAAK80B,iBAAmB,CAAC,EAAG,GAC5B90B,KAAK60B,WAAa,EAClB70B,KAAKo1B,oBAAqB,EAE1Bp1B,KAAK+zB,aAAc,EACnB/zB,KAAKi0B,aAAc,GCTFqB,G,WACnB,WAAYnZ,GAAQ,IAAD,gCAQnBoZ,sBAAwB,WACtB,GAAK,EAAKpB,YAAV,CAOA,EAAKqB,cAAgB7Q,YAClB8Q,OACAC,QAAO,SAASrrB,GACf,OAAOA,KAER+oB,GAAG,YAAa,EAAKuC,WACrBvC,GAAG,OAAQ,EAAKqC,MAChBrC,GAAG,UAAW,EAAKwC,SAGtB,IAAMpZ,EAAO,EACb,EAAKqZ,eAAiB,SAASxrB,GACzBmS,EAAKsZ,eACPzrB,EAAE+oB,GAAG,YAAa5W,EAAKuZ,aACvB1rB,EAAE+oB,GAAG,WAAY5W,EAAKwZ,gBAK1B,EAAKC,eAAiB,SAAS5rB,GACzBmS,EAAK0Z,cACP7rB,EAAE+oB,GAAG,QAAS5W,EAAK2Z,YAGvB,EAAKC,oBAAsB,SAAS/rB,GAC9BmS,EAAK6Z,mBACPhsB,EAAE+oB,GAAG,QAAS5W,EAAK8Z,kBAKvB,IAAMtiB,EAAQ,EAAKmgB,YAAYngB,MAC3BA,EAAMxL,OAAS,GACjBwL,EAAMrK,SAAQ,SAAAiL,GACRA,EAAEmO,YACJnO,EAAEmO,UAAU0R,KAAK,EAAKe,eACtB5gB,EAAEmO,UAAU0R,KAAK,EAAKoB,gBACtBjhB,EAAEmO,UAAU0R,KAAK,EAAKwB,gBACtBrhB,EAAEmO,UAAU0R,KAAK,EAAK2B,8BA5C1B3zB,QAAQmE,MAAM,0BAVC,KAqFnB+uB,UAAY,SAAAtrB,GACVsa,SAAS4P,YAAYS,kBACrB3qB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,YAxFX,KA2FnBw6B,KAAO,SAAAprB,GACLsa,SAAS4P,YAAYS,kBACrB3qB,EAAEiZ,YAAYqB,SAASpB,EAAGoB,SAASnB,GACnCnZ,EAAEwa,GAAKF,SAASpB,EAChBlZ,EAAEya,GAAKH,SAASnB,EAChBnZ,EAAEoZ,0BAEEpZ,EAAEuoB,wBAA0BvoB,EAAEuoB,uBAAuBL,OACvDloB,EAAEuoB,uBAAuBV,eAnGV,KAuGnB0D,QAAU,SAAAvrB,GACHA,EAAEmsB,eACLnsB,EAAEksB,OAAQ,GAEZlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,SA1G5B+E,KAAKm0B,YAAchY,EACnBnc,KAAKw1B,cAAgB,KACrBx1B,KAAKk2B,cAAe,EACpBl2B,KAAKq2B,mBAAoB,EACzBr2B,KAAK81B,cAAe,E,wDA2DVzrB,GACIA,EAAEyZ,eACV7oB,MAAM,OAAQ,W,mCAGToP,GACGA,EAAEyZ,eACV7oB,MAAM,OAAQoP,EAAEoY,kBAAkBxnB,MAAM+rB,W,sCAGhC3c,GAEdsa,SAASqQ,kBACTrQ,SAASoQ,iBACT1qB,EAAEuoB,uBAAuB6D,gB,gCAEjBpsB,Q,KCjFSqsB,G,WACnB,WAAYva,GAAQ,IAAD,gCASnBwa,gBAAkB,SAAAztB,GAChB,EAAK0tB,aAAe1tB,EACpB,EAAK2tB,iBAAmB3tB,GAXP,KAanB4tB,oBAAsB,SAAA5tB,GACpB,EAAKgtB,aAAehtB,GAdH,KAgBnB6tB,0BAA4B,SAAA7tB,GAC1B,EAAKmtB,kBAAoBntB,GAjBR,KAmBnB8tB,eAAiB,SAAA9tB,GACf,EAAK+tB,mBAAqB/tB,GApBT,KAuBnBguB,sBAAwB,WACtB,GAAK,EAAK/C,YAAV,CAMA,EAAKqB,cAAgB7Q,YAClB8Q,OACAC,QAAO,SAASrrB,GACf,OAAOA,KAER+oB,GAAG,YAAa,EAAKuC,WACrBvC,GAAG,OAAQ,EAAKqC,MAChBrC,GAAG,UAAW,EAAKwC,SAGtB,IAAMpZ,EAAO,EACb,EAAKqZ,eAAiB,SAASxrB,GACzBmS,EAAKoa,eACPvsB,EAAE+oB,GAAG,YAAa5W,EAAK2a,aACvB9sB,EAAE+oB,GAAG,WAAY5W,EAAK4a,gBAG1B,EAAKC,uBAAyB,SAAShtB,GACjCmS,EAAKqa,mBACPxsB,EAAE+oB,GAAG,YAAa5W,EAAK8a,iBACvBjtB,EAAE+oB,GAAG,WAAY5W,EAAK+a,oBAiB1B,IAAMpjB,EAAQ,EAAKggB,YAAYhgB,MAC3BA,EAAM3L,OAAS,GACjB2L,EAAMxK,SAAQ,SAAAoL,GACZ,GAAIA,EAAEgO,YACJhO,EAAEgO,UAAU0R,KAAK,EAAKoB,gBAElB9gB,EAAE+O,gBAAgB,CACpB,IAAMoN,EAAanc,EAAE+O,eAAejQ,OAAOqd,WAC3C,GAAIA,EAAY,CACd,IAAMsG,EAAY7S,UAAUuM,GACxBsG,IACFA,EAAU/C,KAAK,EAAK4C,wBACpBG,EAAU/C,KAAK,EAAKe,0BAtD9B/yB,QAAQmE,MAAM,0BAzBC,KAsGnB0wB,gBAAkB,SAAAjtB,GACFA,EAAEylB,IAAIhM,eACd7oB,MAAM,OAAQ,QAEG,IAAnBoP,EAAEotB,eAGNptB,EAAEotB,cAAe,EACjBptB,EAAEqtB,eAAgB,EAEdrtB,EAAEstB,mBACJttB,EAAEqtB,eAAgB,EAClBrtB,EAAEstB,kBAAmB,KAlHN,KAgKnBhC,UAAY,SAAAtrB,GACN,EAAK4sB,qBACPtS,SAAS4P,YAAYS,kBACrB3qB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,aApKb,KAwKnBw6B,KAAO,SAAAprB,GACD,EAAK4sB,qBACPtS,SAAS4P,YAAYS,kBACrB3qB,EAAEiZ,YAAYqB,SAASpB,EAAGoB,SAASnB,GACnCnZ,EAAEwa,GAAKF,SAASpB,EAChBlZ,EAAEya,GAAKH,SAASnB,EAChBnZ,EAAEylB,IAAIrM,0BACFpZ,EAAEuoB,wBAA0BvoB,EAAEuoB,uBAAuBL,OACvDloB,EAAEuoB,uBAAuBV,gBAhLZ,KAqLnB0D,QAAU,SAAAvrB,GACJ,EAAK4sB,qBACP5sB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,UAvL9B+E,KAAKm0B,YAAchY,EACnBnc,KAAKw1B,cAAgB,KACrBx1B,KAAKk2B,cAAe,EACpBl2B,KAAKq2B,mBAAoB,EACzBr2B,KAAK42B,cAAe,EACpB52B,KAAK62B,kBAAmB,E,wDAsFdxsB,GACIA,EAAEib,cACVrqB,MAAM,SAAU,S,mCAGXoP,GACGA,EAAEib,cACVrqB,MAAM,SAAUoP,EAAEoY,kBAAkBxnB,MAAM+X,KAAKmV,a,uCA4CtC9d,GACDA,EAAEylB,IAAIhM,eACd7oB,MAAM,OAAQoP,EAAEylB,IAAIrN,kBAAkBxnB,MAAMutB,aAAaxB,SAClC,cAAzB3c,EAAEylB,IAAIpK,gBACRf,aAAa,yBAAyBQ,SAExC9a,EAAEotB,cAAe,I,sCAGHptB,M,gCAGNA,Q,KC1JSutB,G,WACnB,aAAe,oBACb53B,KAAK63B,kBAAoB,KACzB73B,KAAK83B,iBAAmB,KACxB93B,KAAK+3B,iBAAmB,K,8DAGR5b,EAAO6b,GAElBh4B,KAAK63B,oBACRp1B,QAAQw1B,KACN,gEAEFj4B,KAAK63B,kBAAoB,IAAIhE,GAAkB1X,IAEjDnc,KAAK63B,kBAAkB3D,uBAAuB8D,GAGzCh4B,KAAK83B,mBACRr1B,QAAQw1B,KACN,+DAEFj4B,KAAK83B,iBAAmB,IAAIxC,GAAiBnZ,IAE/Cnc,KAAK83B,iBAAiBvC,sBAAsByC,GAGvCh4B,KAAK+3B,mBACRt1B,QAAQw1B,KACN,+DAEFj4B,KAAK+3B,iBAAmB,IAAIrB,GAAiBva,IAE/Cnc,KAAK+3B,iBAAiBb,sBAAsBc,O,KCnC3B1C,G,WACnB,WAAYnZ,GAAQ,IAAD,gCAQnBwa,gBAAkB,SAAAztB,GAChB,EAAK4sB,aAAe5sB,GATH,KAWnB4tB,oBAAsB,SAAA5tB,GACpB,EAAKgtB,aAAehtB,GAZH,KAcnB6tB,0BAA4B,SAAA7tB,GAC1B,EAAKmtB,kBAAoBntB,GAfR,KAiBnB8tB,eAAiB,SAAA9tB,GACf,EAAK+tB,mBAAqB/tB,GAlBT,KAqBnBqsB,sBAAwB,WACtB,GAAK,EAAKpB,YAAV,CAOA,EAAKqB,cAAgB7Q,YAClB8Q,OACAC,QAAO,SAASrrB,GACf,OAAOA,KAER+oB,GAAG,YAAa,EAAKuC,WACrBvC,GAAG,OAAQ,EAAKqC,MAChBrC,GAAG,UAAW,EAAKwC,SAGtB,IAAMpZ,EAAO,EACb,EAAKqZ,eAAiB,SAASxrB,GACzBmS,EAAKsZ,eACPzrB,EAAE+oB,GAAG,YAAa5W,EAAKuZ,aACvB1rB,EAAE+oB,GAAG,WAAY5W,EAAKwZ,gBAK1B,EAAKC,eAAiB,SAAS5rB,GACzBmS,EAAK0Z,cACP7rB,EAAE+oB,GAAG,QAAS5W,EAAK2Z,YAGvB,EAAKC,oBAAsB,SAAS/rB,GAC9BmS,EAAK6Z,mBACPhsB,EAAE+oB,GAAG,QAAS5W,EAAK8Z,kBAKvB,IAAMtiB,EAAQ,EAAKmgB,YAAYngB,MAC3BA,EAAMxL,OAAS,GACjBwL,EAAMrK,SAAQ,SAAAiL,GACRA,EAAEmO,YACJnO,EAAEmO,UAAU0R,KAAK,EAAKe,eACtB5gB,EAAEmO,UAAU0R,KAAK,EAAKoB,gBACtBjhB,EAAEmO,UAAU0R,KAAK,EAAKwB,gBACtBrhB,EAAEmO,UAAU0R,KAAK,EAAK2B,8BA5C1B3zB,QAAQmE,MAAM,0BAvBC,KAmGnB+uB,UAAY,SAAAtrB,GACN,EAAK4sB,qBACPtS,SAAS4P,YAAYS,kBACrB3qB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,aAvGb,KA2GnBw6B,KAAO,SAAAprB,GACD,EAAK4sB,qBACPtS,SAAS4P,YAAYS,kBACrB3qB,EAAEiZ,YAAYqB,SAASpB,EAAGoB,SAASnB,GACnCnZ,EAAEwa,GAAKF,SAASpB,EAChBlZ,EAAEya,GAAKH,SAASnB,EAChBnZ,EAAEoZ,0BAEEpZ,EAAEuoB,wBAA0BvoB,EAAEuoB,uBAAuBL,OACvDloB,EAAEuoB,uBAAuBV,gBApHZ,KAyHnB0D,QAAU,SAAAvrB,GACJ,EAAK4sB,qBACP5sB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,QACxBoP,EAAEuoB,wBAA0BvoB,EAAEuoB,uBAAuBL,OACvDloB,EAAEuoB,uBAAuBV,gBA7H7BlyB,KAAKm0B,YAAchY,EACnBnc,KAAKw1B,cAAgB,KACrBx1B,KAAKk2B,cAAe,EACpBl2B,KAAKq2B,mBAAoB,EACzBr2B,KAAK81B,cAAe,E,wDAwEVzrB,GACIA,EAAEyZ,eACV7oB,MAAM,OAAQ,W,mCAGToP,GACGA,EAAEyZ,eACV7oB,MAAM,OAAQoP,EAAEoY,kBAAkBxnB,MAAM+rB,W,sCAGhC3c,GAEd5H,QAAQC,IAAI,gCACZiiB,SAASqQ,kBACTrQ,SAASoQ,mB,gCAED1qB,GAER5H,QAAQC,IAAI,qC,KCxFKw1B,G,WACnB,aAAe,IAAD,gCA0BdC,wBAA0B,SAAAjvB,GACxB,EAAKuS,aAAevS,GA3BR,KA8BdkvB,sBAAwB,SAAAC,GACtB,EAAKC,QAAUD,GA/BH,KAkCdE,aAAe,SAAAC,GACb,EAAKvV,UAAYuV,GAnCL,KAsCdC,SAAW,SAAAzsB,GACT,EAAKA,MAAQA,GAvCD,KA0Cd0sB,mBAAqB,SAAAvL,GACnB,EAAK1K,gBAAkB0K,GA3CX,KA8CdiC,oBAAsB,WACpB,OAAO,EAAK3M,iBA/CA,KAkDdkW,sBAAwB,SAAAC,GACtB,EAAKC,mBAAqBD,GAnDd,KAsDdE,2BAA6B,SAAAx6B,GAG3B,IAAM81B,EAAO91B,EAAM4b,gBACbub,EAAOn3B,EAAMgc,gBAEd,EAAKue,qBACR,EAAKA,mBAAqB,IAAIjB,IAE3B,EAAKiB,mBAAmBhB,oBAC3B,EAAKgB,mBAAmBhB,kBAAoB,IAAIhE,GAAkB,IAGpE,EAAKgF,mBAAmBhB,kBAAkB/D,gBAAgBM,GAC1D,EAAKyE,mBAAmBhB,kBAAkB7D,gBAAgByB,GAI1D,IAAMsD,EAAWz6B,EAAMkc,eACjBwe,EAAY16B,EAAMmc,gBAClB0b,EAAY73B,EAAMoc,sBAClB4b,EAAkBh4B,EAAMqc,sBAEzB,EAAKke,mBAAmBf,mBAC3B,EAAKe,mBAAmBf,iBAAmB,IAAIxC,GAAiB,IAGlE,EAAKuD,mBAAmBhB,kBAAkB/D,gBAAgBM,GAC1D,EAAKyE,mBAAmBhB,kBAAkB7D,gBAAgByB,GAE1D,EAAKoD,mBAAmBf,iBAAiBhB,oBAAoBX,GAC7D,EAAK0C,mBAAmBf,iBAAiBf,0BACvCT,GAEF,EAAKuC,mBAAmBf,iBAAiBnB,gBAAgBqC,GACzD,EAAKH,mBAAmBf,iBAAiBd,eAAe+B,GAGnD,EAAKF,mBAAmBd,mBAC3B,EAAKc,mBAAmBd,iBAAmB,IAAIrB,GAAiB,IAGlE,IAAMuC,EAAW36B,EAAMuc,eACjBqe,EAAY56B,EAAMwc,gBAExB,EAAK+d,mBAAmBd,iBAAiBpB,gBAAgBuC,GACzD,EAAKL,mBAAmBd,iBAAiBf,eAAeiC,GAExD,EAAKd,wBAAwB75B,EAAMmd,eAtGvB,KAqId0d,oBAAsB,WACpB12B,QAAQC,IAAI,gDAER,EAAKm2B,oBACH,EAAKA,mBAAmBhB,mBAC1B,EAAKgB,mBAAmBhB,kBAAkBjD,mBA1IlC,KA+IdwE,6BAA+B,WACxB,EAAKd,SAKV,EAAKe,4BAEL,EAAKC,8BANH72B,QAAQmE,MAAM,gCAjJJ,KA0JdyyB,0BAA4B,WACtB,EAAK3E,YACP,EAAKA,UAAUxP,UAAU,QAAQC,SACjC,EAAKuP,UAAUxP,UAAU,KAAKC,SAC9B,EAAKuP,UAAUvP,UAEb,EAAKwO,SACP,EAAKA,QAAQxO,SAGXR,UAAU,IAAM,EAAK2T,QAAU,aAEjC3T,UAAU,IAAM,EAAK2T,QAAU,YAAYnT,UAtKjC,KA0KdoU,gBAAkB,WAChB,GAAI,EAAK5F,QAAS,CAEhB,IACM6F,EADU7U,UAAU,IAAM,EAAK2T,SACNzkB,OAAO+f,wBACtC,EAAKD,QAAQ14B,MAAM,QAASu+B,EAAet+B,MAAQ,MACnD,EAAKy4B,QAAQ14B,MAAM,SAAUu+B,EAAex9B,OAAS,QAhL3C,KAoLds9B,2BAA6B,WAC3B,IAAMG,EAAU9U,UAAU,IAAM,EAAK2T,SACrC,EAAK3E,QAAU8F,EAAQrM,OAAO,OAC9B,EAAKuG,QAAQ9f,OAAO5W,GAAK,EAAKq7B,QAAU,WACxC,EAAK3E,QAAQ14B,MAAM,aAAc,EAAKwgB,cAGtC,EAAKie,4BACL,IAAMF,EAAiBC,EAAQ5lB,OAAO+f,wBACtC,EAAKD,QAAQ14B,MAAM,QAASu+B,EAAet+B,MAAQ,MACnD,EAAKy4B,QAAQ14B,MAAM,SAAUu+B,EAAex9B,OAAS,MAIrD,EAAK04B,UAAY,EAAKf,QAAQvG,OAAO,KACrC,EAAKsH,UAAUz5B,MAAM,WAAY,UAEjC,EAAK0+B,iBArMO,KAyMdA,cAAgB,WACd,IAAMC,EAAO,EAAKlF,UACZmF,EAAkB,EAAKvB,QAC7B,EAAKwB,YAAYnwB,SAAQ,SAASowB,GAClB,WAAVA,EACsBH,EAAKxM,OAAO,QACpBvZ,OAAO5W,GAAK48B,EAAkB,IAAME,EAE7BH,EAAKxM,OAAO,KACpBvZ,OAAO5W,GAAK48B,EAAkB,IAAME,MAlN3C,KAuNdL,0BAA4B,WAC1B,IAAMD,EAAU9U,UAAU,IAAM,EAAK2T,SACrC,GACEmB,EAAQx+B,MAAM,iBACdw+B,EAAQx+B,MAAM,kBACdw+B,EAAQx+B,MAAM,gBACdw+B,EAAQx+B,MAAM,kBACd,CACA,IAAI++B,EAAU,GAEZP,EAAQx+B,MAAM,iBACqB,MAAlCw+B,EAAQx+B,MAAM,iBACqB,QAAlCw+B,EAAQx+B,MAAM,iBAEhB++B,KAGAP,EAAQx+B,MAAM,kBACsB,MAAnCw+B,EAAQx+B,MAAM,kBACsB,QAAnCw+B,EAAQx+B,MAAM,kBAEhB++B,KAIAP,EAAQx+B,MAAM,gBACoB,MAAjCw+B,EAAQx+B,MAAM,gBACoB,QAAjCw+B,EAAQx+B,MAAM,gBAEhB++B,KAGAP,EAAQx+B,MAAM,mBACuB,MAApCw+B,EAAQx+B,MAAM,mBACuB,QAApCw+B,EAAQx+B,MAAM,mBAEhB++B,IAEc,IAAZA,GACFv3B,QAAQmE,MACN,uFA/PM,KAsQdqzB,oBAAsB,SAAApmB,GACpB,IAAMqmB,EAAgB,IAAI/W,GAC1B+W,EAAcj9B,GAAG4W,EAAKoC,sBACtBikB,EAAc3K,YAAY1b,EAAK9C,eAC/BmpB,EAAczX,gBACZ,EAAKA,gBAAgBiE,sBAAsB7S,EAAKf,aAElDonB,EAAczM,iBAAmB5Z,EACjCqmB,EAAcjX,UAAU,EAAKA,WAE7B,EAAKjP,MAAMzM,KAAK2yB,GAChB,EAAKpmB,QAAQomB,EAAcj9B,MAAQi9B,GAjRvB,KAoRdC,oBAAsB,SAAAnnB,GACpB,IAAMonB,EAAgB,IAAI/U,GAwB1B,GAvBA+U,EAAcn9B,GAAG+V,EAAKiD,sBACtBmkB,EAAc7K,YAAYvc,EAAKjC,eAEP,cAApBiC,EAAKgD,WACPokB,EAAc3X,gBACZ,EAAKA,gBAAgBoE,sBAAsB7T,EAAKgD,aAGlDokB,EAAc3X,gBACZ,EAAKA,gBAAgBoE,sBAAsB7T,EAAKkD,cAIpDkkB,EAAcnX,UAAU,EAAKA,WAG7BmX,EAAcC,cACZ,EAAKvmB,QAAQd,EAAKjB,SAASkE,uBAE7BmkB,EAAcE,cACZ,EAAKxmB,QAAQd,EAAKhB,SAASiE,uBAI3B,EAAKnC,QAAQd,EAAKjB,SAASkE,wBAC3B,EAAKnC,QAAQd,EAAKhB,SAASiE,sBAC3B,CACAmkB,EAAchU,gBAAgB,QAC9B,IAAM1lB,EAAO,EAAKoT,QAAQd,EAAKjB,SAASkE,sBACxCvV,EAAKopB,cAAcppB,EAAKopB,gBAAkB,GAE5C,EAAK3V,MAAM5M,KAAK6yB,GAChB,EAAKlmB,QAAQkmB,EAAcn9B,MAAQm9B,GAtTvB,KAyTdG,qBAAuB,SAAAvnB,GACrB,GAA4B,SAAxBA,EAAK0S,eAAT,CAGA,IAAMhc,EAAMsJ,EAAKwS,WACXpR,EAAMpB,EAAKyS,WAIb+U,GAAc,EAClB9wB,EAAI2Z,cAAc1Z,SAAQ,SAAA8wB,GACG,SAAvBA,EAAI/U,gBAA6B+U,EAAIx9B,OAAS+V,EAAK/V,MAGnDw9B,EAAIhV,WAAWxoB,OAASmX,EAAInX,OAC9Bu9B,GAAc,MAIlBpmB,EAAIiP,cAAc1Z,SAAQ,SAAA8wB,GACG,SAAvBA,EAAI/U,gBAA6B+U,EAAIx9B,OAAS+V,EAAK/V,MAGnDw9B,EAAIhV,WAAWxoB,OAASyM,EAAIzM,OAC9Bu9B,GAAc,MAGdA,GACFxnB,EAAKoT,gBAAgB,cAIiC,IAApDpT,EAAKyP,kBAAkBkD,QAAQiD,kBACjC5V,EAAKoT,gBAAgB,gBA1VX,KA8VdsU,0BAA4B,WAC1B,EAAKC,mCACL,EAAKC,oCAhWO,KAiXdC,wBAA0B,WAGxB,EAAKF,mCACL,EAAKC,mCAGD,EAAK/B,mBACP,EAAKA,mBAAmBiC,kBAAkB,GAE1Cr4B,QAAQC,IAAI,yDAGV,EAAKq4B,eACP,EAAKA,cAAcC,yBACnB,EAAKD,cAAc7I,eAEnBzvB,QAAQC,IAAI,qDAlYF,KAsYdk4B,iCAAmC,WACjC,IAAMK,EAAgBtW,UAAU,IAAM,EAAK2T,QAAU,UAC/CvS,EAAoBpB,UAAU,IAAM,EAAK2T,QAAU,eACnDtS,EAAiBrB,UAAU,IAAM,EAAK2T,QAAU,WAEtD,EAAKjG,cAAgB,EAAK6I,0BACxBD,EACA,EAAK9mB,MACL,YAIF,EAAKke,cAActN,MAAK,SAASrkB,GAC3BA,EAAKsiB,UACPtiB,EAAKijB,OAAOgB,UAAU3kB,MAAO+lB,EAAmBC,GAEhDrB,UAAU3kB,MAAMmlB,aAtZR,KA2ZdwV,iCAAmC,WACjC,IAAMQ,EAAgBxW,UAAU,IAAM,EAAK2T,QAAU,UACrD,EAAKlG,cAAgB,EAAK8I,0BACxBC,EACA,EAAKnnB,MACL,YAIF,EAAKoe,cAAcrN,MAAK,SAASrkB,GAC3BA,EAAKsiB,UACPtiB,EAAKijB,OAAOgB,UAAU3kB,OAEtB2kB,UAAU3kB,MAAMmlB,aAvapBnlB,KAAKo7B,WAAa,0BAElBp7B,KAAKgM,MAAQ,KACbhM,KAAK+6B,cAAgB,KACrB/6B,KAAKyiB,gBAAkB,KACvBziB,KAAK64B,mBAAqB,KAC1B74B,KAAKijB,UAAY,KAEjBjjB,KAAKgU,MAAQ,GACbhU,KAAKmU,MAAQ,GAEbnU,KAAK8T,QAAU,GACf9T,KAAKkU,QAAU,GAEflU,KAAKs4B,QAAU,KACft4B,KAAK2zB,QAAU,KACf3zB,KAAK00B,UAAY,KAGjB10B,KAAK85B,YAAc,CAAC,SAAU,QAAS,aAAc,SAErD95B,KAAKyb,aAAe,U,sEAoFfzb,KAAKgM,OACRvJ,QAAQmE,MAAM,mBAEX5G,KAAKyiB,kBAERhgB,QAAQw1B,KACN,wEAEFj4B,KAAKyiB,gBAAkB,IAAIgE,IAExBzmB,KAAKijB,YAERxgB,QAAQw1B,KACN,kEAEFj4B,KAAKijB,UAAY,IAAIuJ,GAAUxsB,OAG5BA,KAAK+6B,gBAERt4B,QAAQw1B,KACN,2FAEFj4B,KAAK+6B,cAAgB,IAAIjJ,GAAY9xB,S,gDA4SfmwB,EAAWptB,EAAMs4B,GACzC,OAAOlL,EACJjL,UAAU,IAAMmW,GAChBt4B,KAAKA,GACLu4B,QACAlO,OAAO,KACPmO,QAAQF,GAAW,GACnB3X,KAAK,MAAM,SAASrZ,GACnB,OAAOA,EAAEpN,Y,KC9bIu+B,G,kDACnB,aAAe,IAAD,8BACZ,gBACKJ,WAAa,sBAElB,EAAKL,cAAgB,KACrB,EAAKtY,gBAAkB,KACvB,EAAKoW,mBAAqB,IAAIjB,GANlB,E,sEAWa,IAAD,OACxB,kFAEA53B,KAAKgM,MAAMgI,MAAMrK,SAAQ,SAAAkK,GACvB,EAAKomB,oBAAoBpmB,MAK3B7T,KAAKgU,MAAM,GAAGsP,YAAY,GAAI,KAC9BtjB,KAAKgU,MAAM,GAAGsP,YAAY,IAAK,KAE/BtjB,KAAKgM,MAAMmI,MAAMxK,SAAQ,SAAAqJ,GACvB,EAAKmnB,oBAAoBnnB,MAG3B,IAAIvK,EAAI,EACRzI,KAAKmU,MAAMxK,SAAQ,SAAAqJ,GACjB,EAAKunB,qBAAqBvnB,GAC1BA,EAAKsQ,YAAY,IAAS,GAAJ7a,GACtBA,W,GAhCoCyvB,ICArBrE,GACnB,WAAY1X,GAAQ,IAAD,gCAWnB2X,gBAAkB,SAAA5qB,GAChB,EAAK6qB,YAAc7qB,GAZF,KAcnB8qB,gBAAkB,SAAA9qB,GAChB,EAAK+qB,YAAc/qB,GAfF,KAkBnBgrB,uBAAyB,SAAA8D,GACvB,GAAIA,EACFv1B,QAAQC,IAAI,0BAA2B,+BAGzC,GAAK,EAAKyxB,YAAV,CAKA,IAAM3X,EAAO,EAGb,EAAK4X,KAAOzP,YACTyP,OACAz4B,SAAS,KACT04B,YAAY,CAAC,IAAM,IACnBjB,GAAG,OAAQ,EAAKkB,QAChBlB,GAAG,aAAa,WAEbzO,SAAS4P,aACT5P,SAAS4P,YAAYC,SACY,IAAjC7P,SAAS4P,YAAYC,SAErBhY,EAAK2X,YAAYR,QAAQ14B,MAAM,SAAU,iBAG5Cm4B,GAAG,WAAW,WACb5W,EAAK2X,YAAYR,QAAQ14B,MAAM,SAAU,WAG7C,EAAKk5B,YAAYR,QAAQc,KAAK,EAAKL,MACnC,EAAKA,KAAO,EAAKA,KAAKC,YAAY,CAAC,IAAM,IACrC,EAAKF,YAAYO,WACnB,EAAKN,KAAKO,MAAM,EAAKR,YAAYO,gBA5BjCjyB,QAAQmE,MAAM,0BAxBC,KAwDnBguB,gBAAkB,WAChBnyB,QAAQC,IAAI,qDACZD,QAAQC,IAAI,EAAKmyB,YACjBpyB,QAAQC,IAAI,EAAKoyB,kBACH,EAAKX,YACUO,UACdhR,KACb,YACA,aAAe,EAAKoR,iBAAmB,UAAY,EAAKD,WAAa,MAhEtD,KAoEnBP,OAAS,WAwEH3P,SAAS4P,cACX5P,SAAS4P,YAAYQ,iBACrBpQ,SAAS4P,YAAYS,mBAGvB,IAAMxY,EAAO,EAEPyY,EADQ,EAAKd,YACUO,UACzBQ,GAAoB,EAMxB,GALIvQ,SAAS4P,aACP5P,SAAS4P,YAAYY,SACvBD,GAAoB,IAGE,IAAtBA,EAA6B,CAC/B,IAAgC,IAA5B,EAAKE,mBACP,OAWF,OANA,EAAKP,WAAalQ,SAASyH,MAC3B,EAAK0I,iBAAmBnQ,SAASC,eACjCqQ,EAAevR,KACb,YACA,aAAe,EAAKoR,iBAAmB,UAAY,EAAKD,WAAa,KAKzE,EAAKA,WAAalQ,SAASyH,MAC3B,EAAK0I,iBAAmBnQ,SAASC,UACjCqQ,EACGzQ,aACAC,MAAM,kBAAkB,WACvB,OAAO,WAELjI,EAAK4Y,oBAAqB,EAC1B,IAAM1Q,EAAKC,aAAasQ,EAAevR,KAAK,cAC5ClH,EAAKsY,iBAAiB,GAAKpQ,EAAGE,UAAU,GACxCpI,EAAKsY,iBAAiB,GAAKpQ,EAAGE,UAAU,GACxCpI,EAAKqY,WAAanQ,EAAG0H,MAAM,OAG9BrH,KAAK,OAAO,WACXvI,EAAK4Y,oBAAqB,KAE3B1R,KACC,YACA,aAAelH,EAAKsY,iBAAmB,UAAYtY,EAAKqY,WAAa,KAEtEQ,KAAK,UACL15B,SAAS,MA/LZqE,KAAKm0B,YAAchY,EACnBnc,KAAKo0B,UAAOz0B,EACZK,KAAK80B,iBAAmB,CAAC,EAAG,GAC5B90B,KAAK60B,WAAa,EAClB70B,KAAKo1B,oBAAqB,EAE1Bp1B,KAAK+zB,aAAc,EACnB/zB,KAAKi0B,aAAc,GCTFqB,I,iBACnB,WAAYnZ,GAAQ,IAAD,gCASnBwa,gBAAkB,SAAAztB,GAChB,EAAK4sB,aAAe5sB,GAVH,KAYnB4tB,oBAAsB,SAAA5tB,GACpB,EAAKgtB,aAAehtB,GAbH,KAenB6tB,0BAA4B,SAAA7tB,GAC1B,EAAKmtB,kBAAoBntB,GAhBR,KAkBnB8tB,eAAiB,SAAA9tB,GACf,EAAK+tB,mBAAqB/tB,GAnBT,KAsBnBqsB,sBAAwB,WACtB,GAAK,EAAKpB,YAAV,CAOA,EAAKqB,cAAgB7Q,YAClB8Q,OACAC,QAAO,SAASrrB,GACf,OAAOA,KAER+oB,GAAG,YAAa,EAAKuC,WACrBvC,GAAG,OAAQ,EAAKqC,MAChBrC,GAAG,UAAW,EAAKwC,SAGtB,IAAMpZ,EAAO,EACb,EAAKqZ,eAAiB,SAASxrB,GACzBmS,EAAKsZ,eACPzrB,EAAE+oB,GAAG,YAAa5W,EAAKuZ,aACvB1rB,EAAE+oB,GAAG,WAAY5W,EAAKwZ,gBAK1B,EAAKC,eAAiB,SAAS5rB,GACzBmS,EAAK0Z,cACP7rB,EAAE+oB,GAAG,QAAS5W,EAAK2Z,YAGvB,EAAKC,oBAAsB,SAAS/rB,GAC9BmS,EAAK6Z,mBACPhsB,EAAE+oB,GAAG,QAAS5W,EAAK8Z,kBAKvB,IAAMtiB,EAAQ,EAAKmgB,YAAYngB,MAC3BA,EAAMxL,OAAS,GACjBwL,EAAMrK,SAAQ,SAAAiL,GACRA,EAAEmO,YACJnO,EAAEmO,UAAU0R,KAAK,EAAKe,eACtB5gB,EAAEmO,UAAU0R,KAAK,EAAKoB,gBACtBjhB,EAAEmO,UAAU0R,KAAK,EAAKwB,gBACtBrhB,EAAEmO,UAAU0R,KAAK,EAAK2B,qBAEtB,EAAKqF,wBAAwB7mB,YA9CjCnS,QAAQmE,MAAM,0BAxBC,KAgFnB80B,4BAA8B,SAAA7nB,GAC5BA,EAAK8nB,WAAWJ,QAAQ,+BAA+B,IAjFtC,KAmFnBK,6BAA+B,SAAA/nB,GAC7BA,EAAK8nB,WAAWJ,QAAQ,+BAA+B,IApFtC,KAuFnBE,wBAA0B,SAAApxB,GAExB,IAAMmS,EAAO,EACTnS,EAAEwxB,sBACJxxB,EAAEwxB,qBAAqB1W,SAGzB,IAAM2W,EAAU7R,KAAK+B,KAAK,MAE1B3hB,EAAEwxB,qBAAuBxxB,EAAE0Y,UAAUqK,OAAO,KAC5C/iB,EAAEsxB,WAAatxB,EAAEwxB,qBAAqBzO,OAAO,UAuB7C,OArBA/iB,EAAEsxB,WAAWjY,KAAK,IADH,IAEfrZ,EAAEsxB,WAAWjY,KAAK,KAAMoY,GACxBzxB,EAAEsxB,WAAWjY,KAAK,MAAOoY,GACzBzxB,EAAEsxB,WAAWJ,QAAQ,wBAAwB,GAE7ClxB,EAAEwxB,qBAAqBzI,GAAG,aAAa,WACrC5W,EAAKkf,4BAA4BrxB,MAEnCA,EAAEwxB,qBAAqBzI,GAAG,YAAY,WACpC5W,EAAKof,6BAA6BvxB,MAO/BA,EAAEnG,SAAiE,IAAvDmG,EAAEojB,iBAAiB3a,WAAWzJ,QAAQ,cACrDgB,EAAEnG,OAAS,WAILmG,EAAEnG,QACR,IAAK,UACHmG,EAAEwxB,qBAAqBzO,OAAO,SAASJ,KAAK,mBAE5C,IAAMrwB,EAAO0N,EAAEwxB,qBAAqBzO,OAAO,QAC3CzwB,EAAK+mB,KAAK,KAAM,cAChB/mB,EAAK1B,MAAM,OAAQ,QACnB0B,EAAK1B,MAAM,eAAgB,KAC3B0B,EAAK+mB,KACH,IACA,8OAEF/mB,EAAK+mB,KAAK,YAAa,qBAEvBrZ,EAAEwxB,qBAAqBzI,GAAG,SAAS,SAAShV,GAC1C3b,QAAQC,IAAI,8CACZD,QAAQC,IAAI0b,GACZ5B,EAAK2X,YAAY4H,kBAAkB3d,GACnC3b,QAAQC,IAAI,+BAGd,MACF,IAAK,YACH2H,EAAEwxB,qBAAqBzO,OAAO,SAASJ,KAAK,eAC5C3iB,EAAEwxB,qBACCzO,OAAO,WACP1J,KAAK,SAAU,4CACfA,KAAK,YAAa,qBACrBrZ,EAAEwxB,qBACCzO,OAAO,WACP1J,KAAK,SAAU,uCACfA,KAAK,YAAa,qBAErBrZ,EAAEwxB,qBAAqBzI,GAAG,SAAS,SAAShV,GAE1C3b,QAAQC,IAAI0b,GACZ3b,QAAQC,IAAI,+BAEd,MACF,IAAK,WACH2H,EAAEwxB,qBAAqBzO,OAAO,SAASJ,KAAK,iBAE5C3iB,EAAEwxB,qBACCzO,OAAO,WACP1J,KAAK,SAAU,4CACfA,KAAK,YAAa,kCACrBrZ,EAAEwxB,qBACCzO,OAAO,WACP1J,KAAK,SAAU,uCACfA,KAAK,YAAa,kCAErBrZ,EAAEwxB,qBAAqBzI,GAAG,SAAS,WACjC3wB,QAAQC,IAAI,6BAEd,MACF,QACED,QAAQC,IAAI,oCACZ2H,EAAEwxB,qBAAqBN,QAAQ,UAAU,KAjL5B,KA2MnB5F,UAAY,SAAAtrB,GACN,EAAK4sB,qBACPtS,SAAS4P,YAAYS,kBACrB3qB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,aA/Mb,KAmNnBw6B,KAAO,SAAAprB,GACD,EAAK4sB,qBACPtS,SAAS4P,YAAYS,kBACrB3qB,EAAEiZ,YAAYqB,SAASpB,EAAGoB,SAASnB,GACnCnZ,EAAEwa,GAAKF,SAASpB,EAChBlZ,EAAEya,GAAKH,SAASnB,EAChBnZ,EAAEoZ,0BAEEpZ,EAAEuoB,wBAA0BvoB,EAAEuoB,uBAAuBL,OACvDloB,EAAEuoB,uBAAuBV,gBA5NZ,KAiOnB0D,QAAU,SAAAvrB,GACJ,EAAK4sB,qBACP5sB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,QACxBoP,EAAEuoB,wBAA0BvoB,EAAEuoB,uBAAuBL,OACvDloB,EAAEuoB,uBAAuBV,gBArO7BlyB,KAAKm0B,YAAchY,EACnBnc,KAAKw1B,cAAgB,KACrBx1B,KAAKk2B,cAAe,EACpBl2B,KAAKq2B,mBAAoB,EACzBr2B,KAAK81B,cAAe,EACpBrzB,QAAQC,IAAI,mC,wDA+KF2H,GACIA,EAAEyZ,eACV7oB,MAAM,OAAQ,S,mCAGToP,GACGA,EAAEyZ,eACV7oB,MAAM,OAAQoP,EAAEoY,kBAAkBxnB,MAAM+rB,W,sCAGhC3c,GAGdsa,SAASqQ,kBACTrQ,SAASoQ,mB,gCAED1qB,Q,MCtMSqsB,G,WACnB,WAAYva,GAAQ,IAAD,gCASnBwa,gBAAkB,SAAAztB,GAChB,EAAK0tB,aAAe1tB,EACpB,EAAK2tB,iBAAmB3tB,GAXP,KAanB4tB,oBAAsB,SAAA5tB,GACpB,EAAKgtB,aAAehtB,GAdH,KAgBnB6tB,0BAA4B,SAAA7tB,GAC1B,EAAKmtB,kBAAoBntB,GAjBR,KAmBnB8tB,eAAiB,SAAA9tB,GACf,EAAK+tB,mBAAqB/tB,GApBT,KAuBnBguB,sBAAwB,WACtB,GAAK,EAAK/C,YAAV,CAMA,EAAKqB,cAAgB7Q,YAClB8Q,OACAC,QAAO,SAASrrB,GACf,OAAOA,KAER+oB,GAAG,YAAa,EAAKuC,WACrBvC,GAAG,OAAQ,EAAKqC,MAChBrC,GAAG,UAAW,EAAKwC,SAGtB,IAAMpZ,EAAO,EACb,EAAKqZ,eAAiB,SAASxrB,GACzBmS,EAAKoa,eACPvsB,EAAE+oB,GAAG,YAAa5W,EAAK2a,aACvB9sB,EAAE+oB,GAAG,WAAY5W,EAAK4a,gBAG1B,EAAKC,uBAAyB,SAAShtB,GACjCmS,EAAKqa,mBACPxsB,EAAE+oB,GAAG,YAAa5W,EAAK8a,iBACvBjtB,EAAE+oB,GAAG,WAAY5W,EAAK+a,oBAiB1B,IAAMpjB,EAAQ,EAAKggB,YAAYhgB,MAC3BA,EAAM3L,OAAS,GACjB2L,EAAMxK,SAAQ,SAAAoL,GACZ,GAAIA,EAAEgO,YACJhO,EAAEgO,UAAU0R,KAAK,EAAKoB,gBAElB9gB,EAAE+O,gBAAgB,CACpB,IAAMoN,EAAanc,EAAE+O,eAAejQ,OAAOqd,WAC3C,GAAIA,EAAY,CACd,IAAMsG,EAAY7S,UAAUuM,GACxBsG,IACFA,EAAU/C,KAAK,EAAK4C,wBACpBG,EAAU/C,KAAK,EAAKe,0BAtD9B/yB,QAAQmE,MAAM,0BAzBC,KAsGnB0wB,gBAAkB,SAAAjtB,GACFA,EAAEylB,IAAIhM,eACd7oB,MAAM,OAAQ,QAEG,IAAnBoP,EAAEotB,eAGNptB,EAAEotB,cAAe,EACjBptB,EAAEqtB,eAAgB,EAEdrtB,EAAEstB,mBACJttB,EAAEqtB,eAAgB,EAClBrtB,EAAEstB,kBAAmB,KAlHN,KAgKnBhC,UAAY,SAAAtrB,GACN,EAAK4sB,qBACPtS,SAAS4P,YAAYS,kBACrB3qB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,aApKb,KAwKnBw6B,KAAO,SAAAprB,GACD,EAAK4sB,qBACPtS,SAAS4P,YAAYS,kBACrB3qB,EAAEiZ,YAAYqB,SAASpB,EAAGoB,SAASnB,GACnCnZ,EAAEwa,GAAKF,SAASpB,EAChBlZ,EAAEya,GAAKH,SAASnB,EAChBnZ,EAAEylB,IAAIrM,0BACFpZ,EAAEuoB,wBAA0BvoB,EAAEuoB,uBAAuBL,OACvDloB,EAAEuoB,uBAAuBV,gBAhLZ,KAqLnB0D,QAAU,SAAAvrB,GACJ,EAAK4sB,qBACP5sB,EAAEksB,OAAQ,EACVlsB,EAAE0Y,UAAU9nB,MAAM,SAAU,UAvL9B+E,KAAKm0B,YAAchY,EACnBnc,KAAKw1B,cAAgB,KACrBx1B,KAAKk2B,cAAe,EACpBl2B,KAAKq2B,mBAAoB,EACzBr2B,KAAK42B,cAAe,EACpB52B,KAAK62B,kBAAmB,E,wDAsFdxsB,GACIA,EAAEib,cACVrqB,MAAM,SAAU,S,mCAGXoP,GACGA,EAAEib,cACVrqB,MAAM,SAAUoP,EAAEoY,kBAAkBxnB,MAAM+X,KAAKmV,a,uCA4CtC9d,GACDA,EAAEylB,IAAIhM,eACd7oB,MAAM,OAAQoP,EAAEylB,IAAIrN,kBAAkBxnB,MAAMutB,aAAaxB,SAClC,cAAzB3c,EAAEylB,IAAIpK,gBACRf,aAAa,yBAAyBQ,SAExC9a,EAAEotB,cAAe,I,sCAGHptB,M,gCAGNA,Q,KC1JSutB,G,WACnB,aAAe,oBACbn1B,QAAQC,IAAI,8CACZ1C,KAAK63B,kBAAoB,KACzB73B,KAAK83B,iBAAmB,KACxB93B,KAAK+3B,iBAAmB,K,mEAGH5b,GACrBnc,KAAK63B,kBAAoB,IAAIhE,GAAkB1X,GAC/Cnc,KAAK83B,iBAAmB,IAAIxC,GAAiBnZ,GAC7Cnc,KAAK+3B,iBAAmB,IAAIrB,GAAiBva,K,wCAG7BA,EAAO6b,GAElBh4B,KAAK63B,oBACRp1B,QAAQw1B,KACN,gEAEFj4B,KAAK63B,kBAAoB,IAAIhE,GAAkB1X,IAEjDnc,KAAK63B,kBAAkB3D,uBAAuB8D,GAGzCh4B,KAAK83B,mBACRr1B,QAAQw1B,KACN,+DAEFj4B,KAAK83B,iBAAmB,IAAIxC,GAAiBnZ,IAE/Cnc,KAAK83B,iBAAiBvC,sBAAsByC,GAGvCh4B,KAAK+3B,mBACRt1B,QAAQw1B,KACN,+DAEFj4B,KAAK+3B,iBAAmB,IAAIrB,GAAiBva,IAE/Cnc,KAAK+3B,iBAAiBb,sBAAsBc,O,KCrC3BwD,G,kDACnB,aAAe,IAAD,8BACZ,gBAiCFQ,uBAlCc,uCAkCW,WAAMC,GAAN,uBAAAz5B,EAAA,6DAGvB,EAAK05B,eAAejd,qBAAqBgd,EAAMh/B,IAC3C2f,EAAS,GAJU,SAKjB,EAAKsf,eAAe35B,UALH,cAMvBE,QAAQC,IAAI,iCACZD,QAAQC,IAAI,EAAKw5B,eAAe/5B,cAC1B0f,EAAS,IAAIxC,IACZhd,aAAa,EAAK65B,eAAe/5B,aACxC0f,EAAOtf,UACDif,EAAgBK,EAAO1f,YACvBg6B,EAAW,IAAIzsB,GACf0sB,EAAW,IAAIxd,GACrBud,EAAS95B,aAAamf,GACtB2a,EAAS55B,UACT65B,EAAS/5B,aAAa85B,EAASh6B,aAC/Bi6B,EAAS75B,UACTE,QAAQC,IAAI,uDACZD,QAAQC,IAAI05B,EAASj6B,YAAYiK,eAAejK,aAChDya,EAASwf,EAASj6B,YAAYiK,eAAejK,YAE7CM,QAAQC,IAAI,wCAAyCka,GAtB9B,kBAuBhBA,GAvBgB,4CAlCX,wDA4Ddyf,eA5Dc,uCA4DG,WAAMC,GAAN,eAAA95B,EAAA,+EAEU,EAAKw5B,uBAAuB,CAAE/+B,GAAIq/B,IAF5C,UAEPC,EAFO,OAGb95B,QAAQC,IAAI,0BAA2B65B,GACT,IAA1BA,EAASvoB,MAAMxL,QAAkC,IAAlB+zB,EAASvpB,KAJ/B,yCAKJ,IALI,cAQXvQ,QAAQC,IAAI,yCARD,kBASJ65B,GATI,mFAYN,IAZM,0DA5DH,sDAEZ,EAAKnB,WAAa,sBAElB,EAAKL,cAAgB,KACrB,EAAKtY,gBAAkB,KACvB,EAAKoW,mBAAqB,IAAIjB,GAC9B,EAAKiB,mBAAmB2D,uBAAxB,iBAEA,EAAKN,eAAiB,IAAIta,GATd,E,gEAaM/N,EAAM3K,GACxB,IAAY,IAARA,EAAc,CAChB,IAAMuzB,EAAiB5oB,EAAKkP,UAC5BlP,EAAK6oB,wBAA0BD,EAAerP,OAAO,QAErDvZ,EAAK6oB,wBAAwBhZ,KAAK,KADnB,IAEf7P,EAAK6oB,wBAAwBhZ,KAAK,KAFnB,IAGf7P,EAAK6oB,wBAAwBhZ,KAAK,QAAS,IAC3C7P,EAAK6oB,wBAAwBhZ,KAAK,SAAU,IAC5C7P,EAAK6oB,wBAAwBhZ,KAAK,KALnB,IAMf7P,EAAK6oB,wBAAwBhZ,KAAK,KANnB,IAQf7P,EAAK6oB,wBAAwBzhC,MAAM,eAAgB,OACnD4Y,EAAK6oB,wBAAwBnB,QAAQ,oBAAoB,QAErDv7B,KAAK08B,yBACP18B,KAAK08B,wBAAwBvX,W,qFA+CPtR,G,qIACpB8oB,EAAY9oB,EAAK+O,KACvB/O,EAAK+oB,qBAAsB,E,SACG58B,KAAKq8B,eAAeM,G,QAA5CE,E,QAEe7oB,OAKnBvR,QAAQC,IAAI,sCAGZm6B,EAAgB7oB,MAAMrK,SAAQ,SAAAkK,GACvB,EAAKC,QAAQD,EAAKoC,wBACrBxT,QAAQC,IAAI,cAAemR,GAC3B,EAAKomB,oBAAoBpmB,OAI7BgpB,EAAgB1oB,MAAMxK,SAAQ,SAAAqJ,GACvB,EAAKkB,QAAQlB,EAAKiD,uBAIrBjD,EAAKiD,sBAAwB,UAC7B,EAAKkkB,oBAAoBnnB,KAJzBvQ,QAAQC,IAAI,cAAesQ,GAC3B,EAAKmnB,oBAAoBnnB,OAO7Ba,EAAK3P,OAAS,aAxBdlE,KAAK88B,oBAAoBjpB,GAAM,GAC/BA,EAAK3P,OAAS,YA4BhBlE,KAAK+8B,kB,+IAiDWlpB,GAChBpR,QAAQC,IAAI,yCACZ1C,KAAK88B,oBAAoBjpB,GAAM,GAC/B7T,KAAKg9B,sBAAsBnpB,GAAM,K,wCAQjC7T,KAAK00B,UAAUxP,UAAU,QAAQC,SACjCnlB,KAAK00B,UAAUxP,UAAU,KAAKC,SAE9BnlB,KAAK25B,gBAELl3B,QAAQC,IAAI1C,KAAKqyB,eACjB5vB,QAAQC,IAAI1C,KAAKoyB,eACjBpyB,KAAKoyB,cAAgB,GACrBpyB,KAAKqyB,cAAgB,GACrB5vB,QAAQC,IAAI,8CACZ1C,KAAK06B,4BAED16B,KAAK64B,mBACP74B,KAAK64B,mBAAmBiC,kBAAkB96B,MAAM,GAEhDyC,QAAQC,IAAI,yDAGV1C,KAAK+6B,eACP/6B,KAAK+6B,cAAcC,yBACnBh7B,KAAK+6B,cAAc7I,eAEnBzvB,QAAQC,IAAI,sD,gDAIW,IAAD,OACxB,kFAEA1C,KAAKgM,MAAMgI,MAAMrK,SAAQ,SAAAkK,GACvB,EAAKomB,oBAAoBpmB,MAK3B7T,KAAKgU,MAAM,GAAGsP,YAAY,GAAI,KAC9BtjB,KAAKgU,MAAM,GAAGsP,YAAY,IAAK,KAE/BtjB,KAAKgM,MAAMmI,MAAMxK,SAAQ,SAAAqJ,GACvB,EAAKmnB,oBAAoBnnB,MAG3B,IAAIvK,EAAI,EACRzI,KAAKmU,MAAMxK,SAAQ,SAAAqJ,GACjB,EAAKunB,qBAAqBvnB,GAC1BA,EAAKsQ,YAAY,IAAS,GAAJ7a,GACtBA,W,GA1NoCyvB,ICPrBzR,GACnB,aAAe,IAAD,gCAkGdC,sBAAwB,SAAA5oB,GACtB,OAAK,EAAK6oB,sBAAsB3S,MAAMvK,eAAe3L,GAI9C,EAAK6oB,sBAAsB3S,MAAMlW,GAF/B,EAAK8oB,gBArGF,KA0GdC,sBAAwB,SAAA/oB,GACtB,OAAK,EAAK6oB,sBAAsBxS,MAAM1K,eAAe3L,GAI9C,EAAK6oB,sBAAsBxS,MAAMrW,GAF/B,EAAKgpB,gBA5Gd9mB,KAAK2mB,sBAAwB,CAC3B3S,MAAO,GACPG,MAAO,IAGTnU,KAAK4mB,eAAiB,CACpB3rB,MAAO,CACL8rB,cAAe,SACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInBhoB,KAAK8mB,eAAiB,CACpB7rB,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbC,UAAW,CACTxB,cAAe,UACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,OACfC,YAAa,MACbC,YAAa,QACbC,YAAa,UACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,UC/FPqX,GACnB,aAAe,IAAD,gCAwcdvW,sBAAwB,SAAA5oB,GACtB,OAAK,EAAK6oB,sBAAsB3S,MAAMvK,eAAe3L,GAI9C,EAAK6oB,sBAAsB3S,MAAMlW,IAHtC2E,QAAQC,IAAI,+BAAiC5E,GACtC,EAAK8oB,iBA3cF,KAgddC,sBAAwB,SAAA/oB,GACtB,OAAK,EAAK6oB,sBAAsBxS,MAAM1K,eAAe3L,GAK9C,EAAK6oB,sBAAsBxS,MAAMrW,IAJtC2E,QAAQC,IAAI,+BAAiC5E,GAEtC,EAAKgpB,iBAndd9mB,KAAK2mB,sBAAwB,CAC3B3S,MAAO,CACL,YAAa,CACX/Y,MAAO,CACL8rB,cAAe,SACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,SACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInB,YAAa,CACX/sB,MAAO,CACL8rB,cAAe,SACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInB,sBAAuB,CACrB/sB,MAAO,CACL8rB,cAAe,SACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,SACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,GACRkhC,eAAe,GAEjB5V,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInB,eAAgB,CACd/sB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,SACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,GACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInBmV,QAAS,CACPliC,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,SACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,GACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrB7T,MAAO,CACL,uBAAwB,CACtBlZ,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,SAIxB,kBAAmB,CACjB3qB,MAAO,CACL+X,KAAM,CACJiV,UAAW,SACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,SAIxB,sBAAuB,CACrB3qB,MAAO,CACL+X,KAAM,CACJiV,UAAW,SACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,SAIxB,qBAAsB,CACpB3qB,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,YAM5B5lB,KAAK4mB,eAAiB,CACpB3rB,MAAO,CACL8rB,cAAe,SACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInBhoB,KAAK8mB,eAAiB,CACpB7rB,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbC,UAAW,CACTxB,cAAe,UACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,OACfC,YAAa,MACbC,YAAa,SACbE,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,UCrcPa,GACnB,aAAe,IAAD,gCAuNdC,sBAAwB,SAAA5oB,GACtB,OAAK,EAAK6oB,sBAAsB3S,MAAMvK,eAAe3L,GAI9C,EAAK6oB,sBAAsB3S,MAAMlW,IAHtC2E,QAAQC,IAAI,+BAAiC5E,GACtC,EAAK8oB,iBA1NF,KA+NdC,sBAAwB,SAAA/oB,GACtB,OAAK,EAAK6oB,sBAAsBxS,MAAM1K,eAAe3L,GAI9C,EAAK6oB,sBAAsBxS,MAAMrW,IAHtC2E,QAAQC,IAAI,+BAAiC5E,GACtC,EAAKgpB,iBAjOd9mB,KAAK2mB,sBAAwB,CAC3B3S,MAAO,CACLopB,yBAA0B,CACxBniC,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,GACRysB,cAAe,UAEjBnB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInBqV,uBAAwB,CACtBpiC,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,GACRysB,cAAe,UAEjBnB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrB7T,MAAO,CACLmpB,QAAS,CACPriC,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UAET0B,4BAA6B,OAC7BC,gBAAiB,IACjB1B,eAAe,EACfC,YAAa,MACbC,YAAa,SACbE,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,GACRysB,cAAe,UAEjBnB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,WAM5B5lB,KAAK4mB,eAAiB,CACpB3rB,MAAO,CACL8rB,cAAe,UACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInBhoB,KAAK8mB,eAAiB,CACpB7rB,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbC,UAAW,CACTxB,cAAe,UACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,OACfC,YAAa,MACbC,YAAa,QACbC,YAAa,UACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,UCpNP2X,GACnB,aAAe,IAAD,gCAsQd7W,sBAAwB,SAAA5oB,GACtB,OAAK,EAAK6oB,sBAAsB3S,MAAMvK,eAAe3L,GAI9C,EAAK6oB,sBAAsB3S,MAAMlW,IAHtC2E,QAAQC,IAAI,+BAAiC5E,GACtC,EAAK8oB,iBAzQF,KA8QdC,sBAAwB,SAAA/oB,GACtB,OAAK,EAAK6oB,sBAAsBxS,MAAM1K,eAAe3L,GAI9C,EAAK6oB,sBAAsBxS,MAAMrW,IAHtC2E,QAAQC,IAAI,+BAAiC5E,GACtC,EAAKgpB,iBAhRd9mB,KAAK2mB,sBAAwB,CAC3B3S,MAAO,CACL,eAAgB,CACd/Y,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,SACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,GACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAGnBmV,QAAS,CACPliC,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,SACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,GACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrB7T,MAAO,CACL,uBAAwB,CACtBlZ,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,SAIxB,qBAAsB,CACpB3qB,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,WAM5B5lB,KAAK4mB,eAAiB,CACpB3rB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,GACRysB,cAAe,SAEjBnB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInBhoB,KAAK8mB,eAAiB,CACpB7rB,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbC,UAAW,CACTxB,cAAe,UACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAEbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,OACfC,YAAa,MACbC,YAAa,QACbC,YAAa,UACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,UCnQPa,GACnB,aAAe,IAAD,gCAuMdC,sBAAwB,SAAA5oB,GACtB,OAAK,EAAK6oB,sBAAsB3S,MAAMvK,eAAe3L,GAI9C,EAAK6oB,sBAAsB3S,MAAMlW,GAF/B,EAAK8oB,gBA1MF,KA+MdC,sBAAwB,SAAA/oB,GACtB,OAAK,EAAK6oB,sBAAsBxS,MAAM1K,eAAe3L,GAI9C,EAAK6oB,sBAAsBxS,MAAMrW,GAF/B,EAAKgpB,gBAjNd9mB,KAAK2mB,sBAAwB,CAC3B3S,MAAO,CACLjM,SAAU,CACR9M,MAAO,CACL8rB,cAAe,SACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAGnBmV,QAAS,CACPliC,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,SACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,GACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,OACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBc,6BAA6B,EAC7BZ,gBAAiB,GACjBC,cAAe,SACfC,cAAe,YAIrB7T,MAAO,CACL,uBAAwB,CACtBlZ,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,GACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,WAM5B5lB,KAAK4mB,eAAiB,CACpB3rB,MAAO,CACL8rB,cAAe,SACfC,QAAS,UACTC,eAAe,EACfC,YAAa,MACbC,YAAa,QACbC,YAAa,OACbC,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAGZ8oB,QAAS,CACP8B,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,WAInBhoB,KAAK8mB,eAAiB,CACpB7rB,MAAO,CACL+X,KAAM,CACJiV,UAAW,QACXC,UAAW,MACXC,UAAW,WAEbC,UAAW,CACTrB,cAAe,WACfsB,YAAa,EACbnB,YAAa,MACbC,YAAa,QACbC,YAAa,UACbkB,UAAW,WAGbE,aAAc,CACZvtB,MAAO,CACL8rB,cAAe,OACfC,QAAS,UACTyB,cAAe,MACfC,4BAA6B,OAC7BC,gBAAiB,IACjB1B,cAAe,QACfI,OAAQ,GACRnsB,MAAO,IACPc,OAAQ,IAEVsrB,UAAW,CACTC,WAAY,6BACZC,UAAW,UACX3qB,SAAU,QAEZ8oB,QAAS,CACP8B,iBAAiB,EACjBE,cAAc,EACdC,wBAAwB,EACxBC,qBAAqB,EACrBC,gBAAiB,EACjBC,cAAe,SACfC,cAAe,YAIrBrC,QAAS,CACPiD,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACflD,mBAAoB,UC1KtB4X,G,kDACJ,WAAYnjC,GAAQ,IAAD,8BACjB,cAAMA,IAOR8D,mBAAqB,SAACC,EAAWC,GAU/B,GARE,EAAKhE,MAAM2G,MAAMwe,6BACfphB,EAAU4C,MAAMwe,6BAC6B,IAA/CphB,EAAU4C,MAAMwe,4BAGhB,EAAKie,gBAAgBpE,4BAIrB,EAAKh/B,MAAM2G,MAAMwe,6BACfphB,EAAU4C,MAAMwe,6BAC8B,IAAhD,EAAKnlB,MAAM2G,MAAMwe,2BACjB,CAEA,IAAIie,EAAkB,IAAIjC,GAEtB/Y,EAAkB,IAAIib,GAGoC,SAA1D,EAAKrjC,MAAM2G,MAAM28B,sBAAsBxiB,iBACzCsH,EAAkB,IAAIwa,IAEsC,QAA1D,EAAK5iC,MAAM2G,MAAM28B,sBAAsBxiB,iBACzC1Y,QAAQC,IAAI,yCACZ+f,EAAkB,IAAImb,IAEsC,QAA1D,EAAKvjC,MAAM2G,MAAM28B,sBAAsBxiB,iBACzC1Y,QAAQC,IAAI,yCACZ+f,EAAkB,IAAIob,IAEsC,SAA1D,EAAKxjC,MAAM2G,MAAM28B,sBAAsBxiB,iBACzCsiB,EAAkB,IAAIK,GACtBr7B,QAAQC,IAAI,mCACZ+f,EAAkB,IAAIsb,IAGxBN,EAAgB/E,mBAAmBjW,GAInC,IAAIub,EAAM,IAAIn4B,GACVgc,EAAS,IAAIlX,GACXwxB,EAAW,IAAIzsB,GACjB0sB,EAAW,IAAIxd,GAGyB,YAAxC,EAAKvkB,MAAM2G,MAAMhD,qBACnBggC,EAAM,IAAIlgB,GACV+D,EAAS,IAAIxU,IAE6B,aAAxC,EAAKhT,MAAM2G,MAAMhD,qBACnBggC,EAAM,IAAI3f,GACVwD,EAAS,IAAIhD,IAE6B,SAAxC,EAAKxkB,MAAM2G,MAAMhD,qBACnBggC,EAAM,IAAIpc,GACVC,EAAS,IAAIxC,IAIiC,SAA5C,EAAKhlB,MAAM2G,MAAM7B,yBACnBi9B,EAAW,IAAI3b,IAE+B,QAA5C,EAAKpmB,MAAM2G,MAAM7B,yBACnBi9B,EAAW,IAAIzb,IAE+B,QAA5C,EAAKtmB,MAAM2G,MAAM7B,yBACnBi9B,EAAW,IAAIvb,IAGjBmd,EAAIz7B,UAAUsB,MAAK,WACjBpB,QAAQC,IAAI,iBAAkBs7B,EAAI77B,aAClC0f,EAAOxf,aAAa27B,EAAI77B,aACxB0f,EAAOtf,UACP,IAAMif,EAAgBK,EAAO1f,YAC7BM,QAAQC,IAAI8e,GACZ2a,EAAS95B,aAAamf,GACtB2a,EAAS55B,UAAUsB,MAAK,WACtBu4B,EAAS/5B,aAAa85B,EAASh6B,aAC/Bi6B,EAAS75B,UAAUsB,MAAK,WACtBpB,QAAQC,IAAI,8BACZD,QAAQC,IAAI05B,EAASj6B,YAAYiK,eAAejK,aAChDs7B,EAAgBrF,sBAAsB,4BACtCqF,EAAgB3E,2BACd,EAAKz+B,MAAM2G,MAAM28B,uBAEnBF,EAAgBhF,SACd2D,EAASj6B,YAAYiK,eAAejK,aAGtCs7B,EAAgBrE,+BAChBqE,EAAgBQ,0BAChBR,EAAgB5C,0BAChB,EAAK4C,gBAAkBA,aArG/B,EAAKn/B,MAAQ,GACb,EAAKm/B,gBAAkB,OAHN,E,kGA+GjB,OACE,yBAAKxiC,MAAO,CAAEC,MAAO,SACnB,yBAEED,MAAO,CACLgB,aAAc,OACdmE,YAAa,MACbhE,YAAa,mBACbiE,YAAa,QACbjD,wBAAyB,IACzBD,uBAAwB,IACxBnB,OAAQ,OACRd,MAAO,OAEPC,MAAO,QACPC,gBAAiB,YAGnB,yBAAKH,MAAO,CAAEC,MAAO,OAAQoF,UAAW,OAAQpE,QAAS,QACtD8D,KAAK3F,MAAMS,QAIhB,yBACEY,UAAU,mDACVT,MAAO,CACLgB,aAAc,OACdmE,YAAa,MACbhE,YAAa,mBACbiE,YAAa,QACb/E,qBAAsB,IACtBD,oBAAqB,IACrBF,MAAO,QACPC,gBAAiB,UACjBkC,UAAW,OACXd,SAAU,WAEVtB,MAAO,SAGT,yBACE+B,GAAG,2BACHhC,MAAO,CACLe,OAAQgE,KAAK3F,MAAM2G,MAAMwe,2BACrB,QACA,OACJtkB,MAAO,gB,GA9Jc4F,aAyLpBC,gBAbS,SAAAzC,GACtB,MAAO,CACL0C,MAAO1C,EAAM0C,UAIU,SAAAnD,GAEzB,MAAO,CACLF,iBAAkB,SAAAI,GAAO,OAAIF,EAASF,EAAiBI,QAI5CgD,CAGby8B,I,sfChNF,IAkCMt9B,GAAmBlG,IAAOC,IAAV,MAlCkB,SAAC,GAOlC,IANLikC,EAMI,EANJA,aACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,UAEI,EADJC,WAKA,QAFkCL,IAAiBC,GAG1C/jC,YAAP,KAEQ8jC,EAAe,EAAII,EACnBD,EAGCD,EACDF,EAAeI,EAAY,GAI5BlkC,YAAP,KAEQikC,EAGCD,MAUD,SAAA/jC,GAAK,OAAIA,EAAM+jC,YACf,SAAA/jC,GAAK,OAAKA,EAAM6jC,aAAe7jC,EAAMikC,UAAY,KAGxCE,G,kDACnB,WAAYnkC,GAAQ,IAAD,8BACjB,cAAMA,IAaR8D,mBAAqB,SAACC,EAAWC,KAZ/B,EAAKC,MAAQ,CACXpE,UAAU,EACVukC,SAAU,IAEV3jC,MAAOT,EAAMS,MACbX,kBAAkB,EAClBukC,gBAAgB,GARD,E,kJAuBjB,OACE,kBAAC,GAAD,CACEzhC,GAAG,aACHihC,aAAcl+B,KAAK3F,MAAMskC,oBACzBC,cAAe5+B,KAAK3F,MAAMwkC,qBAC1BR,SAAUr+B,KAAK3F,MAAMgkC,SACrBD,SAAUp+B,KAAK3F,MAAM+jC,SACrBE,UAAWt+B,KAAK3F,MAAMykC,iBACtBP,WAAYv+B,KAAK3F,MAAM0kC,kBACvBZ,gBAAiBn+B,KAAK3F,MAAM2kC,oBAC5B7kC,iBAAkB6F,KAAK1B,MAAMnE,iBAC7Bc,MAAO,CACLe,OAAQ,OACRd,MAAOwD,OAAOugC,WAAa,IAC3BC,KAAM,UAGR,yBACEjkC,MAAO,CACLC,MAAO,MACPc,OAAQ,OAERQ,SAAU,WACV0iC,KAAM,QAIR,kBAAC,GAAD,CAAapkC,MAAM,2BAVrB,IAUiD,6BAC/C,kBAAC,GAAD,CACEG,MAAO,CAAEqC,UAAW,QACpBxC,MAAM,gC,GAtDsBgG,aC2HzBq+B,G,kDAlKb,WAAY9kC,GAAQ,IAAD,8BACjB,cAAMA,IAoBR8D,mBAAqB,SAACC,EAAWC,GAC/B,EAAK+gC,wBAtBY,EA6CnBC,uBAAyB,SAAAnlC,GAGvB,IAAI0iB,EAAS,EAAKte,MAAMghC,YACpBplC,IACF0iB,GAAU,EAAKte,MAAMwgC,iBAAmB,KAEtC,EAAKxgC,MAAMihC,uBACb3iB,GAAU,EAAKte,MAAMygC,mBAEvB,EAAKxgC,SAAS,CACZihC,oBAAqBtlC,EACrBulC,iBAAkB,EAAKnhC,MAAMkhC,oBAC7BE,mBAAoB,EAAKphC,MAAMqhC,mBAC/BA,mBAAoB/iB,KA3DL,EA+DnBgjB,wBAA0B,SAAA1lC,GAGxB,IAAI0iB,EAAS,EAAKte,MAAMghC,YACpBplC,IACF0iB,GAAU,EAAKte,MAAMygC,mBAEnB,EAAKzgC,MAAMkhC,sBACb5iB,GAAU,EAAKte,MAAMwgC,iBAAmB,KAE1C,EAAKvgC,SAAS,CACZkhC,iBAAkB,EAAKnhC,MAAMkhC,oBAC7BD,qBAAsBrlC,EACtBwlC,mBAAoB,EAAKphC,MAAMqhC,mBAC/BA,mBAAoB/iB,IAEtB,EAAKwiB,wBA/EY,EAkFnB5gC,iBAAmB,WACjB,IAAIoe,EAASle,OAAOugC,WAChB,EAAK3gC,MAAMkhC,sBACb5iB,GAAU,EAAKte,MAAMwgC,iBAAmB,KAEtC,EAAKxgC,MAAMihC,uBACb3iB,GAAU,EAAKte,MAAMygC,mBAGvB,EAAKxgC,SAAS,CACZiD,aAAc9C,OAAOD,YACrB+gC,oBAAqB,EAAKlhC,MAAMkhC,oBAChCC,iBAAkB,EAAKnhC,MAAMkhC,oBAC7BE,mBAAoB9iB,EACpB+iB,mBAAoB/iB,EACpB0iB,YAAa5gC,OAAOugC,cAjGL,EAqGnBG,qBAAuB,WAErB,IAAMS,EAAax+B,SAChB+vB,eAAe,wBACfwC,wBAAwB53B,OACrB8jC,EAAcz+B,SACjB+vB,eAAe,yBACfwC,wBAAwB53B,OAErB+jC,EAAY9V,KAAK9F,IAAI2b,EAAaD,GACpCE,IAAc,EAAKzhC,MAAM0hC,kBAC3B,EAAKzhC,SAAS,CAAEyhC,iBAAkBD,KA9GpC,EAAKzhC,MAAQ,CACXkhC,qBAAqB,EACrBD,sBAAsB,EACtBG,mBAAoB,IACpBC,mBAAoB,IACpBL,YAAa,IACbU,iBAAkB,IAClBC,sBAAsB,EACtBR,kBAAkB,EAClBX,iBAAkB,IAClBC,kBAAmB,KAZJ,E,gEAiBjBrgC,OAAOqB,iBAAiB,SAAUC,KAAKxB,kBACvCwB,KAAKxB,qB,6CAuBLE,OAAOuB,oBAAoB,SAAUD,KAAKxB,kBAC1CwB,KAAKxB,qB,+BA2EL,OACE,yBACEvD,MAAO,CACLC,MAAO,OACPc,OAAQgE,KAAK1B,MAAMkD,aACnBpG,gBAAiB,UACjBQ,OAAQ,OACRM,QAAS,SAGX,yBAAKjB,MAAO,CAAEa,QAAS,OAAQwB,UAAW,QACxC,kBAAC,GAAD,CACEqhC,oBAAqB3+B,KAAK1B,MAAMkhC,oBAChCX,qBAAsB7+B,KAAK1B,MAAMihC,qBACjCT,iBAAkB9+B,KAAK1B,MAAMwgC,iBAC7BC,kBAAmB/+B,KAAK1B,MAAMygC,kBAC9BV,SAAUr+B,KAAK1B,MAAMohC,mBACrBtB,SAAUp+B,KAAK1B,MAAMqhC,mBACrBX,oBAAqBh/B,KAAK1B,MAAMmhC,iBAChCzjC,OAAQgE,KAAK1B,MAAM0hC,iBACnBllC,MAAM,SAER,kBAAC,EAAD,CACEI,MAAO8E,KAAK1B,MAAMwgC,iBAClBhkC,MAAM,oBACNolC,SAAS,EACTthC,YAAaoB,KAAKq/B,yBAEpB,kBAAC,EAAD,CACEnkC,MAAO8E,KAAK1B,MAAMygC,kBAClBjkC,MAAM,iBACNolC,SAAS,EACTthC,YAAaoB,KAAK4/B,wBAClBz+B,kBAAmBnB,KAAKo/B,6B,GAvJlBt+B,aCIEq/B,QACW,cAA7BzhC,OAAO0hC,SAASC,UAEe,UAA7B3hC,OAAO0hC,SAASC,UAEhB3hC,OAAO0hC,SAASC,SAASC,MACvB,2D,+BCjBA3kB,GAAe,CACnB3d,mBAAoB,gBACpBuiC,yBAA0B,GAC1BvhC,yBAA0B,eAC1BwhC,+BAAgC,GAChCrhC,uBAAwB,eACxBshC,6BAA8B,GAC9BjhB,4BAA4B,EAC5Bme,sBAAuB,CAErBzjB,iBAAiB,EACjBI,iBAAiB,EAEjBE,gBAAgB,EAChBC,iBAAiB,EACjBC,uBAAuB,EACvBC,uBAAuB,EAGvBc,aAAc,QAEdN,eAAgB,UAGhBN,gBAAgB,EAChBC,iBAAiB,IAKN,cAAmC,IAAlCxc,EAAiC,uDAAzBqd,GAAc+kB,EAAW,uCAC/C,OAAQA,EAAO5iC,MACb,IrEjC6B,oBqEkC3B,OAAO,6BACFQ,GADL,IAEEN,mBAAoB0iC,EAAO3iC,QAAQC,qBAGvC,IrEtCoC,2BqEuClC,OAAO,6BACFM,GADL,IAEEU,yBAA0B0hC,EAAO3iC,QAAQiB,2BAG7C,IrE3CkC,yBqE4ChC,OAAO,6BACFV,GADL,IAEEa,uBAAwBuhC,EAAO3iC,QAAQoB,yBAG3C,IrEhDwC,+BqEiDtC,OAAO,6BACFb,GADL,IAEEkhB,2BAA4BkhB,EAAO3iC,QAAQyhB,6BAG/C,IrErD0C,iCqEsDxC,OAAO,6BACFlhB,GADL,IAEEq/B,sBAAuB+C,EAAO3iC,UAIlC,QACE,OAAOO,I,kBC3DPqiC,GAAmBjiC,OAAOkiC,sCAAwCC,KAE3DC,GAAUC,aAAqB,CAC1CC,SAAUC,oBCAZ,IAAMjgC,GDGS,WACb,OAAOkgC,cETMJ,EFUCA,GETdK,aAAgB,CACdC,OAAQN,EAAUO,aAAcP,GAAW,KAC3C9/B,YFQA2/B,GAAiBW,aAAgBC,KAAOC,aAAiBV,OEX9C,IAAAA,EDKDW,GACdC,IAAS/d,OAEP,kBAAC,IAAD,CAAU3iB,MAAOA,IACf,kBAAC,GAAD,CAAK8/B,QAASA,MAGhBz/B,SAAS+vB,eAAe,SHmHpB,kBAAmBuQ,WACrBA,UAAUC,cAAcC,MACrBh+B,MAAK,SAAAi+B,GACJA,EAAaC,gBAEd99B,OAAM,SAAA2C,GACLnE,QAAQmE,MAAMA,EAAMo7B,a","file":"static/js/main.b3c350f3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst expandButtonAnimation = ({ expanded, initialRendering }) => {\n  if (!initialRendering) {\n    return keyframes`\n  from {\n    transform: rotate(${expanded ? -90 : 90}deg);\n  }\n  to {\n    transform: rotate(${expanded ? 90 : 270}deg);\n   \n  }\n`;\n  }\n  if (initialRendering) {\n    return keyframes`\n  from {\n    transform: rotate(90deg);\n  }\n  to {\n    transform: rotate(90deg);\n   \n  }\n`;\n  }\n};\n\nconst collapsableBodyContainerAnimation = ({\n  expand,\n  collapsable,\n  minHeight,\n  maxHeight\n}) => {\n  if (collapsable) {\n    return keyframes`\n  from {\n    height: ${expand ? minHeight : maxHeight}px;\n  }\n  to {\n    height: ${expand ? maxHeight : minHeight}px;\n   \n  }\n`;\n  }\n  if (!collapsable) {\n    return keyframes`\n  from {\n    height: ${minHeight}px;\n  }\n  to {\n    height: ${minHeight}px;\n   \n  }\n`;\n  }\n};\n\nconst indicatorItemAnimation = ({ expanded, initialRendering }) => {\n  if (!initialRendering) {\n    return keyframes`\n  0% {\n    opacity: ${expanded ? 1 : 0};\n  }\n  50% {\n    opacity: ${expanded ? 1 : 0};\n  }\n  100% {\n    opacity: ${expanded ? 0 : 1};\n  }\n \n`;\n  }\n};\n\nconst IndicatorItem = styled.div`\n  animation-name: ${indicatorItemAnimation};\n  animation-duration: 500ms;\n  opacity: ${props => (props.collapsable ? (props.expand ? 0 : 1) : 1)};\n`;\n\nconst CollapsableBodyContainer = styled.div`\n  animation-name: ${collapsableBodyContainerAnimation};\n  animation-duration: 400ms;\n  height: ${props =>\n    props.collapsable\n      ? props.expand\n        ? props.maxHeight\n        : props.minHeight\n      : props.minHeight}px;\n`;\n\nconst ButtonContainer = styled.div`\n  animation-name: ${expandButtonAnimation};\n  animation-duration: 400ms;\n  transform: rotate(${props => (props.expanded ? 90 : 270)}deg);\n`;\n\nconst TabLikeHeader = props => {\n  const [expand, setExpand] = useState(true);\n  const toggle = () => setExpand(!expand);\n  return (\n    <div style={{ paddingRight: \"10px\" }}>\n      {createHeader(\n        props,\n        props.position,\n        props.title,\n        props.collapsable,\n        expand,\n        toggle\n      )}\n      {createBody(\n        props,\n        props.title,\n        props.position,\n        props.children,\n        props.collapsable,\n        expand,\n        props.minHeight,\n        props.maxHeight\n      )}\n    </div>\n  );\n};\n\nconst createHeader = (\n  props,\n  pos,\n  title,\n  collapse = false,\n  expand,\n  toggleFunction\n) => {\n  return (\n    <div\n      style={{\n        width: \"200px\",\n        color: \"#fff\",\n        backgroundColor: \"#ad2f38\",\n        borderTopLeftRadius: \"5px\",\n        borderTopRightRadius: \"10px\",\n        marginLeft: pos === \"left\" ? 0 : \"50%\"\n      }}\n      key={\"containerHeaderKey\" + title}\n    >\n      {title}\n      {collapse ? (\n        <ButtonContainer\n          key={\"someKey\" + title}\n          size=\"sm\"\n          color=\"secondary\"\n          className=\"btn-secondary\"\n          expanded={expand}\n          duration={500}\n          style={{\n            margin: \"0 0\",\n            flexGrow: \"1\",\n            display: \"flex\",\n            alignSelf: \"center\",\n            width: \"20px\",\n            height: \"20px\",\n            borderRadius: \"20px\",\n            padding: 0,\n            border: \"solid 1px\",\n            borderColor: \"#525252\",\n            float: \"right\",\n            right: \"10px\",\n            top: \"2px\",\n            position: \"relative\",\n            zIndex: 100\n          }}\n          onClick={toggleFunction}\n        >\n          <Icon\n            icon={faAngleLeft}\n            className=\"align-self-center\"\n            style={{ marginLeft: \"4px\", fontSize: \"20px\" }}\n          />\n        </ButtonContainer>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\nconst createBody = (\n  props,\n  title,\n  pos,\n  children,\n  collapseable,\n  expand,\n  minHeight,\n  maxHeight\n) => {\n  return (\n    <CollapsableBodyContainer\n      id={\"tlh_bodyOf\" + title}\n      collapsable={collapseable}\n      expand={expand}\n      minHeight={minHeight}\n      maxHeight={maxHeight}\n      style={{\n        width: props.width ? props.width : \"250px\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        border: \"1px solid gray\",\n        borderTopLeftRadius: \"0px\",\n        borderTopRightRadius: \"10px\",\n        borderBottomLeftRadius: \"10px\",\n        borderBottomRightRadius: 0,\n        overflow: \"hidden\",\n        color: \"#505565\"\n      }}\n    >\n      {children}\n      {collapseable && !expand && (\n        <IndicatorItem\n          expanded={expand}\n          style={{\n            position: \"relative\",\n            float: \"right\",\n            marginTop: -maxHeight + minHeight - 15 + 5,\n            height: \"15px\",\n            width: \"100%\",\n            backgroundColor: \"#c4c4c4\",\n            borderRadius: \"15px\"\n          }}\n        />\n      )}\n    </CollapsableBodyContainer>\n  );\n};\n\nTabLikeHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  position: PropTypes.string,\n  collapsable: PropTypes.bool,\n  minHeight: PropTypes.number,\n  maxHeight: PropTypes.number,\n  children: PropTypes.any\n};\n\nexport default TabLikeHeader;\n","import * as type from \"./types.js\";\nexport const selectDataSource = sourceName => dispatch => {\n  dispatch({\n    type: type.SELECT_DATASOURCE,\n    payload: { selectedDataSource: sourceName }\n  });\n};\nexport const selectVertexEdgeMapper = sourceName => dispatch => {\n  dispatch({\n    type: type.SELECT_VERTEXEDGE_MAPPER,\n    payload: { selectedVertexEdgeMapper: sourceName }\n  });\n};\nexport const selectNodeLinkMapper = sourceName => dispatch => {\n  dispatch({\n    type: type.SELECT_NODELINK_MAPPER,\n    payload: { selectedNodeLinkMapper: sourceName }\n  });\n};\n\nexport const createPreviewVisualization = val => dispatch => {\n  dispatch({\n    type: type.CREATE_PREVIEW_VISUALIZATION,\n    payload: { createPreviewVisualization: val }\n  });\n};\n\nexport const updateRenderingModuleConfiguration = payload => dispatch => {\n  dispatch({\n    type: type.UPDATE_RENDERING_MODULE_CONFIG,\n    payload: payload\n  });\n};\n","export const SELECT_DATASOURCE = \"SELECT_DATASOURCE\";\nexport const SELECT_VERTEXEDGE_MAPPER = \"SELECT_VERTEXEDGE_MAPPER\";\nexport const SELECT_NODELINK_MAPPER = \"SELECT_NODELINK_MAPPER\";\nexport const CREATE_PREVIEW_VISUALIZATION = \"CREATE_PREVIEW_VISUALIZATION\";\nexport const UPDATE_RENDERING_MODULE_CONFIG = \"UPDATE_RENDERING_MODULE_CONFIG\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"reactstrap\";\n\nimport TabLikeHeader from \"./TabLikeHeader\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Button } from \"reactstrap\";\nimport * as dataSources from \"../configs/datasources\";\nimport { connect } from \"react-redux\";\n\nimport {\n  selectDataSource,\n  selectVertexEdgeMapper,\n  selectNodeLinkMapper\n} from \"./redux/actions\";\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.awailableSources = dataSources.default.availableSources;\n    this.awailableVertexEdgeMappers =\n      dataSources.default.availableVertexEdgeMappers;\n    this.availableNodeLinkMappers =\n      dataSources.default.availableNodeLinkMappers;\n    this.state = {\n      expanded: true,\n      minHeight: 200,\n      title: props.title,\n      initialRendering: true,\n      selectedDataSource: undefined,\n      defaultDataSource: \"Ontology File\",\n      selectedVertexEdgeMapper: undefined,\n      defaultVertexEdgeMapper: \"Basic Mapper\",\n      innerHeight: 300,\n      selectedNodeLinkMapper: undefined,\n      defaultNodeLinkMapper: \"Basic Mapper\"\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevState.expanded !== this.state.expanded) {\n      this.setState({ initialRendering: false });\n    }\n  };\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  updateDimensions = () => {\n    this.setState({ innerHeight: window.innerHeight });\n  };\n\n  collapseLeftSideBar = () => {\n    this.props.updateEvent(!this.state.expanded);\n    this.setState({ expanded: !this.state.expanded });\n  };\n\n  dataSourceSelected = name => {\n    this.setState({ selectedDataSource: name });\n    // todo EMIT SIGNAL FOR DATA SELECTION >>><<<\n    this.props.selectDataSource(name);\n  };\n\n  vertexEdgeMapperSelected = name => {\n    this.setState({ selectedVertexEdgeMapper: name });\n    // todo EMIT SIGNAL FOR DATA SELECTION >>><<<\n    this.props.selectVertexEdgeMapper(name);\n  };\n\n  nodeLinkMapperSelected = name => {\n    this.setState({ selectedNodeLinkMapper: name });\n    // todo EMIT SIGNAL FOR DATA SELECTION >>><<<\n    this.props.selectNodeLinkMapper(name);\n  };\n\n  render() {\n    return (\n      <ContentContainer\n        id=\"LeftSidebarContainer\"\n        expanded={this.state.expanded}\n        initialRendering={this.state.initialRendering}\n        width={this.props.width}\n        style={{\n          width: this.props.width,\n          height: this.state.innerHeight - 40,\n          float: \"left\",\n          position: \"absolute\"\n        }}\n      >\n        <Container\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderBottomRightRadius: \"0\",\n            borderBottomLeftRadius: \"0\",\n            height: \"40px\",\n            marginLeft: \"5px\",\n            color: \"white\",\n            backgroundColor: \"#ad2f38\"\n          }}\n        >\n          <div style={{ width: this.props.width - 10, textAlign: \"center\" }}>\n            {this.state.title}\n          </div>\n        </Container>\n\n        <Container\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderTopRightRadius: \"0\",\n            borderTopLeftRadius: \"0\",\n            marginLeft: \"5px\",\n            color: \"black\",\n            backgroundColor: \"#ffffff\",\n            marginTop: \"-1px\",\n            position: \"relative\",\n            height: \"90%\",\n            overflowY: \"scroll\",\n            overflowX: \"hidden\"\n          }}\n        >\n          <div style={{ width: this.props.width - 20, textAlign: \"center\" }}>\n            <TabLikeHeader\n              title=\"Data Source \"\n              position=\"left\"\n              collapsable={false}\n              width={\"100%\"}\n            >\n              <div style={{ padding: \"10px\", display: \"grid\" }}>\n                {this.awailableSources.map((item, index) => {\n                  let selectedName = this.state.selectedDataSource;\n                  if (!selectedName) {\n                    selectedName = this.state.defaultDataSource;\n                  }\n                  return (\n                    <Button\n                      key={\"datasourceIte\" + index}\n                      style={{\n                        margin: \"5px\",\n                        borderRadius: \"0px\",\n                        borderTopRightRadius: \"10px\",\n                        borderBottomLeftRadius: \"10px\",\n                        backgroundColor:\n                          item === selectedName ? \"#ad2f38\" : \"#1e68a5\"\n                      }}\n                      onClick={() => {\n                        this.dataSourceSelected(item);\n                      }}\n                    >\n                      {item}\n                    </Button>\n                  );\n                })}\n              </div>\n            </TabLikeHeader>\n            <TabLikeHeader\n              title=\"Vertex Edge Mapper \"\n              position=\"left\"\n              collapsable={false}\n              width={\"100%\"}\n            >\n              <div style={{ padding: \"10px\", display: \"grid\" }}>\n                {this.awailableVertexEdgeMappers.map((item, index) => {\n                  let selectedName = this.state.selectedVertexEdgeMapper;\n                  if (!selectedName) {\n                    selectedName = this.state.defaultVertexEdgeMapper;\n                  }\n                  return (\n                    <Button\n                      key={\"datasourceIte\" + index}\n                      style={{\n                        margin: \"5px\",\n                        borderRadius: \"0px\",\n                        borderTopRightRadius: \"10px\",\n                        borderBottomLeftRadius: \"10px\",\n                        backgroundColor:\n                          item === selectedName ? \"#ad2f38\" : \"#1e68a5\"\n                      }}\n                      onClick={() => {\n                        this.vertexEdgeMapperSelected(item);\n                      }}\n                    >\n                      {item}\n                    </Button>\n                  );\n                })}\n              </div>\n            </TabLikeHeader>\n\n            <TabLikeHeader\n              title=\"Node Link Mapper \"\n              position=\"left\"\n              collapsable={false}\n              width={\"100%\"}\n            >\n              <div style={{ padding: \"10px\", display: \"grid\" }}>\n                {this.availableNodeLinkMappers.map((item, index) => {\n                  let selectedName = this.state.selectedNodeLinkMapper;\n                  if (!selectedName) {\n                    selectedName = this.state.defaultNodeLinkMapper;\n                  }\n                  return (\n                    <Button\n                      key={\"datasourceIte\" + index}\n                      style={{\n                        margin: \"5px\",\n                        borderRadius: \"0px\",\n                        borderTopRightRadius: \"10px\",\n                        borderBottomLeftRadius: \"10px\",\n                        backgroundColor:\n                          item === selectedName ? \"#ad2f38\" : \"#1e68a5\"\n                      }}\n                      onClick={() => {\n                        this.nodeLinkMapperSelected(item);\n                      }}\n                    >\n                      {item}\n                    </Button>\n                  );\n                })}\n              </div>\n            </TabLikeHeader>\n          </div>\n        </Container>\n      </ContentContainer>\n    );\n  }\n}\n\nLeftSideBar.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  updateEvent: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  selectDataSource: PropTypes.func.isRequired,\n  selectVertexEdgeMapper: PropTypes.func.isRequired,\n  selectNodeLinkMapper: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {\n    selectDataSource: payload => dispatch(selectDataSource(payload)),\n    selectVertexEdgeMapper: payload =>\n      dispatch(selectVertexEdgeMapper(payload)),\n    selectNodeLinkMapper: payload => dispatch(selectNodeLinkMapper(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar);\n//\n// const expandButtonAnimation = ({ expanded, initialRendering }) => {\n//   if (!initialRendering) {\n//     return keyframes`\n//   from {\n//     transform: rotate(${expanded ? 180 : 0}deg);\n//   }\n//   to {\n//     transform: rotate(${expanded ? 0 : -180}deg);\n//\n//   }\n// `;\n//   }\n//   if (initialRendering) {\n//     return keyframes`\n//   from {\n//     transform: rotate(0deg);\n//   }\n//   to {\n//     transform: rotate(0deg);\n//\n//   }\n// `;\n//   }\n// };\n//\n// const ButtonContainer = styled.div`\n//   animation-name: ${expandButtonAnimation};\n//   animation-duration: 1000ms;\n//   transform: rotate(${props => (props.expanded ? 0 : 180)}deg);\n// `;\n\nconst expandContentContainerAnimation = ({ expanded, width }) => {\n  return keyframes`\n  from {\n    left: ${expanded ? -width : 0}px;\n  }\n  to {\n    left: ${expanded ? 0 : -width}px;\n   \n  }\n`;\n};\n\nconst ContentContainer = styled.div`\n  animation-name: ${expandContentContainerAnimation};\n  animation-duration: 400ms;\n  left: ${props => (props.expanded ? 0 : -props.width)}px;\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"reactstrap\";\n\nimport styled, { keyframes } from \"styled-components\";\n//\n// const expandButtonAnimation = ({ expanded, initialRendering }) => {\n//   if (!initialRendering) {\n//     return keyframes`\n//   from {\n//     transform: rotate(${expanded ? -180 : 0}deg);\n//   }\n//   to {\n//     transform: rotate(${expanded ? 0 : 180}deg);\n//\n//   }\n// `;\n//   }\n//   if (initialRendering) {\n//     return keyframes`\n//   from {\n//     transform: rotate(0deg);\n//   }\n//   to {\n//     transform: rotate(0deg);\n//\n//   }\n// `;\n//   }\n// };\n//\n// const ButtonContainer = styled.div`\n//   animation-name: ${expandButtonAnimation};\n//   animation-duration: 1000ms;\n//   transform: rotate(${props => (props.expanded ? 0 : 180)}deg);\n// `;\n\nconst expandContentContainerAnimation = ({ expanded, width }) => {\n  return keyframes`\n  from {\n    right: ${expanded ? -(width - 10) : 8}px;\n  }\n  to {\n    right: ${expanded ? 8 : -(width - 10)}px;\n   \n  }\n`;\n};\n\nconst ContentContainer = styled.aside`\n  animation-name: ${expandContentContainerAnimation};\n  animation-duration: 400ms;\n  right: ${props => (props.expanded ? 8 : -(props.width - 10))}px;\n`;\n\nexport default class RightSideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      minHeight: 200,\n      title: props.title,\n      initialRendering: true\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.overflowX = \"hidden\";\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevState.expanded !== this.state.expanded) {\n      this.setState({ initialRendering: false });\n    }\n\n    // check required height TODO\n    this.props.heightUpdateEvent();\n  };\n\n  componentWillUnmount() {\n    document.body.style.overflowX = \"auto\";\n  }\n\n  collapseSidebar = () => {\n    this.props.updateEvent(!this.state.expanded);\n    this.setState({ expanded: !this.state.expanded });\n  };\n\n  render() {\n    return (\n      <ContentContainer\n        id=\"RightSidebarContainer\"\n        expanded={this.state.expanded}\n        width={this.props.width}\n        initialRendering={this.state.initialRendering}\n        style={{\n          width: this.props.width,\n          position: \"absolute\",\n          height: window.innerHeight - 40,\n          display: \"none\"\n        }}\n      >\n        <Container\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderBottomRightRadius: \"0\",\n            borderBottomLeftRadius: \"0\",\n            height: \"40px\",\n            marginLeft: \"5px\",\n            color: \"white\",\n            backgroundColor: \"#ad2f38\"\n          }}\n        >\n          <div style={{ width: this.props.width - 10, textAlign: \"center\" }}>\n            {this.state.title}\n          </div>\n        </Container>\n        {/*<ButtonContainer*/}\n        {/*  size=\"sm\"*/}\n        {/*  expanded={this.state.expanded}*/}\n        {/*  duration={500}*/}\n        {/*  style={{*/}\n        {/*    backgroundColor: \"#2184cc\",*/}\n        {/*    margin: \"0 0\",*/}\n        {/*    flexGrow: \"1\",*/}\n        {/*    display: \"flex\",*/}\n        {/*    alignSelf: \"center\",*/}\n        {/*    width: \"30px\",*/}\n        {/*    height: \"30px\",*/}\n        {/*    borderRadius: \"30px\",*/}\n        {/*    padding: 0,*/}\n        {/*    border: \"solid 1px\",*/}\n        {/*    borderColor: \"#383838\",*/}\n        {/*    float: \"left\",*/}\n        {/*    position: \"relative\",*/}\n        {/*    top: \"-15px\",*/}\n        {/*    left: \"-8px\",*/}\n        {/*    zIndex: 100*/}\n        {/*  }}*/}\n        {/*  onClick={this.collapseSidebar}*/}\n        {/*>*/}\n        {/*  <Icon*/}\n        {/*    icon={faAngleLeft}*/}\n        {/*    rotation={180}*/}\n        {/*    className=\"align-self-center\"*/}\n        {/*    style={{ marginLeft: \"7px\", fontSize: \"28px\", color: \"white\" }}*/}\n        {/*  />*/}\n        {/*</ButtonContainer>*/}\n        <Container\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderTopRightRadius: \"0\",\n            borderTopLeftRadius: \"0\",\n            marginLeft: \"5px\",\n            color: \"black\",\n            backgroundColor: \"#ffffff\",\n            marginTop: \"-1px\",\n            height: \"90%\",\n            position: \"relative\"\n            // zIndex: -500\n          }}\n        >\n          <div style={{ width: this.props.width - 10, textAlign: \"center\" }}>\n            RightSide\n          </div>\n        </Container>\n      </ContentContainer>\n    );\n  }\n}\n\nRightSideBar.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  updateEvent: PropTypes.func.isRequired,\n  heightUpdateEvent: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as PropTypes from \"prop-types\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\n\nclass VisModal extends Component {\n  \n\n  state = {\n    windowHeight: 0 // want this for auto aligning the size of the modal window\n  };\n\n  componentDidMount() {\n    //console.log('Graph View Modal is mounted');\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = prevProps => {};\n\n  componentWillUnmount() {\n    //console.log('View modal un mounting');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  updateDimensions = () => {\n    // test\n    const offset = 28 * 2 + 65;\n    this.setState({ windowHeight: window.innerHeight - offset });\n  };\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.showDialog}\n        toggle={this.props.toggle}\n        size=\"lg\"\n        onOpened={() => {}}\n        style={{ maxWidth: \"90%\", marginBottom: 0 }}\n      >\n        <ModalHeader toggle={this.props.toggle}>\n          <div className=\"d-flex\" style={{ height: \"40px\" }}>\n            <div style={{ width: \"100%\", height: \"40px\", paddingTop: \"5px\" }}>\n              {this.props.title}\n            </div>\n          </div>\n        </ModalHeader>\n        <ModalBody\n          style={{\n            padding: \"0\",\n            minHeight: \"100px\",\n            height: this.state.windowHeight,\n            overflow: \"auto\"\n          }}\n        >\n          {this.props.children}\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nVisModal.propTypes = {\n  showDialog: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any\n};\n\nconst mapStateToProps = state => ({\n  store: state.store\n});\n\nexport default connect(mapStateToProps)(VisModal);\n","import * as $CONST from \"./BaseComponentConstants\";\n\nexport default class BaseComponent {\n  constructor() {\n    this.type = $CONST.TYPE_ABSTRACT_BASE_COMPONENT;\n    this.inputDataAsJsonObject = null;\n    this.resultObject = {};\n  }\n\n  /** -------------- EXPOSED FUNCTIONS -------------- DO NOT OVERWRITE **/\n  getResult = () => {\n    return this.resultObject;\n  };\n\n  setInputData = inputDataAsJsonObject => {\n    this.inputDataAsJsonObject = inputDataAsJsonObject;\n  };\n\n  execute = async () => {\n    if (!this.inputDataAsJsonObject) {\n      console.log(\"No JSON object given as data input \");\n      return;\n    }\n\n    await this.__run__();\n    this._postRun_();\n  };\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = () => {};\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n  _postRun_ = () => {\n    // Options do define post execution functions,\n  };\n}\n","export const TYPE_ABSTRACT_BASE_COMPONENT = \"TYPE_ABSTRACT_BASE_COMPONENT\";\n\n\n// DATA Access Handler\nexport const TYPE_VOWL_STATIC_LOCAL = \"TYPE_VOWL_STATIC_LOCAL\";\nexport const TYPE_DBPEDIA_PROXY = \"TYPE_DBPEDIA_PROXY\";\n\n// PARSERS\n\nexport const TYPE_VOWL_PARSER = \"TYPE_VOWL_PARSER\";\nexport const TYPE_SPARQL_PARSER = \"TYPE_SPARQL_PARSER\";\nexport const TYPE_REL_FINDER_DAH = \"TYPE_REL_FINDER_DAH\";\nexport const TYPE_SIMPLE_PROXY = \"TYPE_SIMPLE_PROXY\";\nexport const TYPE_SIMPLE_DIRECT_LOADER = \"TYPE_SIMPLE_DIRECT_LOADER\";\n\n// MODEL MODELS\nexport const TYPE_ABSTRACT_MODEL = \"TYPE_ABSTRACT_MODEL\";\nexport const TYPE_RESOURCE_RELATION_MODEL = \"TYPE_RESOURCE_RELATION_MODEL\";\nexport const TYPE_VERTEX_EDGE_MODEL = \"TYPE_VERTEX_EDGE_MODEL\";\nexport const TYPE_NODE_LINK_MODEL = \"TYPE_NODE_LINK_MODEL\";\n\n// // MAPPERS\nexport const TYPE_VERTEX_EDGE_MAPPER = \"TYPE_VERTEX_EDGE_MAPPER\";\nexport const TYPE_NODE_LINK_MAPPER = \"TYPE_NODE_LINK_MAPPER\";\n\n// export const TYPE_VOWL_VE2NL_MAPPER = \"TYPE_VOWL_VE2NL_MAPPER\";\n","const submitPostRequest = (\n  url,\n  headers,\n  data,\n  jsonStringify = true,\n  send_token = true\n) => {\n  if (!url) {\n    throw new Error(\"Cannot submit POST request. URL is null or undefined.\");\n  }\n\n  const myHeaders = new Headers(headers);\n  if (jsonStringify) {\n    data = JSON.stringify(data);\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(url, { method: \"POST\", headers: myHeaders, body: data })\n      .then(response => {\n        if (!response.ok) {\n          const json = response.json();\n          if (json.then) {\n            json.then(reject);\n          } else {\n            reject(\n              new Error(\n                `Error response. (${response.status}) ${response.statusText}`\n              )\n            );\n          }\n        } else {\n          const json = response.json();\n          if (json.then) {\n            json.then(resolve).catch(reject);\n          } else {\n            return resolve(json);\n          }\n        }\n      })\n      .catch(reject);\n  });\n};\n\nexport const submitGetRequest = (url, headers, send_token = false) => {\n  if (!url) {\n    throw new Error(\"Cannot submit GET request. URL is null or undefined.\");\n  }\n\n  const myHeaders = headers ? new Headers(headers) : {};\n\n  myHeaders.append(\"Content-Type\", \"application/sparql-results+json\");\n  myHeaders.append(\n    \"Accept\",\n    \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"\n  );\n\n  console.log(myHeaders);\n  console.log(\"Sending this ^^^ HEADERS\");\n\n  // if (send_token) {\n  //   const cookies = new Cookies();\n  //   const token = cookies.get(\"token\") ? cookies.get(\"token\") : null;\n  //   if (token) {\n  //     myHeaders.append(\"Authorization\", `Bearer ${token}`);\n  //   }\n  // }\n\n  return new Promise((resolve, reject) => {\n    console.log(\"FETCHING !!!!! !\");\n    fetch(url, {\n      method: \"GET\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", //\n      headers: myHeaders\n    })\n      .then(response => {\n        console.log(\"FETCHED!\");\n        console.log(response);\n        console.log(\"^^^^\");\n        if (!response.ok) {\n          reject({\n            error: new Error(\n              `Error response. (${response.status}) ${response.statusText}`\n            ),\n            statusCode: response.status,\n            statusText: response.statusText\n          });\n        } else {\n          const json = response.json();\n          console.log(\"WE ARE HERE \");\n          console.log(json);\n          if (json.then) {\n            console.log(\" USING THEN WE ARE HERE \");\n            json.then(resolve).catch(reject);\n          } else {\n            console.log(\"SOME RESOLVE OF THE JSON THING \");\n            console.log(json);\n            return resolve(json);\n          }\n        }\n      })\n      .catch(reject);\n  });\n};\n\nexport const fetchDataDirectly = urlCall => {\n  console.log(\"GETTING HTTP REQUEST\");\n\n  return submitGetRequest(urlCall, { \"Content-Type\": \"application/json\" });\n};\n\nexport const executeProxyJSONRequest = (proxyCall, data) => {\n  const CONTENTTYPE_SPARQL_JSON = \"application/sparql-results+json\";\n  return submitPostRequest(\n    proxyCall,\n    { \"Content-Type\": CONTENTTYPE_SPARQL_JSON },\n    data\n  );\n};\n","import DataHandler from \"../Base/BaseComponent\";\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport { executeProxyJSONRequest } from \"./network\";\nexport default class SimpleProxyLoader extends DataHandler {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_SIMPLE_PROXY;\n    this.resultingDataObject = null;\n    this.p_runPromise = null;\n    this.p_runPromiseResolver = null;\n    // set a flag for single or multiple uploads\n\n    // set the proxy config here;\n    this.proxyURL = \"http://localhost\";\n    this.proxyPort = \"12463\";\n    this.proxyPath = \"proxyRequest\";\n    this.dataRequest = {\n      requestType: \"jsonfetch\",\n      fetchCall:\n        \"https://www.orkg.org/orkg/api/statements/subject/R38668/?desc=true&items=9999&page=1&sortBy=created_at\"\n    };\n  }\n\n  /** -------------- Exposed Functions --------------**/\n\n  getResult = () => {\n    return this.dataHandlerObject.theData;\n  };\n\n  setProxyURL = url => {\n    this.proxyURL = url;\n  };\n  setProxyPort = port => {\n    this.proxyPort = port;\n  };\n  setProxyPath = path => {\n    this.proxyPath = path;\n  };\n  setProxyRequestDataObject = obj => {\n    this.dataRquest = obj;\n  };\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    // clear the dataObject;\n    if (this.p_runPromise === null) {\n      this.p_runPromise = new Promise(async (resolve, reject) => {\n        // delete the old object;\n        this.resultingDataObject = {};\n        // example call;\n        this.resultingDataObject = await executeProxyJSONRequest(\n          this._buildProxyPath(),\n          this._buildDataRequest()\n        );\n        resolve();\n        // set it to be in the access-able in the dataHandler;\n        if (!this.dataHandlerObject) {\n          this.dataHandlerObject = {};\n        }\n        this.dataHandlerObject.theData = this.resultingDataObject;\n        this._clearPromise();\n      });\n      await this.p_runPromise;\n    }\n  };\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n\n  _buildProxyPath = () => {\n    return this.proxyURL + \":\" + this.proxyPort + \"/\" + this.proxyPath;\n  };\n\n  _buildDataRequest = () => {\n    return {\n      requestType: \"jsonfetch\",\n      fetchCall:\n        \"https://www.orkg.org/orkg/api/statements/subject/R38668/?desc=true&items=9999&page=1&sortBy=created_at\"\n    };\n  };\n\n  _clearPromise = () => {\n    this.p_runPromise = null;\n  };\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport SimpleProxyLoader from \"./SimpleProxyLoader\";\n\nimport * as ontologyFile from \"../../demoRequests/ontologyFile\";\n\n\nexport default class StaticLocalVowlJSONLoader extends SimpleProxyLoader {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VOWL_STATIC_LOCAL;\n  }\n\n  execute = async () => {\n    await this.__run__();\n  };\n\n  __run__ = async () => {\n    // clear the dataObject;\n    if (!this.dataHandlerObject) {\n      this.dataHandlerObject = {};\n    }\n    this.dataHandlerObject.theData = JSON.parse(\n      JSON.stringify(ontologyFile.default)\n    );\n  };\n}\n","// data handler is a base class;\n\nimport * as $CONST from \"./BaseComponentConstants\";\n\nexport default class BaseModel {\n  constructor() {\n    this.type = $CONST.TYPE_ABSTRACT_MODEL; // default type;\n    this.modelAsJsonObject = null;\n    this.__resourceIdentifier = \"baseModelResourceIdentifier\"; //MUST CHANGE in derived models\n  }\n\n  /** -------------- EXPOSED FUNCTIONS -------------- DO NOT OVERWRITE **/\n  getResult = () => {\n    return this.modelAsJsonObject;\n  };\n\n  getResourceIdentifier = () => {\n    return this.__resourceIdentifier;\n  };\n\n  setResourceIdentifier = id => {\n    // this specifies the property name in the object  to which we look up in the map ;\n    this.__resourceIdentifier = id;\n  };\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __isInMap__ = (map, identifier) => {\n    return true; // if is in map (per default this blocks to add items to model)!\n  };\n\n  __resourceIdentifier__ = resourceObject => {\n    // returns a string for resourceIdentifier, should be unique;\n  };\n\n  __isEqual__ = (a, b) => {\n    // input a and b are objects with properties where some are maybe equal\n    return false;\n  };\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseModel from \"../Base/BaseModel\";\n\nexport default class ResourceRelationModel extends BaseModel {\n  constructor() {\n    super();\n\n    this.type = $CONST.TYPE_RESOURCE_RELATION_MODEL; // default type;\n\n    // initialize the model with array of resources and relations;\n    this.modelAsJsonObject = { resources: [], relations: [] };\n\n    // create mappers for resources and relations;\n    this.resourceMap = {};\n    this.relationMap = {};\n\n    this.__resourceIdentifier = \"__resourceIdentifier\"; // default, assume forced ids from outside;\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __isInMap__ = (map, identifier) => {\n    if (!identifier) {\n      console.error(\n        \"No Identifier Found in resource! give it unique ids as properties and set the resourceIdentifier name (setResourceIdentifier('ID'))\"\n      );\n    } else {\n      return !!map[identifier];\n    }\n\n    return true; // if is in map (per default this blocks to add items to model)!\n  };\n\n  __isEqual__ = (a, b) => {\n    // input a and b are objects with properties where some are maybe equal\n    return false;\n  };\n\n  __resourceIdentifier__ = resourceObject => {\n    return resourceObject[this.__resourceIdentifier];\n  };\n\n  /** -------------- Exposed Functions --------------**/\n\n  addResource = resource => {\n    if (\n      !this.__isInMap__(this.resourceMap, this.__resourceIdentifier__(resource))\n    ) {\n      this.__integrateResourceItem(\n        this.modelAsJsonObject.resources,\n        this.resourceMap,\n        resource\n      );\n    } else {\n      // Has seen this resource >>> Merge <<<;\n      this.__mergeItem(\n        this.resourceMap[this.__resourceIdentifier__(resource)],\n        resource\n      );\n    }\n  };\n\n  __mergeItem = (r1, r2) => {\n    // r1 is our target resource where we append stuff to it\n    r1.integrateResource(r2);\n  };\n\n  __integrateResourceItem = (target, map, resource) => {\n    target.push(resource);\n    map[this.__resourceIdentifier__(resource)] = resource;\n  };\n\n  addRelation = relation => {\n    if (\n      !this.__isInMap__(this.relationMap, this.__resourceIdentifier__(relation))\n    ) {\n      this.__integrateResourceItem(\n        this.modelAsJsonObject.relations,\n        this.relationMap,\n        relation\n      );\n    } else {\n      // Has seen this relation >>> Merge <<<;\n\n      this.__mergeItem(\n        this.relationMap[this.__resourceIdentifier__(relation)],\n        relation\n      );\n    }\n  };\n}\n","export const validIRI = str => {\n  const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return urlregex.test(str);\n};\n","import { validIRI } from \"../../Implementation/Base/globalHelper\";\n\nexport default class Resource {\n  constructor() {\n    this._resourceURI = undefined;\n    this._semanticType = [];\n    this._annotations = {};\n    this._axioms = {};\n    this.__resourceIdentifier = undefined;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\"\n    };\n  }\n\n  resourceIdentifier(val) {\n    if (!arguments.length) {\n      return this.__resourceIdentifier;\n    }\n    this.__resourceIdentifier = val;\n  }\n\n  addSemanticType(t) {\n    if (this._semanticType.indexOf(t) === -1) {\n      this._semanticType.push(t);\n    }\n  }\n\n  addAnnotation = (name, value, lang) => {\n    // annotations are literals with optional language tags;\n\n    let inputName = name;\n    if (validIRI(name)) {\n      let suffix = name.split(\"#\")[1];\n      let pref = \"\";\n      if (!suffix) {\n        const tokens = name.split(\"/\");\n        suffix = tokens[tokens.length - 1];\n        for (let i = 0; i < tokens.length - 1; i++) {\n          pref += tokens[i];\n        }\n        pref += \"/\";\n      } else {\n        pref = name.split(\"#\")[0];\n        pref += \"#\";\n      }\n\n      const prName = this.prefixMapperL2S[pref];\n      if (prName) {\n        inputName = prName + \":\" + suffix;\n      }\n    }\n    if (!this._annotations[inputName]) {\n      this._annotations[inputName] = {};\n    }\n\n    let languageSelector = \"default\";\n    if (lang && lang !== \"undefined\") {\n      languageSelector = lang;\n    }\n    const tm = this._annotations[inputName];\n    if (!tm[languageSelector]) {\n      tm[languageSelector] = []; // array of strings for given language\n    }\n    tm[languageSelector].push(value);\n  };\n\n  addAxiom(subject, axiom, object) {\n    // subject for now ignored;\n    if (!this._axioms.hasOwnProperty(axiom)) {\n      this._axioms[axiom] = [];\n    }\n    this._axioms[axiom].push(object);\n  }\n\n  integrateResource(src) {\n    // adds stuff to this resource;\n    // semantic type?\n    src._semanticType.forEach(t => {\n      this.addSemanticType(t); // no need for checking, it is done in the function itself;\n    });\n    // axioms and annotaions need to check however;\n\n    // annotaions is an object;\n    for (const name in src._annotations) {\n      if (src._annotations.hasOwnProperty(name)) {\n        const annoType = src._annotations[name];\n        // check if this name exist in this ;\n        if (!this._annotations[name]) {\n          this._annotations[name] = {};\n        }\n        //\n        for (const langType in annoType) {\n          if (annoType.hasOwnProperty(langType)) {\n            // check if this object has it;\n            const value = annoType[langType]; // value is an array\n            const tm = this._annotations[name];\n            if (!tm[langType]) {\n              tm[langType] = []; // array of strings for given language\n            }\n            // TODO >> TEST THIS BASED ON VALUE IS ARRAY OR STRING?\n            value.forEach(str => {\n              if (tm[langType].indexOf(str) === -1) {\n                tm[langType].push(str);\n              }\n            });\n          }\n        }\n      }\n    }\n\n    // // check for axioms merging\n    for (const name in src._axioms) {\n      if (src._axioms.hasOwnProperty(name)) {\n        if (!this._axioms[name]) {\n          this._axioms[name] = [];\n        }\n\n        // get array of axioms holders;\n        const axAr = src._axioms[name];\n        axAr.forEach(ax => {\n          // check if exists;\n          if (this._axioms[name].indexOf(ax) === -1) {\n            this._axioms[name].push(ax);\n          }\n        });\n      }\n    }\n  }\n}\n","import Resource from \"./Resource\";\n\nexport default class Relation extends Resource {\n  constructor() {\n    super();\n\n    this.domains = [];\n    this.ranges = [];\n    this.domainRangePairs = [];\n  }\n\n  addRange(r) {\n    if (this.ranges.indexOf(r) === -1) {\n      this.ranges.push(r);\n    }\n  }\n\n  addDomain(d) {\n    this.domains.push(d);\n  }\n\n  addDomainRangePair(d, r) {\n    this.domainRangePairs.push({ domain: d, range: r });\n  }\n\n  integrateResource(src) {\n    // adds stuff to this resource;\n    super.integrateResource(src);\n\n    src.domains.forEach(dom => {\n      if (this.domains.indexOf(dom) === -1) {\n        this.domains.push(dom);\n      }\n    });\n    src.ranges.forEach(ran => {\n      if (this.ranges.indexOf(ran) === -1) {\n        this.ranges.push(ran);\n      }\n    });\n\n    src.domainRangePairs.forEach(pair => {\n      this.domainRangePairs.push(pair);\n    });\n\n    // extend with domain and range stuff;\n  }\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseComponent from \"../Base/BaseComponent\";\n\nimport ResourceRelationModel from \"../Models/ResourceRelationModel\";\nimport Resource from \"../Models/Resource\";\nimport Relation from \"../Models/Relation\";\n\nexport default class VOWLParser extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VOWL_PARSER;\n    this.resultingModelObject = null;\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    const m = new ResourceRelationModel();\n    const processedData = this._preProcess();\n    this._processData(m, processedData);\n  };\n\n  _processData(model, dataObject) {\n    this.__processResources(model, dataObject);\n    this.__processRelations(model, dataObject);\n    this.resultObject.resultingModel = model;\n  }\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n  __processLabels(resource, modelResource) {\n    // unroll the labels as rdfs:labels;\n    if (resource.label) {\n      // label can be an object or a string?\n      if (typeof resource.label === \"string\") {\n        modelResource.addAnnotation(\"rdfs:label\", resource.label);\n      } else {\n        for (const name in resource.label) {\n          if (resource.label.hasOwnProperty(name)) {\n            if (name !== \"IRI-based\") {\n              modelResource.addAnnotation(\n                \"rdfs:label\",\n                resource.label[name],\n                name\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  __processComments(resource, modelResource) {\n    if (resource.comment) {\n      // label can be an object or a string?\n      if (typeof resource.comment === \"string\") {\n        modelResource.addAnnotation(\"rdfs:comment\", resource.comment);\n      } else {\n        for (const name in resource.comment) {\n          if (resource.comment.hasOwnProperty(name)) {\n            if (name !== \"IRI-based\") {\n              modelResource.addAnnotation(\n                \"rdfs:comment\",\n                resource.comment[name],\n                name\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  __processResourceAxioms(resource, modelResource) {\n    if (resource.equivalent) {\n      resource.equivalent.forEach(eq => {\n        modelResource.addAxiom(modelResource, \"owl:equivalentClass\", eq);\n      });\n    }\n    if (resource.superClasses) {\n      resource.superClasses.forEach(sc => {\n        modelResource.addAxiom(modelResource, \"rdfs:subClassOf\", sc);\n      });\n    }\n  }\n\n  __processRelationAxioms(relation, modelResource) {\n    //  ignore for now;\n  }\n\n  __processRelationAttributes(relation, modelRelation) {\n    // vowl has max one domain and one range ( if not given it will be owl:THING in VOWL\n    if (relation.domain) {\n      modelRelation.addDomain(relation.domain);\n    }\n    if (relation.range) {\n      modelRelation.addRange(relation.range);\n    }\n\n    if (relation.domain && relation.range) {\n      modelRelation.addDomainRangePair(relation.domain, relation.range);\n    }\n  }\n\n  __processResources(model, dataObject) {\n    dataObject.resources.forEach(resource => {\n      // if there is no IRI FOR THIS ONE check the type of VOWL;\n      if (!resource.iri) {\n        resource.__resourceIdentifier = resource.type; // kindOF processing type as IRI (e.g. OWL:THING or so)\n      } else {\n        resource.__resourceIdentifier = resource.iri;\n      }\n\n      const modelResource = new Resource();\n      // fetch info from it;\n      modelResource.resourceIdentifier(resource.__resourceIdentifier);\n      modelResource._resourceURI = resource.iri;\n      modelResource.addSemanticType(resource.type);\n\n      this.__processLabels(resource, modelResource);\n      this.__processComments(resource, modelResource);\n      this.__processResourceAxioms(resource, modelResource);\n      model.addResource(modelResource);\n    });\n  }\n\n  __processRelations(model, dataObject) {\n    dataObject.relations.forEach(relation => {\n      if (!relation.iri) {\n        relation.__resourceIdentifier = relation.type; // kindOF processing type as IRI (e.g. OWL:THING or so)\n      } else {\n        relation.__resourceIdentifier = relation.iri;\n      }\n\n      // VOWL provides axioms directly as relations, here ignore.\n      if (relation.type === \"rdfs:SubClassOf\") {\n        return;\n      }\n\n      const modelRelation = new Relation();\n      // fetch info from it;\n      modelRelation.resourceIdentifier(relation.__resourceIdentifier);\n      modelRelation._resourceURI = relation.iri;\n      modelRelation.addSemanticType(relation.type);\n\n      this.__processLabels(relation, modelRelation);\n      this.__processComments(relation, modelRelation);\n      this.__processRelationAxioms(relation, modelRelation);\n      this.__processRelationAttributes(relation, modelRelation);\n\n      model.addRelation(modelRelation);\n    });\n  }\n  _preProcess = () => {\n    // we merge the vowl json data ;\n    const classArray = this.inputDataAsJsonObject.class;\n    const propArray = this.inputDataAsJsonObject.property;\n\n    // how to merge that;\n    let resourceMap = new Map(classArray.map(d => [d.id, d]));\n    let relationMap = new Map(propArray.map(d => [d.id, d]));\n\n    const cAttr = this.inputDataAsJsonObject.classAttribute;\n    const pAttr = this.inputDataAsJsonObject.propertyAttribute;\n\n    cAttr.forEach(item => {\n      item.type = resourceMap.get(item.id).type;\n    });\n\n    // now use the new attributes array as map input\n    resourceMap = new Map(cAttr.map(d => [d.id, d]));\n\n    cAttr.forEach(item => {\n      if (item.superClasses) {\n        for (let i = 0; i < item.superClasses.length; i++) {\n          item.superClasses[i] = resourceMap.get(item.superClasses[i]).iri;\n        }\n      }\n      if (item.equivalent) {\n        for (let i = 0; i < item.equivalent.length; i++) {\n          item.equivalent[i] = resourceMap.get(item.equivalent[i]).iri;\n        }\n      }\n    });\n\n    pAttr.forEach(item => {\n      item.type = relationMap.get(item.id).type;\n      if (item.domain) {\n        // overwrite it to be an uri;\n        item.domain = resourceMap.get(item.domain).iri;\n      }\n      if (item.range) {\n        // overwrite it to be an uri;\n        item.range = resourceMap.get(item.range).iri;\n      }\n    });\n\n    // now use the new attributes array as map input\n    relationMap = new Map(pAttr.map(d => [d.id, d]));\n    pAttr.forEach(item => {\n      if (item.subproperty) {\n        for (let i = 0; i < item.subproperty.length; i++) {\n          item.subproperty[i] = relationMap.get(item.subproperty[i]).iri;\n        }\n      }\n      if (item.equivalent) {\n        for (let i = 0; i < item.equivalent.length; i++) {\n          item.equivalent[i] = relationMap.get(item.equivalent[i]).iri;\n        }\n      }\n      if (item.inverse) {\n        item.inverse = relationMap.get(item.inverse).iri;\n      }\n    });\n    return { resources: cAttr, relations: pAttr };\n  };\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseComponent from \"../Base/BaseComponent\";\n\nimport ResourceRelationModel from \"../Models/ResourceRelationModel\";\nimport Resource from \"../Models/Resource\";\nimport Relation from \"../Models/Relation\";\n\nexport default class SparqlParser extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_SPARQL_PARSER;\n\n    this.definitionMap = {\n      // assertions\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": \"assertion\",\n      \"rdf:type\": \"assertion\",\n      //axioms\n      \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": \"axiom\",\n      \"http://www.w3.org/2000/01/rdf-schema#subPropertyOf\": \"axiom\",\n      \"http://www.w3.org/2002/07/owl#equivalentClass\": \"axiom\",\n\n      // annotations\n      \"http://www.w3.org/2000/01/rdf-schema#comment\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#label\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": \"annotation\",\n\n      // relational assertions:\n      \"owl:ObjectProperty\": \"relationalAssertion\",\n      \"owl:DatatypeProperty\": \"relationalAssertion\"\n    };\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    const m = new ResourceRelationModel();\n    const processedData = this._preProcess();\n    this._processData(m, processedData);\n  };\n\n  _processData(model, dataObject) {\n    dataObject.forEach((statement, index) => {\n      const subject = statement.subject;\n      const predicate = statement.predicate;\n      const object = statement.object;\n\n      // needs to be processed as a whole triple\n      // subject resource\n      const subjectResource = new Resource();\n      const propertyRelation = new Relation();\n      const objectResource = new Resource();\n\n      // handling the identifier;\n      subjectResource.resourceIdentifier(subject.value);\n      if (this.validIRI(subject.value)) {\n        subjectResource._resourceURI = subject.value;\n      }\n\n      propertyRelation.resourceIdentifier(predicate.value);\n      if (this.validIRI(predicate.value)) {\n        propertyRelation._resourceURI = predicate.value;\n      }\n\n      objectResource.resourceIdentifier(object.value);\n      if (this.validIRI(object.value)) {\n        objectResource._resourceURI = object.value;\n      }\n      if (object.type === \"literal\") {\n        objectResource.addSemanticType(\"Literal\");\n      }\n\n      let ignoreSubjectResource = false;\n      let ignoreObjectResource = false;\n      let ignorePropertyRelation = false;\n\n      if (this.definitionMap[predicate.value] === \"assertion\") {\n        if (this.definitionMap[object.value] !== \"relationalAssertion\") {\n          subjectResource.addSemanticType(object.value);\n        } else {\n          console.log(\"TODO: add sematic type to the relation\");\n          // this holds only when we sparql an ontology with some defs;\n          //add this to the relation\n          ignorePropertyRelation = false;\n        }\n        // there can not be more data fro this triple;\n\n        model.addResource(subjectResource);\n        return;\n      }\n\n      /** axioms **/\n      switch (this.definitionMap[predicate.value]) {\n        case \"axiom\":\n          subjectResource.addAxiom(\n            subject.value,\n            predicate.value,\n            object.value\n          );\n          ignoreObjectResource = true;\n          break;\n        case \"annotation\":\n          if (object[\"xml:lang\"]) {\n            subjectResource.addAnnotation(\n              predicate.value,\n              object.value,\n              object[\"xml:lang\"]\n            );\n          } else {\n            subjectResource.addAnnotation(predicate.value, object.value);\n          }\n\n          ignoreObjectResource = true;\n          ignorePropertyRelation = true;\n          break;\n        default:\n          // this is where we should add a relation ship\n\n          // subjectResource.addAnnotation(predicate.value, object);\n          // when using instance data there is no domain or range definition oO so we need to imply it;\n\n          // check semantic types;\n\n          propertyRelation.addDomain(subject.value);\n          propertyRelation.addRange(object.value);\n          propertyRelation.addDomainRangePair(subject.value, object.value);\n\n          ignoreObjectResource = true;\n          ignoreSubjectResource = true;\n      }\n\n      if (!ignoreSubjectResource) {\n        model.addResource(subjectResource);\n      }\n      if (!ignorePropertyRelation) {\n        model.addRelation(propertyRelation);\n      }\n      if (!ignoreObjectResource) {\n        model.addResource(objectResource);\n      }\n    });\n    this.resultObject.resultingModel = model;\n  }\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n\n  _preProcess = () => {\n    console.log(\"SPARQL PARSER PREPROCESS\", this.inputDataAsJsonObject);\n\n    const output = []; // array holding the statements;\n    const input = this.inputDataAsJsonObject;\n    // assumptions;\n    // we always have a head and a results object\n\n    const binds = input.results.bindings;\n    const labels = input.head.vars;\n\n    binds.forEach(res => {\n      // create statements:\n      const aStatement = {};\n      // initialize attributes;\n      labels.forEach(label => {\n        aStatement[label] = res[label];\n      });\n\n      output.push(aStatement);\n    });\n\n    this.allStatements = [].concat(this.allStatements, output);\n    return output; // this can be useful for batch processing;\n  };\n\n  validIRI(str) {\n    const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n    return urlregex.test(str);\n  }\n}\n","// data handler is a base class;\n\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseModel from \"../Base/BaseModel\";\n\nexport default class VertexEdgeModel extends BaseModel {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MODEL; // default type;\n\n    // initialize the model with array of resources and relations;\n    this.modelAsJsonObject = { vertices: [], edges: [] };\n\n    // create mappers for resources and relations;\n    this.vertexeMap = {};\n    this.edgeMap = {};\n\n    this.__resourceIdentifier = \"__vertexEdgeIdentifier\"; // default, assume forced ids from outside;\n  }\n\n  vertexInMap(name) {\n    // this is for axioms checking;\n    return this.__isInMap__(this.vertexeMap, name);\n  }\n\n  getVertexFromName(name) {\n    return this.vertexeMap[name];\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __isInMap__ = (map, identifier) => {\n    if (!identifier) {\n      console.error(\n        \"No Identifier Found in resource! give it unique ids as properties and set the resourceIdentifier name (setResourceIdentifier('ID'))\"\n      );\n    } else {\n      return !!map[identifier];\n    }\n\n    return true; // if is in map (per default this blocks to add items to model)!\n  };\n\n  __resourceIdentifier__ = resourceObject => {\n    return resourceObject[this.__resourceIdentifier];\n  };\n\n  /** -------------- Exposed Functions --------------**/\n\n  addVertex = vertex => {\n    if (\n      !this.__isInMap__(this.vertexeMap, this.__resourceIdentifier__(vertex))\n    ) {\n      this.__integrateVertexEdgeItem(\n        this.modelAsJsonObject.vertices,\n        this.vertexeMap,\n        vertex\n      );\n    }\n  };\n\n  addEdge = edge => {\n    if (!this.__isInMap__(this.edgeMap, this.__resourceIdentifier__(edge))) {\n      this.__integrateVertexEdgeItem(\n        this.modelAsJsonObject.edges,\n        this.edgeMap,\n        edge\n      );\n    }\n  };\n\n  __integrateVertexEdgeItem = (target, map, resource) => {\n    target.push(resource);\n    map[this.__resourceIdentifier__(resource)] = resource;\n  };\n}\n","export default class Edge {\n  constructor() {\n    this.resourceReference = null;\n  }\n}\n","export default class Vertex {\n  constructor() {\n    this.resourceReference = null;\n    this.__outgoingEdges = [];\n    this.__incomingEdges = [];\n  }\n\n  addOutgoingEdge(edge) {\n    this.__outgoingEdges.push(edge);\n  }\n\n  addIncomingEdge(edge) {\n    this.__incomingEdges.push(edge);\n  }\n}\n","import BaseComponent from \"../Base/BaseComponent\";\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport VertexEdgeModel from \"../Models/VertexEdgeModel\";\nimport Edge from \"../Models/Edge\";\nimport Vertex from \"../Models/Vertex\";\nimport { validIRI } from \"../Base/globalHelper\";\n\nexport default class BaseVertexEdgeMapper extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_RESOURCE_RELATION_MODEL;\n    this.hasCompatibleInput = false;\n\n    // default definition map!\n    this.definitionMap = {\n      // mapping definitions; // defines the mapping from resource to vertex\n      vertexMapper: {\n        __vertexType: \"_semanticType\", // how do we handle multiple vertex type? << we dont node link model does!\n        __vertexEdgeIdentifier: \"__resourceIdentifier\",\n        __displayName: \"_annotations.rdfs:label\" // will fetch the full object with language defs! node link model gets prefLanguage tag\n      },\n\n      edgeMapper: {\n        __edgeType: \"_semanticType\", // how do we handle multiple vertex type? << we dont node link model does!\n        __vertexEdgeIdentifier: \"__resourceIdentifier\",\n        __displayName: \"_annotations.rdfs:label\", // will fetch the full object with language defs! node link model gets prefLanguage tag\n\n        __domainRangePair: \"domainRangePairs\" // just renaming it\n      }\n    };\n  }\n\n  /** -------------- EXPOSED FUNCTIONS -------------- DO NOT OVERWRITE **/\n  setInputData = inputDataAsJsonObject => {\n    this.inputDataAsJsonObject = inputDataAsJsonObject;\n\n    // check if type is compatible;\n    if (this.requestedInputType === inputDataAsJsonObject.resultingModel.type) {\n      this.hasCompatibleInput = true;\n    } else {\n      console.error(\n        \"INPUT MODEL IS OF TYPE \" +\n          inputDataAsJsonObject.resultingModel.type +\n          \"EXPECTED: \" +\n          this.requestedInputType\n      );\n    }\n  };\n\n  __run__ = () => {\n    if (this.hasCompatibleInput) {\n      this.__mapInputModel();\n    } else {\n      console.error(\"CANCELLED!\");\n      this.resultObject.resultingModel = null;\n    }\n  };\n\n  __adjustEdgeDisplayName(relations) {\n    relations.forEach(r => {\n      if (!r.__displayName) {\n        r.__displayName = r.__vertexEdgeIdentifier;\n      }\n    });\n  }\n\n  __mapInputModel = () => {\n    // obtain the data items;\n    const model = this.inputDataAsJsonObject.resultingModel;\n    const modelData = model.getResult();\n\n    const veModel = new VertexEdgeModel();\n    veModel.setResourceIdentifier(\"__vertexEdgeIdentifier\"); // lookup name\n    this.__mapResourcesToVertex(veModel, modelData.resources);\n    this.__mapRelationsToEdge(veModel, modelData.relations);\n    this.__adjustEdgeDisplayName(veModel.modelAsJsonObject.edges);\n\n    this.resultObject.resultingModel = veModel;\n  };\n\n  __mapResourcesToVertex(model, dataArray) {\n    // note no arrow function, otherwise model will not be updated(call by ref)\n    dataArray.forEach(item => {\n      const mappedVertex = this._createVertexFromResource(item);\n      model.addVertex(mappedVertex);\n    });\n\n    // ------------------------AXIOMS HANDLING -----------------------\"\n\n    // get model Vertices;\n    const vertexList = model.modelAsJsonObject.vertices;\n    vertexList.forEach(vertex => {\n      // check if vertex._annotations exists;\n      if (\n        vertex.resourceReference._axioms &&\n        Object.keys(vertex.resourceReference._axioms).length > 0\n      ) {\n        const axiomsArray = vertex.resourceReference._axioms;\n        for (const name in axiomsArray) {\n          if (axiomsArray.hasOwnProperty(name)) {\n            // this a particular axiom;\n            const pAx = axiomsArray[name];\n            pAx.forEach(axiom => {\n              if (!model.vertexInMap(axiom)) {\n                console.error(\n                  \"VERTEX DOES NOT EXIST IN THE MAP: TODO CREATE ONE! \"\n                );\n              }\n              const targetVertex = model.getVertexFromName(axiom);\n              const axiomEdge = this.__createAxiomEdge(\n                vertex,\n                name,\n                targetVertex\n              );\n              model.addEdge(axiomEdge);\n            });\n          }\n        }\n      }\n    });\n  }\n\n  __createAxiomEdge(srcVertex, axiomName, targetVertex) {\n    const anEdge = new Edge();\n    anEdge.resourceReference = axiomName;\n    anEdge.__edgeType = \"axiomEdge\";\n    anEdge.__edgeAxiom = axiomName;\n    anEdge.__vertexEdgeIdentifier =\n      srcVertex.__vertexEdgeIdentifier +\n      \"$$\" +\n      axiomName +\n      \"$$\" +\n      targetVertex.__vertexEdgeIdentifier;\n    anEdge.__displayName = axiomName;\n    anEdge.__source = srcVertex;\n    anEdge.__target = targetVertex;\n\n    srcVertex.addOutgoingEdge(anEdge);\n    targetVertex.addIncomingEdge(anEdge);\n\n    return anEdge;\n  }\n\n  _createVertexFromResource = item => {\n    const aVertex = new Vertex();\n    aVertex.resourceReference = item;\n\n    // create the mappings;\n    const vMapper = this.definitionMap.vertexMapper;\n    for (const name in vMapper) {\n      if (vMapper.hasOwnProperty(name)) {\n        // fetch data;\n        const dataPath = vMapper[name];\n        if (dataPath.indexOf(\".\") !== -1) {\n          // need to perform nested getter;\n          const tokens = dataPath.split(\".\");\n          let dataItem = item;\n          for (let i = 0; i < tokens.length; i++) {\n            dataItem = dataItem[tokens[i]];\n          }\n          aVertex[name] = dataItem;\n        } else {\n          // single data access in item\n          aVertex[name] = item[dataPath];\n        }\n      }\n    }\n    return aVertex;\n  };\n\n  __mapRelationsToEdge(model, dataArray) {\n    // note no arrow function, otherwise model will not be updated(call by ref)\n    dataArray.forEach(item => {\n      const mappedEdge = this._createEdgeFromRelation(item);\n      for (let i = 0; i < mappedEdge.__domainRangePair.length; i++) {\n        const newEdge = this._createEdgeFromRelation(item);\n        const source = newEdge.__domainRangePair[i].domain;\n        const target = newEdge.__domainRangePair[i].range;\n        const src_vertex = model.getVertexFromName(source);\n        const tar_vertex = model.getVertexFromName(target);\n\n        if (src_vertex) {\n          newEdge.__source = src_vertex;\n          src_vertex.addOutgoingEdge(newEdge);\n        } else {\n          // console.warn(\"Could not find source vertex for name \", source);\n        }\n\n        if (tar_vertex) {\n          newEdge.__target = tar_vertex;\n          tar_vertex.addOutgoingEdge(newEdge);\n        } else {\n          if (\n            model.getVertexFromName(\n              newEdge.__vertexEdgeIdentifier + \"$$\" + target\n            )\n          ) {\n            const tempVertex = model.getVertexFromName(\n              newEdge.__vertexEdgeIdentifier + \"$$\" + target\n            );\n            newEdge.__target = tempVertex;\n            tempVertex.addIncomingEdge(mappedEdge);\n          } else {\n            const aVertex = new Vertex();\n            aVertex.resourceReference = target;\n            if (validIRI(target)) {\n              // create the id for this vertex;\n              aVertex.__vertexEdgeIdentifier = target;\n            } else {\n              aVertex.__vertexType = \"Literal\";\n              // its id is the full tripple;\n              aVertex.__vertexEdgeIdentifier =\n                newEdge.__vertexEdgeIdentifier + \"$$\" + target;\n              aVertex.__displayName = target; // this is the literal value of something we have not identified\n            }\n            // we assume that all resources are created (the ones which could be created)\n            // otherwise we point on a literal or a resource that has not been created>> means external resource or\n            // not jet read any information about that;\n            aVertex.addIncomingEdge(newEdge);\n            model.addVertex(aVertex);\n            newEdge.__target = aVertex;\n          }\n        }\n        if (model.edgeMap[newEdge.__vertexEdgeIdentifier]) {\n          const clonedEdge = new Edge();\n          const sourceEdge = model.edgeMap[newEdge.__vertexEdgeIdentifier];\n          for (const name in sourceEdge) {\n            if (sourceEdge.hasOwnProperty(name)) {\n              if (name !== \"__domainRangePair\") {\n                clonedEdge[name] = sourceEdge[name];\n              }\n            }\n          }\n          clonedEdge.__source = newEdge.__source;\n          clonedEdge.__target = newEdge.__target;\n\n          if (!clonedEdge.__displayName) {\n            clonedEdge.__displayName = clonedEdge.__vertexEdgeIdentifier;\n          }\n          clonedEdge.__vertexEdgeIdentifier += \"$$ClonedEdge\" + i;\n\n          model.addEdge(clonedEdge);\n        } else {\n          model.addEdge(newEdge);\n        }\n      }\n    });\n  }\n\n  _createEdgeFromRelation = item => {\n    const anEdge = new Edge();\n    anEdge.resourceReference = item;\n\n    // create based on the mapping def;\n    const eMapper = this.definitionMap.edgeMapper;\n    for (const name in eMapper) {\n      if (eMapper.hasOwnProperty(name)) {\n        // fetch data;\n        const dataPath = eMapper[name];\n        if (dataPath.indexOf(\".\") !== -1) {\n          // need to perform nested getter;\n          const tokens = dataPath.split(\".\");\n          let dataItem = item;\n          for (let i = 0; i < tokens.length; i++) {\n            dataItem = dataItem[tokens[i]];\n          }\n          anEdge[name] = dataItem;\n        } else {\n          // single data access in item\n          anEdge[name] = item[dataPath];\n        }\n      }\n    }\n    return anEdge;\n  };\n}\n","export default class Node {\n  constructor() {\n    this.resourceReference = null;\n    this.__outgoingLinks = [];\n    this.__incomingLinks = [];\n    this.__nodeType = [];\n    this.__aggregatedLink = [];\n  }\n\n  addAggregatedLink(link) {\n    this.__aggregatedLink.push(link);\n  }\n\n  addOutgoingLink(link) {\n    this.__outgoingLinks.push(link);\n  }\n\n  addIncomingLink(link) {\n    this.__incomingLinks.push(link);\n  }\n\n  isNodeOfType(type) {\n    for (let i = 0; i < this.__nodeType.length; i++) {\n      if (this.__nodeType[i] === type) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","export default class Link {\n  constructor() {\n    this.resourceReference = null;\n  }\n}\n","import { validIRI } from \"./globalHelper\";\nexport default class LanguageTools {\n  static textInLanguage = (textObject, preferredLanguage) => {\n    if (typeof textObject === \"undefined\") {\n      return undefined;\n    }\n\n    if (typeof textObject === \"string\") {\n      if (validIRI(textObject)) {\n        let suffix = textObject.split(\"#\")[1];\n        if (!suffix) {\n          const tokens = textObject.split(\"/\");\n          suffix = tokens[tokens.length - 1];\n        }\n        return suffix;\n      }\n      return textObject;\n    }\n\n    if (preferredLanguage && textObject.hasOwnProperty(preferredLanguage)) {\n      return textObject[preferredLanguage][0];\n    }\n\n    let textForLanguage = this.searchLanguage(textObject, \"en\");\n    if (textForLanguage) {\n      return textForLanguage[0];\n    }\n    textForLanguage = this.searchLanguage(textObject, \"default\");\n    if (textForLanguage) {\n      return textForLanguage[0];\n    }\n    return null;\n  };\n\n  static IRI2Label(prefixMap, IRI) {\n    let suffix = IRI.split(\"#\")[1];\n    let pref = \"\";\n    if (!suffix) {\n      const tokens = IRI.split(\"/\");\n      suffix = tokens[tokens.length - 1];\n      for (let i = 0; i < tokens.length - 1; i++) {\n        pref += tokens[i];\n      }\n      pref += \"/\";\n    } else {\n      pref = IRI.split(\"#\")[0];\n      pref += \"#\";\n    }\n    let output = \"\";\n    const prName = prefixMap[pref];\n    if (prName) {\n      output = prName + \":\" + suffix;\n    } else {\n      output = suffix;\n    }\n    return output;\n  }\n\n  static searchLanguage = (textObject, preferredLanguage) => {\n    for (const language in textObject) {\n      if (\n        language === preferredLanguage &&\n        textObject.hasOwnProperty(language)\n      ) {\n        return textObject[language];\n      }\n    }\n  };\n}\n","// data handler is a base class;\n\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseModel from \"../Base/BaseModel\";\n\nexport default class NodeLinkModel extends BaseModel {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_NODE_LINK_MODEL; // default type;\n\n    // initialize the model with array of resources and relations;\n    this.modelAsJsonObject = { nodes: [], links: [] };\n\n    // create mappers for resources and relations;\n    this.nodeMap = {};\n    this.linkMap = {};\n\n    this.__resourceIdentifier = \"__nodeLinkIdentifier\"; // default, assume forced ids from outside;\n  }\n\n  // nodeInMap(name) {\n  //   // this is for axioms checking;\n  //   return this.__isInMap__(this.nodeMap, name);\n  // }\n\n  getNodeFromName(name) {\n    return this.nodeMap[name];\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __isInMap__ = (map, identifier) => {\n    if (!identifier) {\n      console.error(\n        \"No Identifier Found in resource! give it unique ids as properties and set the resourceIdentifier name (setResourceIdentifier('ID'))\"\n      );\n    } else {\n      return !!map[identifier];\n    }\n\n    return true; // if is in map (per default this blocks to add items to model)!\n  };\n\n  __isEqual__ = (a, b) => {\n    // input a and b are objects with properties where some are maybe equal\n    return false;\n  };\n\n  __resourceIdentifier__ = resourceObject => {\n    return resourceObject[this.__resourceIdentifier];\n  };\n\n  /** -------------- Exposed Functions --------------**/\n\n  addNode = node => {\n    if (!this.__isInMap__(this.nodeMap, this.__resourceIdentifier__(node))) {\n      this.__integrateNodeLinkItem(\n        this.modelAsJsonObject.nodes,\n        this.nodeMap,\n        node\n      );\n    }\n  };\n\n  addLink = link => {\n    if (!this.__isInMap__(this.linkMap, this.__resourceIdentifier__(link))) {\n      this.__integrateNodeLinkItem(\n        this.modelAsJsonObject.links,\n        this.linkMap,\n        link\n      );\n    }\n  };\n\n  mergeNodes(src, tar) {\n    tar.__SHADOWNODE = true;\n    src.__displayName += \", \" + tar.__displayName;\n    if (!src.__hasEquivalentClasses) {\n      src.__hasEquivalentClasses = [];\n    }\n    src.__hasEquivalentClasses.push(tar); // could be useful for later;\n    // get its links and move them to the src node;\n\n    tar.__incomingLinks.forEach(inLink => {\n      if (!inLink.__SHADOWLINK) {\n        console.error(\"TODO MERGE THE LINKS TO THE SRC NODE\");\n        console.log(inLink);\n      }\n    });\n\n    tar.__outgoingLinks.forEach(outLink => {\n      if (!outLink.__SHADOWLINK) {\n        console.error(\"TODO MERGE THE LINKS TO THE SRC NODE\");\n        console.log(outLink);\n      }\n    });\n  }\n\n  removeShadowsFromModel() {\n    const nodesToRemove = [];\n    const linksToRemove = [];\n    this.modelAsJsonObject.nodes.forEach(node => {\n      if (node.__SHADOWNODE) {\n        // remove from map;\n        nodesToRemove.push(node);\n        delete this.nodeMap[node[this.__resourceIdentifier]];\n      }\n    });\n    this.modelAsJsonObject.links.forEach(link => {\n      if (link.__SHADOWLINK) {\n        // remove from map;\n        linksToRemove.push(link);\n        delete this.linkMap[link[this.__resourceIdentifier]];\n      }\n    });\n\n    // remove them from array of vertices;\n    nodesToRemove.forEach(n => {\n      const idToRemove = this.modelAsJsonObject.nodes.indexOf(n);\n      this.modelAsJsonObject.nodes.splice(idToRemove, 1);\n    });\n\n    linksToRemove.forEach(l => {\n      const idToRemove = this.modelAsJsonObject.links.indexOf(l);\n      this.modelAsJsonObject.links.splice(idToRemove, 1);\n    });\n  }\n\n  __integrateNodeLinkItem = (target, map, resource) => {\n    target.push(resource);\n    map[this.__resourceIdentifier__(resource)] = resource;\n  };\n}\n","// data handler is a base class;\nimport BaseComponent from \"../Base/BaseComponent\";\nimport * as $CONST from \"../Base/BaseComponentConstants\";\n\nimport Node from \"../Models/Node\";\nimport Link from \"../Models/Link\";\nimport LanguageTools from \"../Base/LanguageTools\";\nimport { validIRI } from \"../Base/globalHelper\";\nimport NodeLinkModel from \"../Models/NodeLinkModel\";\n\nexport default class NodeLinkMapper extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_VERTEX_EDGE_MODEL;\n    this.hasCompatibleInput = false;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\",\n      \"http://www.w3.org/2002/07/owl#\": \"owl\",\n      \"http://www.w3.org/2001/XMLSchema#\": \"xsd\",\n      \"http://purl.org/dc/elements/1.1/\": \"dc\",\n      \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n      \"http://xmlns.com/wot/0.1/\": \"wot\",\n      \"http://www.w3.org/2003/06/sw-vocab-status/ns#\": \"vs\",\n      \"http://xmlns.com/foaf/0.1/\": \"foaf\",\n      \"http://www.w3.org/2004/02/skos/core#\": \"skos\"\n    };\n\n    this.definitionMap = {\n      nodeMapper: {\n        __nodeType: \"__vertexType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\"\n      },\n      linkMapper: {\n        __linkType: \"__edgeType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\",\n        __linkAxiom: \"__edgeAxiom\",\n        __source: \"__source\",\n        __target: \"__target\"\n      },\n      nodeMerge: [{}],\n      nodeSplit: [{}],\n      auxiliaryNodes: [] // here empty\n    };\n  }\n\n  /** -------------- EXPOSED FUNCTIONS -------------- DO NOT OVERWRITE **/\n  setInputData = inputDataAsJsonObject => {\n    this.inputDataAsJsonObject = inputDataAsJsonObject;\n    // check if type is compatible;\n    if (this.requestedInputType === inputDataAsJsonObject.resultingModel.type) {\n      this.hasCompatibleInput = true;\n    } else {\n      console.error(\n        \"INPUT MODEL IS OF TYPE \" +\n          inputDataAsJsonObject.resultingModel.type +\n          \"EXPECTED: \" +\n          this.requestedInputType\n      );\n    }\n  };\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = () => {\n    if (this.hasCompatibleInput) {\n      this.__mapInputModel();\n    } else {\n      console.error(\"CANCELLED!\");\n      this.resultObject.resultingModel = null;\n    }\n  };\n\n  __mapInputModel = () => {\n    // obtain the data items;\n    const model = this.inputDataAsJsonObject.resultingModel;\n    const modelData = model.getResult();\n    const nlModel = new NodeLinkModel();\n    nlModel.setResourceIdentifier(\"__nodeLinkIdentifier\"); // lookup name\n\n    this.__mapVerticesToNodes(nlModel, modelData.vertices);\n    this._mapEdgesToLinks(nlModel, modelData.edges);\n\n    this._mergeAndSplitNodes(nlModel);\n    this._introduceAuxiliaryNode(nlModel);\n    this._autoAssignLinkTypesBasedOnTarget(nlModel.getResult().links);\n    this.__aggregateLinks(nlModel);\n    this.resultObject.resultingModel = nlModel;\n  };\n\n  __aggregateLinks(model) {\n    const def = this.definitionMap.aggregate;\n    if (def && def.length > 0) {\n      model.getResult().links.forEach(link => {\n        let allowAggregate = false;\n        if (Array.isArray(link.__linkType)) {\n          link.__linkType.forEach(t => {\n            if (def.indexOf(t) !== -1) {\n              allowAggregate = true;\n            }\n          });\n        }\n\n        if (allowAggregate || def.indexOf(link.__linkType) !== -1) {\n          link.__source.addAggregatedLink(link);\n          link.__target.__SHADOWNODE = true;\n          link.__SHADOWLINK = true;\n        }\n      });\n      model.removeShadowsFromModel();\n    }\n  }\n\n  _auxApplies(link, constraints) {\n    for (let i = 0; i < constraints.length; i++) {\n      for (const name in constraints[i]) {\n        if (constraints[i].hasOwnProperty(name)) {\n          //name is the datatype value\n\n          if (name === \"edgeType\") {\n            const lT = link.__linkType;\n            const cT = constraints[i][name];\n\n            if (typeof lT === \"string\") {\n              for (let j = 0; j < cT.length; j++) {\n                if (lT.toLowerCase() === cT[j].toLowerCase()) {\n                  return {\n                    auxLinks: constraints[i][\"auxiliaryLinks\"],\n                    auxNode: constraints[i][\"auxiliaryNode\"]\n                  };\n                }\n              }\n            } else {\n              for (let k = 0; k < lT.length; k++) {\n                for (let j = 0; j < cT.length; j++) {\n                  if (lT[k].toLowerCase() === cT[j].toLowerCase()) {\n                    return {\n                      auxLinks: constraints[i][\"auxiliaryLinks\"],\n                      auxNode: constraints[i][\"auxiliaryNode\"]\n                    };\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  _introduceAuxiliaryNode(model) {\n    if (this.definitionMap.auxiliaryNodes) {\n      const def = this.definitionMap.auxiliaryNodes;\n      const links = model.modelAsJsonObject.links;\n\n      links.forEach(link => {\n        // console.log(link.__linkType);\n        const auxDef = this._auxApplies(link, def);\n        // console.log(\"AUX NODES applies? \" + link.__linkType);\n        // console.log(auxDef);\n        if (auxDef !== false) {\n          link.__SHADOWLINK = true;\n\n          // create a link for the property using the auxDef.auxiliaryNodeDefinition;\n          const auxNode = new Node();\n          if (auxDef.auxNode[0] === \"__displayName\") {\n            auxNode.__displayName = link.__displayName;\n          } else {\n            auxNode.__displayName = auxDef.auxNode[0];\n          }\n          auxNode.__nodeType = [auxDef.auxNode[1]];\n          auxNode.resourceReference = link;\n          // create the links;\n          //   console.log(auxDef);\n          const auxLink1 = new Link();\n          const link1Def = auxDef.auxLinks.source;\n          auxLink1.__displayName = link1Def[0];\n          auxLink1.__linkType = link1Def[1];\n          auxLink1.__source = auxNode;\n          auxLink1.__target = link.__source;\n\n          const auxLink2 = new Link();\n          const link2Def = auxDef.auxLinks.target;\n          auxLink2.__displayName = link2Def[0];\n          auxLink2.__linkType = link2Def[1];\n          auxLink2.__source = auxNode;\n          auxLink2.__target = link.__target;\n\n          // todo, adjust ids;\n          auxNode.__nodeLinkIdentifier =\n            link.__source.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__target.__nodeLinkIdentifier +\n            \"$$_AUXNODE\";\n\n          auxLink1.__nodeLinkIdentifier =\n            link.__source.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__target.__nodeLinkIdentifier +\n            \"$$_AUXLINK1\";\n\n          auxLink2.__nodeLinkIdentifier =\n            link.__source.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__nodeLinkIdentifier +\n            \"$$\" +\n            link.__target.__nodeLinkIdentifier +\n            \"$$_AUXLINK2\";\n\n          model.addNode(auxNode);\n          model.addLink(auxLink1);\n          model.addLink(auxLink2);\n        }\n      });\n    }\n    model.removeShadowsFromModel();\n  }\n  _mergeAndSplitNodes(model) {\n    this._mergeNodes(model);\n    model.removeShadowsFromModel();\n\n    this._splitNodes(model); // this creates clones ad redirects the links;\n    model.removeShadowsFromModel();\n  }\n  _autoAssignLinkTypesBasedOnTarget(links) {\n    links.forEach(link => {\n      // check if target has a node type\n      if (!link.__target.__nodeType) {\n        // adjust to be a node;\n        link.__target.__nodeType = \"Unknown NodeType\";\n      }\n\n      if (\n        link.__target.__nodeType === \"Literal\" ||\n        link.__target.__nodeType.indexOf(\"Literal\") !== -1\n      ) {\n        link.__linkType = \"owl:datatypeProperty\";\n      } else {\n        if (\n          !link.__linkAxiom &&\n          (!link.__linkType || link.__linkType.length === 0)\n        ) {\n          link.__linkType = \"owl:objectProperty\";\n        }\n      }\n    });\n  }\n  _splitNodes(model) {\n    const links = model.modelAsJsonObject.links;\n    const splitDefs = this.definitionMap.nodeSplit;\n\n    const linksToSplit = [];\n    links.forEach(link => {\n      const splitAppliesTarget = this._splitAppliesOnTarget(link, splitDefs);\n      if (splitAppliesTarget) {\n        linksToSplit.push(link);\n      }\n    });\n    let cloneIterator = 0;\n    linksToSplit.forEach(link => {\n      // what we do is we clone the target node and adjust the link;\n      const nodeToClone = link.__target;\n      nodeToClone.__SHADOWNODE = true; // will be removed\n      const newNode = new Node();\n      for (const name in nodeToClone) {\n        if (nodeToClone.hasOwnProperty(name)) {\n          if (name !== \"__outgoingLinks\" && name !== \"__incomingLinks\") {\n            newNode[name] = nodeToClone[name];\n          }\n        }\n      }\n\n      newNode.__nodeLinkIdentifier =\n        newNode.__nodeLinkIdentifier + \"$$Clone\" + cloneIterator;\n      newNode.__SHADOWNODE = false;\n      model.addNode(newNode);\n      link.__target = newNode;\n      cloneIterator++;\n    });\n  }\n\n  _mergeNodes(model) {\n    // we merge nodes based on the links they have;\n\n    const links = model.modelAsJsonObject.links;\n    const mergeDefs = this.definitionMap.nodeMerge;\n\n    const linksToMerge = [];\n    links.forEach(link => {\n      const mergeApplies = this._mergeApplies(link, mergeDefs);\n      if (mergeApplies) {\n        link.__SHADOWLINK = true;\n        linksToMerge.push(link);\n      }\n    });\n    linksToMerge.forEach(link => {\n      const tokens = link.__nodeLinkIdentifier.split(\"$$\");\n      const srcNode = model.getNodeFromName(tokens[0]);\n      const tarNode = model.getNodeFromName(tokens[2]);\n      // merge the nodes;\n      model.mergeNodes(srcNode, tarNode);\n    });\n  }\n\n  _mergeApplies(link, constraints) {\n    let compares = 0;\n    let validCompares = 0;\n    let applies = false;\n    let hasDef = false;\n    constraints.forEach(cons => {\n      for (const name in cons) {\n        if (cons.hasOwnProperty(name)) {\n          //name is the datatype value\n          hasDef = true;\n          const linkData = link[name];\n          const compareValue = cons[name];\n          compares++;\n          if (linkData === compareValue) {\n            validCompares++;\n          }\n        }\n      }\n      // found at least one definition that requests this merge;\n      if (hasDef && validCompares === compares) {\n        applies = true;\n        return applies;\n      }\n    });\n    return applies;\n  }\n  _splitAppliesOnTarget(link, constraints) {\n    let compares = 0;\n    let validCompares = 0;\n    let applies = false;\n    let hasDef = false;\n    constraints.forEach(cons => {\n      for (const name in cons) {\n        if (cons.hasOwnProperty(name)) {\n          //name is the datatype value\n          hasDef = true;\n          if (name === \"constraints\" && cons[name] === \"none\") {\n            // do nothing but tell that the validation suits the constraints;\n            compares++;\n            validCompares++;\n          } else {\n            // check for validation\n            if (name === \"type\") {\n              // check for type of the target node;\n              //compare against an array of types\n\n              const nodeTypesToApply = cons[name];\n              for (let i = 0; i < nodeTypesToApply.length; i++) {\n                const t = nodeTypesToApply[i];\n                if (link.__target.isNodeOfType(t)) {\n                  validCompares++;\n                }\n              }\n              compares++;\n            }\n          }\n        }\n      }\n      // found at least one definition that requests this merge;\n      if (hasDef && validCompares === compares) {\n        applies = true;\n        return applies;\n      }\n    });\n    return applies;\n  }\n\n  __mapVerticesToNodes(model, dataArray) {\n    // note no arrow function, otherwise model will not be updated(call by ref)\n\n    dataArray.forEach(item => {\n      const aNode = this._createNodeFromVertex(item);\n      // set displayName to be a string! ;\n      let langRep = LanguageTools.textInLanguage(aNode.__displayName);\n      if (langRep === null || langRep === undefined) {\n        if (validIRI(item.__vertexEdgeIdentifier)) {\n          langRep = LanguageTools.IRI2Label(\n            this.prefixMapperL2S,\n            item.__vertexEdgeIdentifier\n          );\n        } else {\n          console.error(\n            \"COULD NOT FIND A LABEL FOR VERTEX: \" + item.__vertexEdgeIdentifier\n          );\n        }\n      }\n      aNode.__displayName = langRep;\n      model.addNode(aNode);\n    });\n\n    // process Axioms;\n  }\n\n  _createNodeFromVertex = item => {\n    const aNode = new Node();\n    aNode.resourceReference = item;\n\n    // create the mappings;\n    const nMapper = this.definitionMap.nodeMapper;\n    for (const name in nMapper) {\n      if (nMapper.hasOwnProperty(name)) {\n        // fetch data;\n        const dataPath = nMapper[name];\n        if (dataPath.indexOf(\".\") !== -1) {\n          // need to perform nested getter;\n          const tokens = dataPath.split(\".\");\n          let dataItem = item;\n          for (let i = 0; i < tokens.length; i++) {\n            dataItem = dataItem[tokens[i]];\n          }\n          aNode[name] = dataItem;\n        } else {\n          // single data access in item\n          aNode[name] = item[dataPath];\n        }\n      }\n    }\n\n    return aNode;\n  };\n\n  _createLinkFromEdge = item => {\n    const aLink = new Link();\n    aLink.resourceReference = item;\n\n    // create the mappings;\n    const mapper = this.definitionMap.linkMapper;\n    for (const name in mapper) {\n      if (mapper.hasOwnProperty(name) && name !== \"mapAxiom\") {\n        // fetch data;\n        const dataPath = mapper[name];\n        if (dataPath.indexOf(\".\") !== -1) {\n          // need to perform nested getter;\n          const tokens = dataPath.split(\".\");\n          let dataItem = item;\n          for (let i = 0; i < tokens.length; i++) {\n            dataItem = dataItem[tokens[i]];\n          }\n          aLink[name] = dataItem;\n        } else {\n          // single data access in item\n          aLink[name] = item[dataPath];\n        }\n      }\n    }\n\n    // adjust display name\n    // adjust link type if it is derived from axiomEdge\n    if (aLink.__linkType === \"axiomEdge\") {\n      aLink.__linkType = \"axiomLink\";\n    }\n    aLink.__displayName = LanguageTools.textInLanguage(aLink.__displayName);\n\n    return aLink;\n  };\n\n  _mapEdgesToLinks(model, dataArray) {\n    // note no arrow function, otherwise model will not be updated(call by ref)\n\n    dataArray.forEach(item => {\n      // check for axioms;\n\n      const link = this._createLinkFromEdge(item);\n      // find node for linkSource:\n      const src_node = model.getNodeFromName(\n        item.__source.__vertexEdgeIdentifier\n      );\n      const tar_node = model.getNodeFromName(\n        item.__target.__vertexEdgeIdentifier\n      );\n      if (src_node) {\n        link.__source = src_node;\n        src_node.addOutgoingLink(link);\n      }\n\n      if (tar_node) {\n        link.__target = tar_node;\n        tar_node.addIncomingLink(link);\n      }\n\n      model.addLink(link);\n\n      // // provide src and tar;\n      // item.__source.forEach(src => {\n      //   // find node in model;\n      //   const node = model.getNodeFromName(\n      //     item.__source.__vertexEdgeIdentifier\n      //   );\n      //   if (!link.__source) {\n      //     link.__source = node;\n      //   }\n      //   node.addOutgoingLink(link);\n      // });\n      // item.__targets.forEach(src => {\n      //   // find node in model;\n      //   const node = model.getNodeFromName(src.__vertexEdgeIdentifier);\n      //   if (!link.__target) {\n      //     link.__target = node;\n      //   }\n      //   // link.__targets.push(node);\n      //   node.addOutgoingLink(link);\n      // });\n      // model.addLink(link);\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class RenderingModuleConfig extends Component {\n  componentDidMount() {}\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // check if the state is equal to the renderingConfig;\n    // let requireUpdate = false;\n    //\n    // for (const name in this.state) {\n    //   if (this.state.hasOwnProperty(name)) {\n    //     // check if the store has the equal props\n    //     const value = this.props.store.renderingModuleConfig[name];\n    //     if (value !== this.state[name]) {\n    //       requireUpdate = true;\n    //     }\n    //   }\n    // }\n    //\n    // requireUpdate = true;\n    //\n    // if (requireUpdate) {\n    //   this.props.updateRenderingModuleConfiguration(this.state);\n    // }\n  };\n\n  render() {\n    return <div>Hello</div>;\n  }\n}\n\nRenderingModuleConfig.propTypes = {\n  store: PropTypes.object,\n  nodeLinkModel: PropTypes.object\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport { updateRenderingModuleConfiguration } from \"./redux/actions\";\nimport { connect } from \"react-redux\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport * as dataSources from \"../configs/datasources\";\nimport VisualItemConfiguration from \"./VisualItemConfigurator\";\n\nclass RenderingModuleConfig extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph_mouseZoom: true,\n      graph_mouseDrag: true,\n      node_mouseDrag: true,\n      node_mouseHover: true,\n      node_mouseSingleClick: true,\n      node_mouseDoubleClick: true,\n      link_mouseDrag: true,\n      link_mouseHover: true,\n      // todo: link clicks ;\n      graphBgColor: \"#FFFFFF\",\n\n      // internal state stuffl\n      configSelectionOpen: false,\n      configSelected: \"Default\"\n    };\n\n    this.availableConfigs = dataSources.default.availableRenderingConfigs;\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.props.initialState });\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // check if the state is equal to the renderingConfig;\n\n    this.props.propagateState(this.state);\n    // let requireUpdate = false;\n    //\n    // for (const name in this.state) {\n    //   if (this.state.hasOwnProperty(name)) {\n    //     // check if the store has the equal props\n    //     const value = this.props.store.renderingModuleConfig[name];\n    //     if (value !== this.state[name]) {\n    //       requireUpdate = true;\n    //     }\n    //   }\n    // }\n    //\n    // requireUpdate = true;\n    //\n    // if (requireUpdate) {\n    //   this.props.updateRenderingModuleConfiguration(this.state);\n    // }\n  };\n\n  handleCheckChange = name => {\n    this.setState(prevState => ({\n      [name]: !prevState[name]\n    }));\n  };\n\n  renderGraphInteractionsConfig = () => {\n    return (\n      <div style={{ padding: \"5px\", marginLeft: \"10px\" }}>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.graph_mouseZoom}\n              onChange={() => {\n                this.handleCheckChange(\"graph_mouseZoom\");\n              }}\n            />{\" \"}\n            Mouse Zoom\n          </Label>\n        </FormGroup>\n        <FormGroup check style={{ paddingLeft: \"40px\" }}>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              disabled={true}\n              checked={this.state.graph_mouseZoom}\n              onChange={() => {\n                this.handleCheckChange(\"graph_mouseZoom\");\n              }}\n            />\n            Graph Double Click == Zoom\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.graph_mouseDrag}\n              onChange={() => {\n                this.handleCheckChange(\"graph_mouseDrag\");\n              }}\n            />{\" \"}\n            Mouse Drag\n          </Label>\n        </FormGroup>\n      </div>\n    );\n  };\n  renderNodeInteractionsConfig = () => {\n    return (\n      <div style={{ padding: \"5px\", marginLeft: \"10px\" }}>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.node_mouseDrag}\n              onChange={() => {\n                this.handleCheckChange(\"node_mouseDrag\");\n              }}\n            />{\" \"}\n            Node Drag\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.node_mouseHover}\n              onChange={() => {\n                this.handleCheckChange(\"node_mouseHover\");\n              }}\n            />\n            Node Hover\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.node_mouseSingleClick}\n              onChange={() => {\n                this.handleCheckChange(\"node_mouseSingleClick\");\n              }}\n            />{\" \"}\n            Node Single Mouse Click\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.node_mouseDoubleClick}\n              onChange={() => {\n                this.handleCheckChange(\"node_mouseDoubleClick\");\n              }}\n            />{\" \"}\n            Node Double Mouse Click\n          </Label>\n        </FormGroup>\n      </div>\n    );\n  };\n\n  renderLinkInteractionsConfig = () => {\n    return (\n      <div style={{ padding: \"5px\", marginLeft: \"10px\" }}>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.link_mouseDrag}\n              onChange={() => {\n                this.handleCheckChange(\"link_mouseDrag\");\n              }}\n            />{\" \"}\n            Link Drag\n          </Label>\n        </FormGroup>\n        <FormGroup check>\n          <Label check>\n            <Input\n              type=\"checkbox\"\n              checked={this.state.link_mouseHover}\n              onChange={() => {\n                this.handleCheckChange(\"link_mouseHover\");\n              }}\n            />\n            Link Hover\n          </Label>\n        </FormGroup>\n      </div>\n    );\n  };\n\n  createVisualAppearanceConfigDropDowns = () => {\n    const items = this.availableConfigs.map((item, index) => {\n      return (\n        <DropdownItem\n          key={\"dropdownItemIndexKey\" + index}\n          onClick={() => {\n            this.setState({ configSelected: item });\n          }}\n        >\n          {item}\n        </DropdownItem>\n      );\n    });\n\n    return (\n      <Dropdown\n        color=\"darkblue\"\n        size=\"sm\"\n        //    className='mb-4 mt-4'\n        style={{\n          marginLeft: \"10px\",\n          flexGrow: \"1\",\n          display: \"flex\",\n          height: \"min-content\",\n          paddingTop: \"-5px\"\n        }}\n        isOpen={this.state.configSelectionOpen}\n        toggle={() => {\n          this.setState({\n            configSelectionOpen: !this.state.configSelectionOpen\n          });\n        }}\n      >\n        <DropdownToggle\n          caret\n          color=\"darkblue\"\n          style={{\n            padding: \"0px\",\n            paddingLeft: \"3px\",\n            border: \"solid 1px black\"\n          }}\n        >\n          {this.state.configSelected}\n        </DropdownToggle>\n        <DropdownMenu>{items}</DropdownMenu>\n      </Dropdown>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            marginLeft: \"10px\",\n            paddingLeft: \"30px\"\n          }}\n        >\n          <div style={{ border: \"solid 1px grey\", width: \"30%\" }}>\n            <h2> Graph Interactions: </h2>\n            {this.renderGraphInteractionsConfig()}\n          </div>\n          <div style={{ border: \"solid 1px grey\", width: \"30%\" }}>\n            <h2> Node Interactions: </h2>\n            {this.renderNodeInteractionsConfig()}\n          </div>\n          <div style={{ border: \"solid 1px grey\", width: \"30%\" }}>\n            <h2> Link Interactions: </h2>\n            {this.renderLinkInteractionsConfig()}\n          </div>\n        </div>\n\n        <hr />\n\n        <div style={{ display: \"flex\" }}>\n          <div style={{ width: \"100%\", marginLeft: \"10px\" }}>\n            <h2> Visualization Configuration </h2>\n            <div style={{}}>\n              <div>\n                Layout: ForceDirected Active {\"<<<\"}{\" \"}\n                <b> NOT CONFIGURABLE IN DEMO</b>\n              </div>\n              <div style={{ display: \"flex\" }}>\n                Graph Background Color:\n                <Input\n                  type={\"color\"}\n                  style={{\n                    width: \"40px\",\n                    marginLeft: \"5px\",\n                    padding: \"2px\",\n                    height: \"25px\"\n                  }}\n                  value={this.state.graphBgColor}\n                  onChange={t => {\n                    this.setState({ graphBgColor: t.target.value });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", marginLeft: \"10px\" }}>\n            <h2> Visual Appearance</h2>\n            <div style={{ display: \"flex\" }}>\n              <div>Visual Appearance Config</div>\n              {this.createVisualAppearanceConfigDropDowns()}\n            </div>\n          </div>\n        </div>\n        <hr />\n        <div style={{ display: \"flex\" }}>\n          {this.props.nodeLinkModel ? (\n            <div>\n              Adjusting the item configs{\" \"}\n              {this.state.configSelected !== \"Customizable\" ? (\n                <b> READ ONLY </b>\n              ) : (\n                \"\"\n              )}\n              <VisualItemConfiguration\n                nodeLinkModel={this.props.nodeLinkModel}\n                readOnly={this.state.configSelected !== \"Customizable\"}\n              />\n            </div>\n          ) : (\n            <div>\n              Please execute the pipeline modules to enable dynamic\n              customizations\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nRenderingModuleConfig.propTypes = {\n  store: PropTypes.object,\n  nodeLinkModel: PropTypes.object,\n  initialState: PropTypes.object,\n  updateRenderingModuleConfiguration: PropTypes.func,\n  propagateState: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {\n    updateRenderingModuleConfiguration: payload =>\n      dispatch(updateRenderingModuleConfiguration(payload))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RenderingModuleConfig);\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseComponent from \"../Base/BaseComponent\";\nexport default class DBpediaProxyLoader extends BaseComponent {\n  constructor() {\n    super();\n\n    this.resultingDataObject = null;\n\n    this.type = $CONST.TYPE_DBPEDIA_PROXY;\n\n    this.dbPediaURL = \"http://live.dbpedia.org/sparql/\";\n    this.dbPediaGraph = \"http://dbpedia.org\";\n\n    this.suffix =\n      \"&format=application%2Fsparql-results%2Bjson&CXML_redir_for_subjs=121&CXML_redir_for_hrefs=&timeout=30000&debug=on&run=+Run+Query+\";\n    this.exampleQuery =\n      \"select ?subject ?predicate ?object where { ?subject ?predicate ?object} Limit 10\";\n    this.teslaExample =\n      \"PREFIX dbr: <http://dbpedia.org/resource/>\\n\" +\n      \"PREFIX dbo: <http://dbpedia.org/ontology/>\\n\" +\n      \"PREFIX owl: <http://www.w3.org/2002/07/owl#>\\n\" +\n      \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n      \"PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\n\" +\n      \"select distinct ?subject ?predicate ?object where { \\n\" +\n      \"{dbr:Nikola_Tesla ?predicate ?object.\\n\" +\n      \"?object a owl:Class} \\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla dbo:birthDate ?object.\\n\" +\n      \"BIND(dbo:birthDate as ?predicate)\\n\" +\n      \"}\\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla dbo:deathDate ?object.\\n\" +\n      \"BIND(dbo:deathDate as ?predicate)\\n\" +\n      \"}\\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla rdfs:label ?object.\\n\" +\n      \"BIND(rdfs:label as ?predicate)\\n\" +\n      \"}\\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla rdfs:comment ?object.\\n\" +\n      \"BIND(rdfs:comment as ?predicate)\\n\" +\n      \"}\\n\" +\n      \"UNION {\\n\" +\n      \"dbr:Nikola_Tesla ?foafPredicate ?object.\\n\" +\n      'FILTER(STRSTARTS(STR(?foafPredicate), \"http://xmlns.com/foaf/0.1/\"))\\n' +\n      \"BIND(?foafPredicate as ?predicate)\\n\" +\n      \"}\\n\" +\n      'FILTER(!isLiteral(?object) ||langMatches(lang(?object),\"EN\") || datatype(?object)=xsd:date)\\n' +\n      \"BIND(dbr:Nikola_Tesla as ?subject)}\\n\" +\n      \"Limit 100\";\n    this.query = this.teslaExample;\n  }\n\n  getResult = () => {\n    return this.dataHandlerObject.theData;\n  };\n\n  execute = async () => {\n    await this.__run__();\n  };\n\n  __run__ = async () => {\n    this.dataHandlerObject = {};\n    this.dataHandlerObject.theData = await this.executePromisedQuery(\n      this.query\n    );\n  };\n\n  /** -------------- Exposed Functions --------------**/\n  setQuery = query => {\n    this.query = query;\n  };\n\n  setGraph = graph => {\n    this.dbPediaGraph = graph;\n  };\n\n  setDBPediaURL = url => {\n    this.dbPediaURL = url;\n  };\n\n  executePromisedQuery = async fullQuery => {\n    const that = this;\n    let res = \"\";\n    const queryPromise = new Promise(function(resolve) {\n      const requestPath =\n        that.dbPediaURL +\n        \"?default-graph-uri=\" +\n        encodeURIComponent(that.dbPediaGraph) +\n        \"&query=\" +\n        encodeURIComponent(fullQuery) +\n        that.suffix;\n\n      that.get(requestPath).then(result => {\n        res = result;\n        resolve();\n      });\n    });\n    await queryPromise;\n    return JSON.parse(res);\n  };\n\n  // /** -------------- INTERNAL FUNCTIONS -------------- **/\n  // // MUST OVERWRITE\n  // _buildDataRequest = () => {\n  //   console.log(\"BUILDING REQUEST\");\n  //   const requestPath =\n  //     this.dbPediaURL +\n  //     \"?default-graph-uri=\" +\n  //     encodeURIComponent(this.dbPediaGraph) +\n  //     \"&query=\" +\n  //     encodeURIComponent(this.query) +\n  //     this.suffix;\n  //   console.log(requestPath);\n  //   return {\n  //     requestType: \"jsonfetch\",\n  //     fetchCall: requestPath\n  //   };\n  // };\n\n  // helper\n  get(url) {\n    return new Promise((fulfil, reject) => {\n      const mimeType = \"application/json\";\n      const xhr = new XMLHttpRequest();\n\n      xhr.overrideMimeType(mimeType);\n\n      xhr.onerror = reject;\n      xhr.onload = () => fulfil(xhr.responseText);\n      xhr.open(\"GET\", url);\n\n      xhr.send();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, FormGroup, Label, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport DBPediaLoader from \"../Implementation/DataAccessComponent/DBPediaLoader\";\n\nclass DataAccessConfigurator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endpointURL: \"http://live.dbpedia.org/sparql/\",\n      graphURL: \"http://dbpedia.org\",\n      query:\n        \"PREFIX dbr: <http://dbpedia.org/resource/>\\n\" +\n        \"PREFIX dbo: <http://dbpedia.org/ontology/>\\n\" +\n        \"PREFIX owl: <http://www.w3.org/2002/07/owl#>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\n\\n\" +\n        \"SELECT  DISTINCT ?subject ?predicate ?object WHERE { \\n\" +\n        \"{dbr:Nikola_Tesla ?predicate ?object.\\n\" +\n        \"?object a owl:Class} \\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla dbo:birthDate ?object.\\n\" +\n        \"BIND(dbo:birthDate as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla dbo:deathDate ?object.\\n\" +\n        \"BIND(dbo:deathDate as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla rdfs:label ?object.\\n\" +\n        \"BIND(rdfs:label as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla rdfs:comment ?object.\\n\" +\n        \"BIND(rdfs:comment as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla ?foafPredicate ?object.\\n\" +\n        'FILTER(STRSTARTS(STR(?foafPredicate), \"http://xmlns.com/foaf/0.1/\"))\\n' +\n        \"BIND(?foafPredicate as ?predicate)\\n\" +\n        \"}\\n\" +\n        'FILTER(!isLiteral(?object) ||langMatches(lang(?object),\"EN\") || datatype(?object)=xsd:date)\\n' +\n        \"BIND(dbr:Nikola_Tesla as ?subject)}\\n\" +\n        \"Limit 100\",\n      queryResult: undefined\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // check if the state is equal to the renderingConfig;\n    this.props.statePropagation(this.state);\n  };\n\n  // handleCheckChange = name => {\n  //   this.setState(prevState => ({\n  //     [name]: !prevState[name]\n  //   }));\n  // };\n\n  handleInputChange = (name, target) => {\n    const newEntry = target.target.value;\n    this.setState({ [name]: newEntry });\n  };\n\n  executeQuery = () => {\n    const dbpediaHandler = new DBPediaLoader();\n    dbpediaHandler.setGraph(this.state.graphURL);\n    dbpediaHandler.setDBPediaURL(this.state.endpointURL);\n    dbpediaHandler.setQuery(this.state.query);\n\n    dbpediaHandler.executePromisedQuery(this.state.query).then(res => {\n      this.setState({ queryResult: res });\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"10px\", display: \"flex\" }}>\n        <div>\n          <div>Configure Data AccessHandler for DBPedia</div>\n          <div style={{ width: \"50%\" }}>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>EndPoint URL:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"endpointURL\", t);\n                  }}\n                  value={this.state.endpointURL}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>Graph URL:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"graphURL\", t);\n                  }}\n                  value={this.state.graphURL}\n                />\n              </Label>\n            </FormGroup>\n\n            <div>\n              <b> QUERY: </b> <br />\n              <b>\n                {\" \"}\n                <i>*Note*</i>{\" \"}\n              </b>{\" \"}\n              The select clause requires ?subject ?predicate ?object as variable\n              selection <br />\n              This is due to how the SPARQL results are parsed and transformed\n              into a Resource Relation Model\n              <textarea\n                type=\"text\"\n                rows=\"10\"\n                cols=\"50\"\n                style={{ width: \"100%\", height: \"100%\" }}\n                value={this.state.query}\n                onChange={e => {\n                  this.setState({ query: e.target.value });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div style={{ width: \"40%\" }}>\n          {\" \"}\n          <Button\n            onClick={() => {\n              this.executeQuery();\n            }}\n          >\n            {\" \"}\n            Test Query\n          </Button>\n          <br />\n          Result\n          <textarea\n            type=\"text\"\n            rows=\"10\"\n            cols=\"50\"\n            style={{ width: \"100%\", height: \"100%\" }}\n            value={JSON.stringify(this.state.queryResult, null, \"\\t\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataAccessConfigurator.propTypes = {\n  store: PropTypes.object,\n  statePropagation: PropTypes.func\n  // nodeLinkModel: PropTypes.object,\n  // updateRenderingModuleConfiguration: PropTypes.func,\n  // propagateState: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataAccessConfigurator);\n","import BaseComponent from \"../Base/BaseComponent\";\n\nexport default class WikiDataLoader extends BaseComponent {\n  constructor() {\n    super();\n\n    this.resultingDataObject = null;\n\n    this.type = \"WIKI_DATA_LOADER\";\n    this.wikiDataEndpointURL = \"https://query.wikidata.org/\";\n\n    this.suffix = \"&format=json\";\n\n    this.exampleQuery =\n      \"SELECT ?h ?hLabel ?cause ?causeLabel (YEAR(?date) AS ?year) WHERE {\\n\" +\n      \"?h wdt:P39 wd:Q11696;\\n\" +\n      \"   wdt:P509 ?cause;\\n\" +\n      \"   wdt:P570 ?date\\n\" +\n      'SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\\n' +\n      \"} ORDER BY ?year\";\n    this.query = this.exampleQuery;\n  }\n\n  getResult = () => {\n    return this.dataHandlerObject.theData;\n  };\n\n  execute = async () => {\n    await this.__run__();\n  };\n\n  __run__ = async () => {\n    this.dataHandlerObject = {};\n    this.dataHandlerObject.theData = await this.executePromisedQuery(\n      this.query\n    );\n  };\n\n  /** -------------- Exposed Functions --------------**/\n  setQuery = query => {\n    this.query = query;\n  };\n\n  setEndPointURL = url => {\n    this.wikiDataEndpointURL = url;\n  };\n\n  executePromisedQuery = async fullQuery => {\n    const that = this;\n    let res = \"\";\n    const queryPromise = new Promise(function(resolve) {\n      const requestPath =\n        that.wikiDataEndpointURL +\n        \"sparql\" +\n        \"?query=\" +\n        encodeURIComponent(fullQuery) +\n        that.suffix;\n\n      console.log(requestPath);\n\n      that.get(requestPath).then(result => {\n        res = result;\n        resolve();\n      });\n    });\n    await queryPromise;\n    return JSON.parse(res);\n  };\n\n  // /** -------------- INTERNAL FUNCTIONS -------------- **/\n  // // MUST OVERWRITE\n  // _buildDataRequest = () => {\n  //   console.log(\"BUILDING REQUEST\");\n  //   const requestPath =\n  //     this.dbPediaURL +\n  //     \"?default-graph-uri=\" +\n  //     encodeURIComponent(this.dbPediaGraph) +\n  //     \"&query=\" +\n  //     encodeURIComponent(this.query) +\n  //     this.suffix;\n  //   console.log(requestPath);\n  //   return {\n  //     requestType: \"jsonfetch\",\n  //     fetchCall: requestPath\n  //   };\n  // };\n\n  // helper\n  get(url) {\n    return new Promise((fulfil, reject) => {\n      const mimeType = \"application/json\";\n      const xhr = new XMLHttpRequest();\n\n      xhr.overrideMimeType(mimeType);\n\n      xhr.onerror = reject;\n      xhr.onload = () => fulfil(xhr.responseText);\n      xhr.open(\"GET\", url);\n\n      xhr.send();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, FormGroup, Label, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport WikiDataLoader from \"../Implementation/DataAccessComponent/WikiDataLoader\";\n\nclass DataAccessConfigurator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endpointURL: \"https://query.wikidata.org/\",\n      query:\n        \"SELECT ?h ?hLabel ?cause ?causeLabel (YEAR(?date) AS ?year) WHERE {\\n\" +\n        \"?h wdt:P39 wd:Q11696;\\n\" +\n        \"   wdt:P509 ?cause;\\n\" +\n        \"   wdt:P570 ?date\\n\" +\n        'SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\\n' +\n        \"} ORDER BY ?year\",\n      queryResult: undefined\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // check if the state is equal to the renderingConfig;\n    this.props.statePropagation(this.state);\n  };\n\n  // handleCheckChange = name => {\n  //   this.setState(prevState => ({\n  //     [name]: !prevState[name]\n  //   }));\n  // };\n\n  handleInputChange = (name, target) => {\n    const newEntry = target.target.value;\n    this.setState({ [name]: newEntry });\n  };\n\n  executeQuery = () => {\n    const accessHandler = new WikiDataLoader();\n    accessHandler.setEndPointURL(this.state.endpointURL);\n    accessHandler.setQuery(this.state.query);\n\n    accessHandler.executePromisedQuery(this.state.query).then(res => {\n      this.setState({ queryResult: res });\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"10px\", display: \"flex\" }}>\n        <div>\n          <div>Configure Data AccessHandler for DBPedia</div>\n          <div style={{ width: \"50%\" }}>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>EndPoint URL:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"endpointURL\", t);\n                  }}\n                  value={this.state.endpointURL}\n                />\n              </Label>\n            </FormGroup>\n\n            <div>\n              <b> QUERY: </b> <br />\n              <b>\n                {\" \"}\n                <i>*Note*</i>{\" \"}\n              </b>{\" \"}\n              This is an example query that also has a <b>SPECIFIC</b> parser\n              for the variable names selection .\n              <textarea\n                type=\"text\"\n                rows=\"10\"\n                cols=\"50\"\n                style={{ width: \"100%\", height: \"100%\" }}\n                value={this.state.query}\n                onChange={e => {\n                  this.setState({ query: e.target.value });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div style={{ width: \"40%\" }}>\n          {\" \"}\n          <Button\n            onClick={() => {\n              this.executeQuery();\n            }}\n          >\n            {\" \"}\n            Test Query\n          </Button>\n          <br />\n          Result\n          <textarea\n            type=\"text\"\n            rows=\"10\"\n            cols=\"50\"\n            style={{ width: \"100%\", height: \"100%\" }}\n            value={JSON.stringify(this.state.queryResult, null, \"\\t\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataAccessConfigurator.propTypes = {\n  store: PropTypes.object,\n  statePropagation: PropTypes.func\n  // nodeLinkModel: PropTypes.object,\n  // updateRenderingModuleConfiguration: PropTypes.func,\n  // propagateState: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataAccessConfigurator);\n","// data handler is a base class;\n\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseNodeLinkMapper from \"./BaseNodeLinkMapper\";\n\nexport default class NodeLinkMapper extends BaseNodeLinkMapper {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_VERTEX_EDGE_MODEL;\n    this.hasCompatibleInput = false;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\",\n      \"http://www.w3.org/2002/07/owl#\": \"owl\",\n      \"http://www.w3.org/2001/XMLSchema#\": \"xsd\",\n      \"http://purl.org/dc/elements/1.1/\": \"dc\",\n      \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n      \"http://xmlns.com/wot/0.1/\": \"wot\",\n      \"http://www.w3.org/2003/06/sw-vocab-status/ns#\": \"vs\",\n      \"http://xmlns.com/foaf/0.1/\": \"foaf\",\n      \"http://www.w3.org/2004/02/skos/core#\": \"skos\"\n    };\n\n    this.definitionMap = {\n      nodeMapper: {\n        __nodeType: \"__vertexType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\"\n      },\n      linkMapper: {\n        __linkType: \"__edgeType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\",\n        __linkAxiom: \"__edgeAxiom\",\n        __source: \"__source\",\n        __target: \"__target\"\n      },\n      nodeMerge: [{}],\n      nodeSplit: [{}],\n      auxiliaryNodes: [\n        {\n          edgeType: [\"owl:ObjectProperty\"], // constraint\n          auxiliaryLinks: {\n            source: [\"domain\", \"auxLink\"],\n            target: [\"range\", \"auxLink\"]\n          }, // what to do whit the link >> split domain range links << this sets the displayName and edge type\n          auxiliaryNode: [\"__displayName\", \"auxForObjectProperties\"] // will fetch the prop name for display name and set the type to auxiliary\n        },\n        {\n          edgeType: [\"owl:DatatypeProperty\"], // constraint\n          auxiliaryLinks: {\n            source: [\"domain\", \"auxLink\"],\n            target: [\"range\", \"auxLink\"]\n          }, // what to do whit the link >> split domain range links << this sets the displayName and edge type\n          auxiliaryNode: [\"__displayName\", \"auxForDataTypeProperties\"] // will fetch the prop name for display name and set the type to auxiliary\n        }\n      ]\n    };\n  }\n}\n","import * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseComponent from \"../Base/BaseComponent\";\n\nimport ResourceRelationModel from \"../Models/ResourceRelationModel\";\nimport Resource from \"../Models/Resource\";\nimport Relation from \"../Models/Relation\";\n\nexport default class WikiDataExampleParser extends BaseComponent {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_SPARQL_PARSER;\n\n    this.definitionMap = {\n      // assertions\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": \"assertion\",\n      \"rdf:type\": \"assertion\",\n      //axioms\n      \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": \"axiom\",\n      \"http://www.w3.org/2000/01/rdf-schema#subPropertyOf\": \"axiom\",\n      \"http://www.w3.org/2002/07/owl#equivalentClass\": \"axiom\",\n\n      // annotations\n      \"http://www.w3.org/2000/01/rdf-schema#comment\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#label\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": \"annotation\",\n\n      // relational assertions:\n      \"owl:ObjectProperty\": \"relationalAssertion\",\n      \"owl:DatatypeProperty\": \"relationalAssertion\"\n    };\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    const m = new ResourceRelationModel();\n    const processedData = this._preProcess();\n    this._processData(m, processedData);\n  };\n\n  _processData(model, dataObject) {\n    dataObject.forEach((statement, index) => {\n      const subject = statement.subject;\n      const predicate = statement.predicate;\n      const object = statement.object;\n\n      // needs to be processed as a whole triple\n      // subject resource\n      const subjectResource = new Resource();\n      const propertyRelation = new Relation();\n      const objectResource = new Resource();\n\n      // handling the identifier;\n      subjectResource.resourceIdentifier(subject.value);\n      if (this.validIRI(subject.value)) {\n        subjectResource._resourceURI = subject.value;\n      }\n\n      propertyRelation.resourceIdentifier(predicate.value);\n      if (this.validIRI(predicate.value)) {\n        propertyRelation._resourceURI = predicate.value;\n      }\n\n      objectResource.resourceIdentifier(object.value);\n      if (this.validIRI(object.value)) {\n        objectResource._resourceURI = object.value;\n      }\n\n      let ignoreSubjectResource = false;\n      let ignoreObjectResource = false;\n      let ignorePropertyRelation = false;\n\n      if (this.definitionMap[predicate.value] === \"assertion\") {\n        if (this.definitionMap[object.value] !== \"relationalAssertion\") {\n          subjectResource.addSemanticType(object.value);\n        } else {\n          console.log(\"TODO: add sematic type to the relation\");\n          // this holds only when we sparql an ontology with some defs;\n          //add this to the relation\n          ignorePropertyRelation = false;\n        }\n        // there can not be more data fro this triple;\n\n        model.addResource(subjectResource);\n        return;\n      }\n\n      /** axioms **/\n      switch (this.definitionMap[predicate.value]) {\n        case \"axiom\":\n          subjectResource.addAxiom(\n            subject.value,\n            predicate.value,\n            object.value\n          );\n          ignoreObjectResource = true;\n          break;\n        case \"annotation\":\n          if (object[\"xml:lang\"]) {\n            subjectResource.addAnnotation(\n              predicate.value,\n              object.value,\n              object[\"xml:lang\"]\n            );\n          } else {\n            subjectResource.addAnnotation(predicate.value, object.value);\n          }\n\n          ignoreObjectResource = true;\n          ignorePropertyRelation = true;\n          break;\n        default:\n          // this is where we should add a relation ship\n\n          // subjectResource.addAnnotation(predicate.value, object);\n          // when using instance data there is no domain or range definition oO so we need to imply it;\n          propertyRelation.addDomain(subject.value);\n          propertyRelation.addRange(object.value);\n          propertyRelation.addDomainRangePair(subject.value, object.value);\n\n          ignoreObjectResource = true;\n          ignoreSubjectResource = true;\n      }\n\n      if (!ignoreSubjectResource) {\n        model.addResource(subjectResource);\n      }\n      if (!ignorePropertyRelation) {\n        model.addRelation(propertyRelation);\n      }\n      if (!ignoreObjectResource) {\n        model.addResource(objectResource);\n      }\n    });\n    this.resultObject.resultingModel = model;\n  }\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n\n  _preProcess = () => {\n    console.log(\n      \"WIKIDATA PREPROCESSING SPARQL PARSER PREPROCESS\",\n      this.inputDataAsJsonObject\n    );\n\n    const output = []; // array holding the statements;\n    const input = this.inputDataAsJsonObject;\n    // assumptions;\n    // we always have a head and a results object\n\n    const binds = input.results.bindings;\n\n    const subject = \"h\";\n    const subjectLabel = \"hLabel\";\n    const predicateDeath = \"causeOfDeath\";\n    const causeOfDeathObject = \"cause\";\n    const causeOfDeathObjectLabel = \"causeLabel\";\n    const predicateDeathYear = \"deathYear\";\n\n    binds.forEach(res => {\n      // create statements:\n\n      const aStatement = {};\n      aStatement.subject = res[subject];\n      aStatement.predicate = {\n        type: \"uri\",\n        value: \"http://www.w3.org/2000/01/rdf-schema#label\"\n      };\n      aStatement.object = res[subjectLabel];\n\n      // add statment for the causeOfDeath;\n      const bStatement = {};\n      bStatement.subject = res[subject];\n      bStatement.predicate = {\n        type: \"uri\",\n        value: \"http://example.org/\" + predicateDeath\n      };\n      bStatement.object = res[causeOfDeathObject];\n\n      const cStatement = {};\n      cStatement.subject = res[causeOfDeathObject];\n      cStatement.predicate = {\n        type: \"uri\",\n        value: \"http://www.w3.org/2000/01/rdf-schema#label\"\n      };\n      cStatement.object = res[causeOfDeathObjectLabel];\n\n      const dStatement = {};\n      dStatement.subject = res[subject];\n      dStatement.predicate = {\n        type: \"uri\",\n        value: \"http://example.org/\" + predicateDeathYear\n      };\n      dStatement.object = res[\"year\"];\n\n      //\n      // // map the variable names here;\n      //\n      // // initialize attributes;\n      // labels.forEach(label => {\n      //   aStatement[label] = res[label];\n      // });\n\n      output.push(aStatement);\n      output.push(bStatement);\n      output.push(cStatement);\n      output.push(dStatement);\n    });\n\n    this.allStatements = [].concat(this.allStatements, output);\n    return output; // this can be useful for batch processing;\n  };\n\n  validIRI(str) {\n    const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n    return urlregex.test(str);\n  }\n}\n","\nimport BaseComponent from \"../Base/BaseComponent\";\n\nexport default class WikiDataLoader extends BaseComponent {\n  constructor() {\n    super();\n\n    this.resultingDataObject = null;\n\n    this.type = \"ORKG_DATA_LOADER\";\n    this.endpointURL = \"https://www.orkg.org/orkg/\";\n    this.requestParameters = \"api/statements/subject/\";\n    this.requestResourceId = \"R8186\";\n    this.suffix = \"/?desc=true&items=9999&page=1&sortBy=created_at\";\n  }\n\n  getResult = () => {\n    return this.dataHandlerObject.theData;\n  };\n\n  execute = async () => {\n    \n    await this.__run__();\n  };\n\n  __run__ = async () => {\n    \n    this.dataHandlerObject = {};\n    this.dataHandlerObject.theData = await this.executePromisedQuery(\n      this.query\n    );\n  };\n\n  /** -------------- Exposed Functions --------------**/\n\n  setRequestResourceId = id => {\n    this.requestResourceId = id;\n  };\n\n  setEndPointURL = url => {\n    this.endpointURL = url;\n  };\n\n  executePromisedQuery = async fullQuery => {\n    console.log(\"EXECUTING THE PROMISED QUERY\");\n    const that = this;\n    let res = \"\";\n    const queryPromise = new Promise(function(resolve) {\n      const requestPath =\n        that.endpointURL +\n        that.requestParameters +\n        that.requestResourceId +\n        that.suffix;\n\n      console.log(requestPath);\n\n      that.get(requestPath).then(result => {\n        res = result;\n        resolve();\n      });\n    });\n    await queryPromise;\n    return JSON.parse(res);\n  };\n\n  // /** -------------- INTERNAL FUNCTIONS -------------- **/\n  // // MUST OVERWRITE\n  // _buildDataRequest = () => {\n  //   console.log(\"BUILDING REQUEST\");\n  //   const requestPath =\n  //     this.dbPediaURL +\n  //     \"?default-graph-uri=\" +\n  //     encodeURIComponent(this.dbPediaGraph) +\n  //     \"&query=\" +\n  //     encodeURIComponent(this.query) +\n  //     this.suffix;\n  //   console.log(requestPath);\n  //   return {\n  //     requestType: \"jsonfetch\",\n  //     fetchCall: requestPath\n  //   };\n  // };\n\n  // helper\n  get(url) {\n    return new Promise((fulfil, reject) => {\n      const mimeType = \"application/json\";\n      const xhr = new XMLHttpRequest();\n\n      xhr.overrideMimeType(mimeType);\n\n      xhr.onerror = reject;\n      xhr.onload = () => fulfil(xhr.responseText);\n      xhr.open(\"GET\", url);\n\n      xhr.send();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, FormGroup, Label, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport ORKGLoader from \"../Implementation/DataAccessComponent/OrkgDataLoader\";\n\nclass DataAccessConfigurator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endpointURL: \"https://www.orkg.org/orkg/\",\n      requestParameters: \"api/statements/subject/\",\n      requestResourceId: \"R8186\",\n      suffix: \"/?desc=true&items=9999&page=1&sortBy=created_at\",\n\n      queryResult: undefined\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // check if the state is equal to the renderingConfig;\n    this.props.statePropagation(this.state);\n  };\n\n  // handleCheckChange = name => {\n  //   this.setState(prevState => ({\n  //     [name]: !prevState[name]\n  //   }));\n  // };\n\n  handleInputChange = (name, target) => {\n    const newEntry = target.target.value;\n    this.setState({ [name]: newEntry });\n  };\n\n  executeQuery = () => {\n    const accessHandler = new ORKGLoader();\n    accessHandler.setEndPointURL(this.state.endpointURL);\n    accessHandler.setRequestResourceId(this.state.requestResourceId);\n\n    accessHandler.executePromisedQuery(this.state.query).then(res => {\n      this.setState({ queryResult: res });\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"10px\", display: \"flex\" }}>\n        <div>\n          <div>Configure Data AccessHandler for DBPedia</div>\n          <div style={{ width: \"50%\" }}>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>EndPoint URL:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"endpointURL\", t);\n                  }}\n                  value={this.state.endpointURL}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Label style={{ display: \"ruby\" }}>\n                <b>Paper Resource Id:</b>\n                <Input\n                  type=\"text\"\n                  onChange={t => {\n                    this.handleInputChange(\"requestResourceId\", t);\n                  }}\n                  value={this.state.requestResourceId}\n                />\n              </Label>\n            </FormGroup>\n          </div>\n        </div>\n\n        <div style={{ width: \"40%\" }}>\n          {\" \"}\n          <Button\n            onClick={() => {\n              this.executeQuery();\n            }}\n          >\n            {\" \"}\n            Test Query\n          </Button>\n          <br />\n          Result\n          <textarea\n            type=\"text\"\n            rows=\"10\"\n            cols=\"50\"\n            style={{ width: \"100%\", height: \"100%\" }}\n            value={JSON.stringify(this.state.queryResult, null, \"\\t\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataAccessConfigurator.propTypes = {\n  store: PropTypes.object,\n  statePropagation: PropTypes.func\n  // nodeLinkModel: PropTypes.object,\n  // updateRenderingModuleConfiguration: PropTypes.func,\n  // propagateState: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataAccessConfigurator);\n","import BaseComponent from \"../Base/BaseComponent\";\n\nimport ResourceRelationModel from \"../Models/ResourceRelationModel\";\nimport Resource from \"../Models/Resource\";\nimport Relation from \"../Models/Relation\";\n\nexport default class ORKGParser extends BaseComponent {\n  constructor() {\n    super();\n    this.type = \"ORKGParser\";\n\n    this.definitionMap = {\n      // assertions\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": \"assertion\",\n      \"rdf:type\": \"assertion\",\n      //axioms\n      \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": \"axiom\",\n      \"http://www.w3.org/2000/01/rdf-schema#subPropertyOf\": \"axiom\",\n      \"http://www.w3.org/2002/07/owl#equivalentClass\": \"axiom\",\n\n      // annotations\n      \"http://www.w3.org/2000/01/rdf-schema#comment\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#label\": \"annotation\",\n      \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": \"annotation\",\n\n      // relational assertions:\n      \"owl:ObjectProperty\": \"relationalAssertion\",\n      \"owl:DatatypeProperty\": \"relationalAssertion\"\n    };\n  }\n\n  /** -------------- Must OVERWRITE FUNCTIONS --------------**/\n  __run__ = async () => {\n    const m = new ResourceRelationModel();\n    const processedData = this._preProcess();\n    this._processData(m, processedData);\n  };\n\n  _processData(model, dataObject) {\n    dataObject.forEach(statement => {\n      // create resources for subjects and objects;\n      const subjectResource = new Resource();\n      subjectResource.resourceIdentifier(statement.subject.id);\n      subjectResource.addSemanticType(\"Resource\");\n      subjectResource.addAnnotation(\n        \"http://www.w3.org/2000/01/rdf-schema#label\",\n        statement.subject.label\n      );\n\n      const objectResource = new Resource();\n      objectResource.resourceIdentifier(statement.object.id);\n      if (statement.object._class === \"literal\") {\n        objectResource.addSemanticType(\"Literal\");\n      } else {\n        objectResource.addSemanticType(\"Resource\");\n      }\n      objectResource.addAnnotation(\n        \"http://www.w3.org/2000/01/rdf-schema#label\",\n        statement.object.label\n      );\n\n      const propertyRelation = new Relation();\n      propertyRelation.resourceIdentifier(statement.predicate.id);\n      propertyRelation.addSemanticType(\"Property\");\n      propertyRelation.addAnnotation(\n        \"http://www.w3.org/2000/01/rdf-schema#label\",\n        statement.predicate.label\n      );\n      propertyRelation.addDomain(statement.object.id);\n      propertyRelation.addRange(statement.object.id);\n      propertyRelation.addDomainRangePair(\n        statement.subject.id,\n        statement.object.id\n      );\n\n      model.addResource(subjectResource);\n      model.addRelation(propertyRelation);\n      model.addResource(objectResource);\n    });\n\n    this.resultObject.resultingModel = model;\n  }\n\n  /** -------------- INTERNAL FUNCTIONS -------------- **/\n\n  _preProcess = () => {\n    return this.inputDataAsJsonObject;\n  };\n}\n","// data handler is a base class;\n\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseNodeLinkMapper from \"./BaseNodeLinkMapper\";\n\nexport default class NodeLinkMapper extends BaseNodeLinkMapper {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_VERTEX_EDGE_MODEL;\n    this.hasCompatibleInput = false;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\",\n      \"http://www.w3.org/2002/07/owl#\": \"owl\",\n      \"http://www.w3.org/2001/XMLSchema#\": \"xsd\",\n      \"http://purl.org/dc/elements/1.1/\": \"dc\",\n      \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n      \"http://xmlns.com/wot/0.1/\": \"wot\",\n      \"http://www.w3.org/2003/06/sw-vocab-status/ns#\": \"vs\",\n      \"http://xmlns.com/foaf/0.1/\": \"foaf\",\n      \"http://www.w3.org/2004/02/skos/core#\": \"skos\"\n    };\n\n    this.definitionMap = {\n      nodeMapper: {\n        __nodeType: \"__vertexType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\"\n      },\n      linkMapper: {\n        __linkType: \"__edgeType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\",\n        __linkAxiom: \"__edgeAxiom\",\n        __source: \"__source\",\n        __target: \"__target\"\n      },\n      nodeMerge: [{}],\n      nodeSplit: [{}],\n      aggregate: [\"owl:datatypeProperty\"],\n      auxiliaryNodes: [] // here empty\n    };\n  }\n}\n","// data handler is a base class;\n\nimport * as $CONST from \"../Base/BaseComponentConstants\";\nimport BaseNodeLinkMapper from \"./BaseNodeLinkMapper\";\n\nexport default class NodeLinkMapper extends BaseNodeLinkMapper {\n  constructor() {\n    super();\n    this.type = $CONST.TYPE_VERTEX_EDGE_MAPPER; // default type;\n\n    this.requestedInputType = $CONST.TYPE_VERTEX_EDGE_MODEL;\n    this.hasCompatibleInput = false;\n\n    this.prefixMapperL2S = {\n      \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n      \"http://www.w3.org/2000/01/rdf-schema#\": \"rdfs\",\n      \"http://www.w3.org/2002/07/owl#\": \"owl\",\n      \"http://www.w3.org/2001/XMLSchema#\": \"xsd\",\n      \"http://purl.org/dc/elements/1.1/\": \"dc\",\n      \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n      \"http://xmlns.com/wot/0.1/\": \"wot\",\n      \"http://www.w3.org/2003/06/sw-vocab-status/ns#\": \"vs\",\n      \"http://xmlns.com/foaf/0.1/\": \"foaf\",\n      \"http://www.w3.org/2004/02/skos/core#\": \"skos\"\n    };\n\n    this.definitionMap = {\n      nodeMapper: {\n        __nodeType: \"__vertexType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\"\n      },\n      linkMapper: {\n        __linkType: \"__edgeType\",\n        __nodeLinkIdentifier: \"__vertexEdgeIdentifier\",\n        __displayName: \"__displayName\",\n        __linkAxiom: \"__edgeAxiom\",\n        __source: \"__source\",\n        __target: \"__target\"\n      },\n      nodeMerge: [\n        {\n          __linkType: \"axiomLink\",\n          __displayName: \"owl:equivalentClass\"\n        }\n      ],\n      nodeSplit: [\n        {\n          constraints: \"none\",\n          type: [\"rdfs:Literal\"]\n          // there could be more types like xsd:datatype or so\n        }\n      ],\n      auxiliaryNodes: [] // here empty\n    };\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  createPreviewVisualization,\n  updateRenderingModuleConfiguration\n} from \"./redux/actions\";\nimport { connect } from \"react-redux\";\nimport TabLikeHeader from \"./TabLikeHeader\";\n\nimport { Button } from \"reactstrap\";\nimport VisModal from \"./VisModal\";\nimport StaticLocalVowlJSONLoader from \"../Implementation/DataAccessComponent/StaticLocalVowlJSONLoader\";\nimport VOWLParser from \"../Implementation/Parsers/VOWLParser\";\nimport SparqlParser from \"../Implementation/Parsers/SparqlParser\";\nimport BaseVertexEdgeMapper from \"../Implementation/Mappers/BaseVertexEdgeMapper\";\nimport BaseNodeLinkMapper from \"../Implementation/Mappers/BaseNodeLinkMapper\";\nimport RenderingModuleConfig from \"./RenderingModuleConfig\";\nimport DataAccessConfigurator from \"./DataAccessConfigurator\";\nimport WikiDataAccessConfigurator from \"./WikiDataAccessConfigurator\";\n\nimport DBPediaLoader from \"../Implementation/DataAccessComponent/DBPediaLoader\";\nimport WikiDataLoader from \"../Implementation/DataAccessComponent/WikiDataLoader\";\nimport RDFNodeLinkMapper from \"../Implementation/Mappers/RDFNodeLinkMapper\";\nimport WikiDataExampleParser from \"../Implementation/Parsers/WikiDataParserExample\";\nimport ORKGAccessConfigurator from \"./ORKGAccessConfigurator\";\nimport OrkgDataLoader from \"../Implementation/DataAccessComponent/OrkgDataLoader\";\nimport ORKGParser from \"../Implementation/Parsers/ORKGParser\";\nimport UMLNodeLinkMapper from \"../Implementation/Mappers/UMLNodeLinkMapper\";\nimport VowlNodeLinkMapper from \"../Implementation/Mappers/VowlNodeLinkMapper\";\n\nclass PipeLineVis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      selectedModule: undefined,\n      selectionType: undefined,\n\n      dataAccessHandlerExecuted: false,\n      resourceRelationModel: undefined,\n\n      vertexEdgeMapperExecuted: false,\n      vertexEdgeModel: undefined,\n\n      nodeLinkMapperExecuted: false,\n      nodeLinkModel: undefined\n    };\n\n    this.basicVertexEdgeMapper = new BaseVertexEdgeMapper();\n    this.basicNodeLinkMapper = new BaseNodeLinkMapper();\n\n    this.childState = {\n      graph_mouseZoom: true,\n      graph_mouseDrag: true,\n      node_mouseDrag: true,\n      node_mouseHover: true,\n      node_mouseSingleClick: true,\n      node_mouseDoubleClick: true,\n      link_mouseDrag: true,\n      link_mouseHover: true,\n      // todo: link clicks ;\n      graphBgColor: \"#FFFFFF\",\n\n      // internal state stuffl\n      configSelectionOpen: false,\n      configSelected: \"Default\"\n    };\n\n    this.dataAccessHandler_DBPediaState = {\n      endpointURL: \"http://live.dbpedia.org/sparql/\",\n      graphURL: \"http://dbpedia.org\",\n      query:\n        \"PREFIX dbr: <http://dbpedia.org/resource/>\\n\" +\n        \"PREFIX dbo: <http://dbpedia.org/ontology/>\\n\" +\n        \"PREFIX owl: <http://www.w3.org/2002/07/owl#>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\n\\n\" +\n        \"SELECT  DISTINCT ?subject ?predicate ?object WHERE { \\n\" +\n        \"{dbr:Nikola_Tesla ?predicate ?object.\\n\" +\n        \"?object a owl:Class} \\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla dbo:birthDate ?object.\\n\" +\n        \"BIND(dbo:birthDate as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla dbo:deathDate ?object.\\n\" +\n        \"BIND(dbo:deathDate as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla rdfs:label ?object.\\n\" +\n        \"BIND(rdfs:label as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla rdfs:comment ?object.\\n\" +\n        \"BIND(rdfs:comment as ?predicate)\\n\" +\n        \"}\\n\" +\n        \"UNION {\\n\" +\n        \"dbr:Nikola_Tesla ?foafPredicate ?object.\\n\" +\n        'FILTER(STRSTARTS(STR(?foafPredicate), \"http://xmlns.com/foaf/0.1/\"))\\n' +\n        \"BIND(?foafPredicate as ?predicate)\\n\" +\n        \"}\\n\" +\n        'FILTER(!isLiteral(?object) ||langMatches(lang(?object),\"EN\") || datatype(?object)=xsd:date)\\n' +\n        \"BIND(dbr:Nikola_Tesla as ?subject)}\\n\" +\n        \"Limit 100\",\n      queryResult: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (\n      prevProps.store.selectedDataSource !== this.props.store.selectedDataSource\n    ) {\n      this.props.createPreviewVisualization(false);\n      this.setState({\n        dataAccessHandlerExecuted: false,\n        resourceRelationModel: undefined,\n        vertexEdgeMapperExecuted: false,\n        vertexEdgeModel: undefined\n      });\n    }\n\n    if (\n      prevProps.store.selectedNodeLinkMapper !==\n      this.props.store.selectedNodeLinkMapper\n    ) {\n      this.props.createPreviewVisualization(false);\n      this.setState({\n        nodeLinkMapperExecuted: false,\n        nodeLinkModel: undefined\n      });\n    }\n  };\n\n  propagate_DBPEdiaConfiguratorState = state => {\n    this.dataAccessHandler_DBPediaState = state;\n  };\n\n  propagateState = state => {\n    this.childState = state;\n    if (this.props.store.createPreviewVisualization) {\n      this.props.createPreviewVisualization(false);\n    }\n\n    // todo check if requires update?\n  };\n\n  // node link mapper functions ;\n  configureNodeLinkMapper = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Node Link Mapper\",\n      selectionType: \"configure\"\n    });\n  };\n\n  executeNodeLinkMapper = moduleName => {\n    if (moduleName === \"Basic Mapper\") {\n      // create a simple data access handler and execute it;\n      if (this.state.vertexEdgeModel) {\n        this.basicNodeLinkMapper.setInputData(this.state.vertexEdgeModel);\n\n        this.basicNodeLinkMapper.execute().then(() => {\n          const nodeLinkModel = this.basicNodeLinkMapper.getResult();\n          this.setState({\n            nodeLinkMapperExecuted: true,\n            nodeLinkModel: nodeLinkModel\n          });\n        });\n      }\n    }\n    if (moduleName === \"VOWL\") {\n      // create a simple data access handler and execute it;\n      if (this.state.vertexEdgeModel) {\n        const vowlNodeLinkMapper = new VowlNodeLinkMapper();\n        vowlNodeLinkMapper.setInputData(this.state.vertexEdgeModel);\n        vowlNodeLinkMapper.execute().then(() => {\n          const nodeLinkModel = vowlNodeLinkMapper.getResult();\n          this.setState({\n            nodeLinkMapperExecuted: true,\n            nodeLinkModel: nodeLinkModel\n          });\n        });\n      }\n    }\n\n    if (moduleName === \"RDF\") {\n      // create a simple data access handler and execute it;\n      if (this.state.vertexEdgeModel) {\n        const rdfNodeLinkMapper = new RDFNodeLinkMapper();\n        rdfNodeLinkMapper.setInputData(this.state.vertexEdgeModel);\n        rdfNodeLinkMapper.execute().then(() => {\n          const nodeLinkModel = rdfNodeLinkMapper.getResult();\n          this.setState({\n            nodeLinkMapperExecuted: true,\n            nodeLinkModel: nodeLinkModel\n          });\n        });\n      }\n    }\n\n    if (moduleName === \"UML\") {\n      // create a simple data access handler and execute it;\n      if (this.state.vertexEdgeModel) {\n        const umlNodeLinkMapper = new UMLNodeLinkMapper();\n        umlNodeLinkMapper.setInputData(this.state.vertexEdgeModel);\n        umlNodeLinkMapper.execute().then(() => {\n          const nodeLinkModel = umlNodeLinkMapper.getResult();\n          this.setState({\n            nodeLinkMapperExecuted: true,\n            nodeLinkModel: nodeLinkModel\n          });\n        });\n      }\n    }\n  };\n\n  viewNodeLinkMapperOutput = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Node Link Mapper\",\n      selectionType: \"viewOutput\"\n    });\n  };\n\n  replacer(key, value) {\n    // Filtering out properties\n    if (\n      key === \"__outgoingEdges\" ||\n      key === \"__incomingEdges\" ||\n      key === \"__outgoingLinks\" ||\n      key === \"__incomingLinks\" ||\n      key === \"resourceReference\"\n    ) {\n      return undefined;\n    }\n    return value;\n  }\n\n  configureVertexEdgeMapper = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Vertex Edge Mapper\",\n      selectionType: \"configure\"\n    });\n  };\n  executeVertexEdgeMapper = moduleName => {\n    if (moduleName === \"Basic Mapper\") {\n      // create a simple data access handler and execute it;\n      if (this.state.resourceRelationModel) {\n        this.basicVertexEdgeMapper.setInputData(\n          this.state.resourceRelationModel\n        );\n\n        this.basicVertexEdgeMapper.execute().then(() => {\n          const vertexEdgeModel = this.basicVertexEdgeMapper.getResult();\n          this.setState({\n            vertexEdgeMapperExecuted: true,\n            vertexEdgeModel: vertexEdgeModel\n          });\n        });\n      }\n    }\n  };\n  viewVertexEdgeMapperOutput = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Vertex Edge Mapper\",\n      selectionType: \"viewOutput\"\n    });\n  };\n\n  configureDataAccessHandler = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Data Access Handler\",\n      selectionType: \"configure\"\n    });\n  };\n\n  viewDataAccessHandlerOutput = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Data Access Handler\",\n      selectionType: \"viewOutput\"\n    });\n  };\n\n  executeDataAccessHandler = moduleName => {\n    if (moduleName === \"Ontology File\") {\n      // create a simple data access handler and execute it;\n      const fileLoader = new StaticLocalVowlJSONLoader();\n\n      fileLoader.execute().then(() => {\n        // create a vowlParser;\n        const vowlParser = new VOWLParser();\n        vowlParser.setInputData(fileLoader.getResult());\n        vowlParser.execute();\n        const resourceModel = vowlParser.getResult();\n        this.setState({\n          dataAccessHandlerExecuted: true,\n          resourceRelationModel: resourceModel\n        });\n      });\n    }\n\n    if (moduleName === \"DBPedia\") {\n      // create a simple data access handler and execute it;\n      const dbpediaLoader = new DBPediaLoader();\n      // set parameters to it;\n      dbpediaLoader.setGraph(this.dataAccessHandler_DBPediaState.graphURL);\n      dbpediaLoader.setDBPediaURL(\n        this.dataAccessHandler_DBPediaState.endpointURL\n      );\n      dbpediaLoader.setQuery(this.dataAccessHandler_DBPediaState.query);\n\n      dbpediaLoader.execute().then(() => {\n        const simpleSparqlParser = new SparqlParser();\n        simpleSparqlParser.setInputData(dbpediaLoader.getResult());\n        simpleSparqlParser.execute().then(() => {\n          const resourceModel = simpleSparqlParser.getResult();\n          this.setState({\n            dataAccessHandlerExecuted: true,\n            resourceRelationModel: resourceModel\n          });\n        });\n      });\n    }\n\n    if (moduleName === \"WikiData\") {\n      // create a simple data access handler and execute it;\n      const accessHandler = new WikiDataLoader();\n      accessHandler.execute().then(() => {\n        const wikiParser = new WikiDataExampleParser();\n        wikiParser.setInputData(accessHandler.getResult());\n        wikiParser.execute().then(() => {\n          const resourceModel = wikiParser.getResult();\n          this.setState({\n            dataAccessHandlerExecuted: true,\n            resourceRelationModel: resourceModel\n          });\n        });\n      });\n    }\n\n    if (moduleName === \"ORKG\") {\n      // create a simple data access handler and execute it;\n      const accessHandler = new OrkgDataLoader();\n      accessHandler.execute().then(() => {\n        const parser = new ORKGParser();\n        parser.setInputData(accessHandler.getResult());\n        parser.execute().then(() => {\n          const resourceModel = parser.getResult();\n          this.setState({\n            dataAccessHandlerExecuted: true,\n            resourceRelationModel: resourceModel\n          });\n        });\n      });\n    }\n  };\n\n  executeRenderingModule = () => {\n    // const pipeline = {\n    //   dataAccessHandler: this.props.store.selectedDataSource,\n    //   vertexEdgeMapper: this.props.store.selectedVertexEdgeMapper,\n    //   nodeLinkMapper: this.props.store.selectedNodeLinkMapper\n    // };\n    this.props.createPreviewVisualization(true);\n    if (this.childState.hasOwnProperty(\"graph_mouseZoom\")) {\n      this.props.updateRenderingModuleConfiguration(this.childState);\n    }\n  };\n\n  configureRenderingModule = moduleName => {\n    this.setState({\n      showModal: true,\n      selectedModule: \"Rendering Module\",\n      selectionType: \"configure\"\n    });\n  };\n\n  renderDataAccessHandler = () => {\n    const moduleName = this.props.store.selectedDataSource;\n    // const configOptions = dataSources.default[moduleName];\n    // const renderingOptions = [];\n    // const renderingOptionsValues = [];\n    //\n    // if (configOptions.renderingItems) {\n    //   for (const name in configOptions.renderingItems) {\n    //     if (configOptions.renderingItems.hasOwnProperty(name)) {\n    //       renderingOptions.push(name);\n    //       renderingOptionsValues.push(configOptions.renderingItems[name]);\n    //     }\n    //   }\n    // }\n\n    return (\n      <TabLikeHeader\n        title=\"Data Access Handler \"\n        position=\"left\"\n        width={330}\n        collapsable={false}\n      >\n        {moduleName}\n        <hr style={{ margin: \"1px\" }} />\n        <div\n          style={{\n            textAlign: \"left\",\n            display: \"inline\"\n          }}\n        >\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.configureDataAccessHandler(moduleName);\n            }}\n          >\n            Configure\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.dataAccessHandlerExecuted\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.executeDataAccessHandler(moduleName);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.resourceRelationModel\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.viewDataAccessHandlerOutput(moduleName);\n            }}\n          >\n            View Output\n          </Button>\n          {/*<Button style={{ padding: \"2px\", margin: \"5px\" }}>Export</Button>*/}\n        </div>\n      </TabLikeHeader>\n    );\n  };\n\n  renderVertexEdgeMapper = () => {\n    const moduleName = this.props.store.selectedVertexEdgeMapper;\n    return (\n      <TabLikeHeader\n        title=\"Vertex Edge Mapper\"\n        position=\"left\"\n        width={320}\n        collapsable={false}\n      >\n        {moduleName}\n        <hr style={{ margin: \"1px\" }} />\n        <div\n          style={{\n            textAlign: \"left\",\n            display: \"inline\"\n          }}\n        >\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.configureVertexEdgeMapper(moduleName);\n            }}\n          >\n            Configure\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.vertexEdgeMapperExecuted\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.executeVertexEdgeMapper(moduleName);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.vertexEdgeModel\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.viewVertexEdgeMapperOutput(moduleName);\n            }}\n          >\n            View Output\n          </Button>\n          {/*<Button style={{ padding: \"2px\", margin: \"5px\" }}>Export</Button>*/}\n        </div>\n      </TabLikeHeader>\n    );\n  };\n\n  renderNodeLinkMapper = () => {\n    const moduleName = this.props.store.selectedNodeLinkMapper;\n    return (\n      <TabLikeHeader\n        title=\"Node Link Mapper\"\n        position=\"left\"\n        width={320}\n        collapsable={false}\n      >\n        {moduleName}\n        <hr style={{ margin: \"1px\" }} />\n        <div\n          style={{\n            textAlign: \"left\",\n            display: \"inline\"\n          }}\n        >\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.configureNodeLinkMapper(moduleName);\n            }}\n          >\n            Configure\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.nodeLinkMapperExecuted\n                ? \"#2f7d38\"\n                : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.executeNodeLinkMapper(moduleName);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            style={{\n              padding: \"2px\",\n              margin: \"5px\",\n              backgroundColor: this.state.nodeLinkModel ? \"#2f7d38\" : \"#6c757d\"\n            }}\n            onClick={() => {\n              this.viewNodeLinkMapperOutput(moduleName);\n            }}\n          >\n            View Output\n          </Button>\n          {/*<Button style={{ padding: \"2px\", margin: \"5px\" }}>Export</Button>*/}\n        </div>\n      </TabLikeHeader>\n    );\n  };\n  renderRenderingModule = () => {\n    const moduleName = \"Rendering ModuleTest\";\n    return (\n      <TabLikeHeader\n        title=\"Rendering Module\"\n        position=\"left\"\n        width={320}\n        collapsable={false}\n      >\n        {moduleName}\n        <hr style={{ margin: \"1px\" }} />\n        <div\n          style={{\n            textAlign: \"left\",\n            display: \"inline\"\n          }}\n        >\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.executeRenderingModule(moduleName);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            style={{ padding: \"2px\", margin: \"5px\" }}\n            onClick={() => {\n              this.configureRenderingModule(moduleName);\n            }}\n          >\n            Configure\n          </Button>\n        </div>\n      </TabLikeHeader>\n    );\n  };\n\n  toggle = type => {\n    this.setState(prevState => ({\n      [type]: !prevState[type]\n    }));\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <div\n          // className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderBottomRightRadius: \"0\",\n            borderBottomLeftRadius: \"0\",\n            height: \"40px\",\n            width: \"100%\",\n\n            color: \"white\",\n            backgroundColor: \"#ad2f38\"\n          }}\n        >\n          <div style={{ width: \"100%\", textAlign: \"left\", padding: \"5px\" }}>\n            {this.props.title}\n          </div>\n        </div>\n\n        <div\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderTopRightRadius: \"0\",\n            borderTopLeftRadius: \"0\",\n            color: \"black\",\n            backgroundColor: \"#ffffff\",\n            marginTop: \"-1px\",\n            position: \"relative\",\n            height: \"90%\",\n            width: \"100%\"\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              height: \"200px\",\n              textAlign: \"center\",\n              display: \"flex\",\n              flexFlow: \"wrap\"\n            }}\n          >\n            {this.renderDataAccessHandler()}\n            {this.renderVertexEdgeMapper()}\n            {this.renderNodeLinkMapper()}\n            {this.renderRenderingModule()}\n          </div>\n        </div>\n\n        {this.state.selectedModule === \"Data Access Handler\" && (\n          <VisModal\n            title={\n              this.state.selectedModule +\n              \": \" +\n              this.props.store.selectedDataSource\n            }\n            toggle={() => this.toggle(\"showModal\")}\n            showDialog={this.state.showModal}\n          >\n            <div>\n              {this.props.store.selectedDataSource === \"Ontology File\" &&\n                this.state.selectionType === \"configure\" && (\n                  <div style={{ padding: \"5px\" }}>\n                    <div>This Module is not configurable in the demo.</div>\n                    <div>\n                      We are using an ontology file that has been converted\n                      using OWL2VOWL (input is a JSON file)\n                    </div>\n                    <div>\n                      You can find the file in{\" \"}\n                      <b>\"src/demoRequests/ontologyFile.json\"</b>\n                    </div>\n                  </div>\n                )}\n              {this.props.store.selectedDataSource === \"DBPedia\" &&\n                this.state.selectionType === \"configure\" && (\n                  <DataAccessConfigurator\n                    statePropagation={this.propagate_DBPEdiaConfiguratorState}\n                  />\n                )}\n\n              {this.props.store.selectedDataSource === \"WikiData\" &&\n                this.state.selectionType === \"configure\" && (\n                  <WikiDataAccessConfigurator\n                    statePropagation={() => {\n                      console.log(\"TODO\");\n                    }}\n                  />\n                )}\n\n              {this.props.store.selectedDataSource === \"ORKG\" &&\n                this.state.selectionType === \"configure\" && (\n                  <ORKGAccessConfigurator\n                    statePropagation={() => {\n                      console.log(\"TODO\");\n                    }}\n                  />\n                )}\n\n              {this.state.selectionType === \"viewOutput\" &&\n                this.state.selectedModule === \"Data Access Handler\" && (\n                  <div style={{ padding: \"5px\" }}>\n                    <div>\n                      {\" \"}\n                      Data Access Handler Output (Resource Relation Model)\n                    </div>\n                    {this.state.resourceRelationModel ? (\n                      <textarea\n                        rows=\"10\"\n                        cols=\"50\"\n                        style={{ width: \"100%\", height: \"100%\" }}\n                        readOnly={true}\n                        value={JSON.stringify(\n                          this.state.resourceRelationModel.resultingModel\n                            .modelAsJsonObject,\n                          null,\n                          \" \\t\"\n                        )}\n                      />\n                    ) : (\n                      \"Execute the module first.\"\n                    )}\n                  </div>\n                )}\n            </div>\n          </VisModal>\n        )}\n\n        {/*RENDER CONFIG FUR VERTEX EDGE MAPPER */}\n        {this.state.selectedModule === \"Vertex Edge Mapper\" && (\n          <VisModal\n            title={\n              this.state.selectedModule +\n              \": \" +\n              this.props.store.selectedVertexEdgeMapper\n            }\n            toggle={() => this.toggle(\"showModal\")}\n            showDialog={this.state.showModal}\n          >\n            <div>\n              {this.props.store.selectedVertexEdgeMapper === \"Basic Mapper\" &&\n                this.state.selectionType === \"configure\" && (\n                  <div style={{ padding: \"5px\" }}>\n                    <div>This Module is not configurable in the demo.</div>\n                    <textarea\n                      rows=\"10\"\n                      cols=\"50\"\n                      readOnly={true}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      value={JSON.stringify(\n                        this.basicVertexEdgeMapper.definitionMap,\n                        null,\n                        \" \\t\"\n                      )}\n                    />\n                  </div>\n                )}\n\n              {this.state.selectionType === \"viewOutput\" && (\n                <div>\n                  <div>Vertex Edge Mapper Output (Vertex Edge Model)</div>\n                  {this.state.vertexEdgeModel ? (\n                    <textarea\n                      rows=\"10\"\n                      cols=\"50\"\n                      readOnly={true}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      value={JSON.stringify(\n                        this.state.vertexEdgeModel.resultingModel\n                          .modelAsJsonObject,\n                        this.replacer,\n                        \" \\t\"\n                      )}\n                    />\n                  ) : (\n                    \"Execute the module first.\"\n                  )}\n                </div>\n              )}\n            </div>\n          </VisModal>\n        )}\n\n        {/*RENDER CONFIG FOR NODE LINK  MAPPER */}\n        {this.state.selectedModule === \"Node Link Mapper\" && (\n          <VisModal\n            title={\n              this.state.selectedModule +\n              \": \" +\n              this.props.store.selectedVertexEdgeMapper\n            }\n            toggle={() => this.toggle(\"showModal\")}\n            showDialog={this.state.showModal}\n          >\n            <div>\n              {this.props.store.selectedVertexEdgeMapper === \"Basic Mapper\" &&\n                this.state.selectionType === \"configure\" && (\n                  <div style={{ padding: \"5px\" }}>\n                    <div>This Module is not configurable in the demo.</div>\n                    <textarea\n                      rows=\"10\"\n                      cols=\"50\"\n                      readOnly={true}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      value={JSON.stringify(\n                        this.basicNodeLinkMapper.definitionMap,\n                        this.replacer,\n                        \" \\t\"\n                      )}\n                    />\n                  </div>\n                )}\n\n              {this.state.selectionType === \"viewOutput\" && (\n                <div>\n                  <div>Node Link Mapper Output (Vertex Edge Model)</div>\n                  {this.state.nodeLinkModel ? (\n                    <textarea\n                      rows=\"10\"\n                      cols=\"50\"\n                      readOnly={true}\n                      style={{ width: \"100%\", height: \"100%\" }}\n                      value={JSON.stringify(\n                        this.state.nodeLinkModel.resultingModel\n                          .modelAsJsonObject,\n                        this.replacer,\n                        \" \\t\"\n                      )}\n                    />\n                  ) : (\n                    \"Execute the module first.\"\n                  )}\n                </div>\n              )}\n            </div>\n          </VisModal>\n        )}\n        {this.state.selectedModule === \"Rendering Module\" && (\n          <VisModal\n            title={this.state.selectedModule + \"-- Configuration \"}\n            toggle={() => this.toggle(\"showModal\")}\n            showDialog={this.state.showModal}\n          >\n            <div>\n              <RenderingModuleConfig\n                propagateState={this.propagateState}\n                nodeLinkModel={this.state.nodeLinkModel}\n                initialState={this.childState}\n              />\n            </div>\n          </VisModal>\n        )}\n      </div>\n    );\n  }\n}\n\nPipeLineVis.propTypes = {\n  title: PropTypes.string,\n  selectedDataSource: PropTypes.string,\n  store: PropTypes.object,\n  createPreviewVisualization: PropTypes.func,\n  updateRenderingModuleConfiguration: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {\n    createPreviewVisualization: payload =>\n      dispatch(createPreviewVisualization(payload)),\n    updateRenderingModuleConfiguration: payload => {\n      dispatch(updateRenderingModuleConfiguration(payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PipeLineVis);\n","export default class BasePrimitive {\n  constructor() {\n    this.__id = undefined;\n    this.__displayName = undefined;\n    this.__renderingConfig = undefined;\n    this.__drawTools = undefined;\n\n    this.__visible = true;\n\n    this.groupRoot = undefined;\n  }\n\n  visible(visible) {\n    if (!arguments.length) {\n      return this.__visible;\n    }\n    this.__visible = visible;\n  }\n\n  id(id) {\n    if (!arguments.length) {\n      return this.__id;\n    }\n    this.__id = id;\n  }\n\n  drawTools(drawTools) {\n    if (!arguments.length) {\n      return this.__drawTools;\n    }\n    this.__drawTools = drawTools;\n  }\n\n  displayName(nameStr) {\n    if (!arguments.length) {\n      return this.__displayName;\n    }\n    this.__displayName = nameStr;\n  }\n\n  renderingConfig = cfgObj => {\n    if (!cfgObj) {\n      return this.__renderingConfig;\n    }\n    // using deepCopy\n    this.__renderingConfig = JSON.parse(JSON.stringify(cfgObj));\n    // this will allow a primitive to overwrite the global definitions;\n  };\n\n  render() {\n    console.log(\"This is abstract function!\");\n  }\n}\n","import BasePrimitive from \"./BasePrimitive\";\n\nimport * as d3 from \"d3\";\nexport default class NodePrimitive extends BasePrimitive {\n  constructor() {\n    super();\n    this.x = 0;\n    this.y = 0;\n\n    this.incomingLinks = [];\n    this.outgoingLinks = [];\n    this.__numberOfLoops = 0;\n    this.__internalObjectType = \"node\";\n\n    this.__transition_animationDuration = 500; // default value;\n  }\n\n  addIncomingLink = link => {\n    this.incomingLinks.push(link);\n  };\n  addOutgoingLink = link => {\n    this.outgoingLinks.push(link);\n  };\n\n  setPosition = (x, y) => {\n    this.x = x;\n    this.y = y;\n  };\n\n  numberOfLoops(val) {\n    if (!arguments.length) {\n      return this.__numberOfLoops;\n    }\n    this.__numberOfLoops = val;\n  }\n\n  updateRenderingPosition = () => {\n    if (this.groupRoot) {\n      this.groupRoot.attr(\n        \"transform\",\n        \"translate(\" + this.x + \",\" + this.y + \")\"\n      );\n    }\n    // update all related links; (using concat as temp object to merge the links)\n    this.incomingLinks.concat(this.outgoingLinks).forEach(l => {\n      l.updateRenderingPosition();\n    });\n  };\n\n  removeAllRenderedElementsFromParent() {\n    if (this.groupRoot) {\n      // we have a parent;\n      this.groupRoot.selectAll(\"rect\").remove();\n      this.groupRoot.selectAll(\"text\").remove();\n      this.groupRoot.selectAll(\"g\").remove();\n    }\n  }\n\n  redraw() {\n    this.removeAllRenderedElementsFromParent();\n    this.render(this.groupRoot);\n  }\n\n  // this one will get the draw Functions replacement!\n  render = groupRoot => {\n    this.groupRoot = groupRoot;\n\n    // handle rendering based on the config;\n    const renderingElements = this.drawTools().renderNode(\n      this.groupRoot,\n      this.renderingConfig(),\n      this\n    );\n    this.renderingShape = renderingElements.renderingShape;\n    this.renderingText = renderingElements.renderingText;\n\n    //   this.renderingElement = DrawTools().drawElement(this.svgRoot, this.configObject, this);\n    //   this.renderingText = this.drawLabelText(this.svgRoot, this.label);\n    //   this.renderingElement.append('title').text(this.label);\n    //   this.updateTextPosition();\n    // }\n\n    this.updateRenderingPosition();\n  };\n\n  /** Animation extensions **/\n  setTransitionAnimationDuration = val => {\n    this.__transition_animationDuration = val;\n  };\n  startLayoutTransition = (id, max, callback) => {\n    const f_x = parseInt(this.x);\n    const f_y = parseInt(this.y);\n    const that = this;\n    that.groupRoot\n      .transition()\n      .tween(\"attr.translate\", function() {\n        return function(t) {\n          const tr = d3.transform(that.groupRoot.attr(\"transform\"));\n          that.x = tr.translate[0];\n          that.y = tr.translate[1];\n          that.px = that.x;\n          that.py = that.y;\n          that.incomingLinks.forEach(link => {\n            link.updateRenderingPosition();\n          });\n          that.outgoingLinks.forEach(link => {\n            link.updateRenderingPosition();\n          });\n        };\n      })\n      .duration(this.__transition_animationDuration)\n      .each(\"end\", function() {\n        if (callback && id === max) {\n          callback();\n        }\n      })\n      .attr(\"transform\", \"translate(\" + f_x + \",\" + f_y + \")\");\n  };\n}\n","import BasePrimitive from \"./BasePrimitive\";\n\nexport default class LinkPrimitive extends BasePrimitive {\n  constructor() {\n    super();\n    this.x = 0;\n    this.y = 0;\n    this.sourceNode = null;\n    this.targetNode = null;\n    this.__internalType = \"singleLink\";\n    this.propertyNodePostion = null;\n    this.__internalObjectType = \"link\";\n  }\n\n  setInternalType(type) {\n\n    this.__internalType = type;\n    // type can be loop, singleLink, multiLink ;\n  }\n\n  setTargetNode(node) {\n    this.targetNode = node;\n    node.addIncomingLink(this);\n  }\n  setSourceNode(node) {\n    this.sourceNode = node;\n    node.addOutgoingLink(this);\n  }\n\n  setPosition = (x, y) => {\n    this.x = x;\n    this.y = y;\n  };\n\n  getForceNode() {\n    if (\n      this.__internalType === \"loop\" ||\n      this.__internalType === \"multiLink\" ||\n      this.__internalType === \"singleLink\"\n    ) {\n      // get the data for the force node;\n      const nodeForForce = this.renderingShape.data();\n      return nodeForForce;\n    }\n    // return []; // empty array\n  }\n\n  getForceLink() {\n    if (this.__internalType === \"loop\") {\n      return [\n        {\n          source: this.sourceNode,\n          target: this.renderingShape.data()[0],\n          type: \"loop\"\n        }\n      ];\n    }\n    // if (this.__internalType === \"multiLink\" ) {\n    return [\n      {\n        source: this.sourceNode,\n        target: this.renderingShape.data()[0],\n        type: \"mlPart\"\n      },\n      {\n        source: this.renderingShape.data()[0],\n        target: this.targetNode,\n        type: \"mlPart\"\n      }\n    ];\n    // }\n    //\n    // return [\n    //   {\n    //     source: this.sourceNode,\n    //     target: this.targetNode,\n    //     type: \"direct\"\n    //   }\n    // ];\n  }\n\n  updateRenderingPosition = () => {\n    // based on config; choose attribute selector;\n\n    if (this.renderingLine) {\n      // set its attributes based on the source and target nodes;\n      this.drawTools().updateLinePosition(\n        this,\n        this.renderingLine,\n        this.sourceNode,\n        this.targetNode,\n        this.__internalType,\n        this.renderingConfig().options.link_renderingType === \"curve\" ||\n          this.__internalType === \"loop\"\n      );\n\n      this.propertyNodePostion = this.drawTools().updatePropertyPosition(\n        this,\n        this.renderingShape,\n        this.sourceNode,\n        this.targetNode,\n        this.__internalType,\n        this.renderingConfig().options.link_renderingType === \"curve\"\n      );\n    }\n  };\n\n  resetPropertyPosition() {\n    // console.log(\"Resetting node position!\");\n    // console.log(this.propertyNodePostion);\n  }\n\n  initializePropertyNodePosition() {\n    const pos = this.drawTools().lineTools.computeShapeBasedCenterPoint(\n      this.sourceNode,\n      this.targetNode,\n      1\n    );\n\n    this.propertyNodePostion = { x: pos.cx, y: pos.cy };\n  }\n\n  setPropertyNodePosition(pos) {\n    this.propertyNodePostion = pos;\n    if (this.renderingShape) {\n      this.renderingShape.data()[0].x = this.propertyNodePostion.x;\n      this.renderingShape.data()[0].px = this.propertyNodePostion.x;\n      this.renderingShape.data()[0].y = this.propertyNodePostion.y;\n      this.renderingShape.data()[0].py = this.propertyNodePostion.y;\n    }\n  }\n\n  // this one will get the draw Functions replacement!\n  render = (groupRoot, propertyContainer, arrowContainer) => {\n    this.groupRoot = groupRoot;\n    this.propertyContainer = propertyContainer;\n    this.arrowContainer = arrowContainer;\n\n    //rendering the link\n\n\n    let reloadPos = false;\n    if (this.renderingShape) {\n      reloadPos = true;\n      const oldPos = [\n        this.renderingShape.data()[0].x,\n        this.renderingShape.data()[0].y\n      ];\n\n      this.propertyNodePostion = { x: oldPos[0], y: oldPos[1] };\n    }\n\n    // handle rendering based on the config;\n    const renderingElements = this.drawTools().renderLink(\n      this.groupRoot,\n      this.propertyContainer,\n      this.arrowContainer,\n      this.renderingConfig(),\n      this\n    );\n    this.renderingLine = renderingElements.renderingLine;\n    this.renderingShape = renderingElements.renderingShape;\n    this.renderingText = renderingElements.renderingText;\n\n    if (this.__internalType !== \"loop\" && this.__internalType !== \"multiLink\") {\n      // CHECK THE CURVE ATTRIBUTE\n      if (this.renderingConfig().options.link_renderingType === \"line\") {\n        this.setInternalType(\"singleLink\");\n      } else {\n        if (\n          this.renderingConfig().options.link_renderingType === \"curve\" &&\n          this.__internalType !== \"loop\"\n        ) {\n          this.setInternalType(\"multiLink\");\n        }\n      }\n    }\n\n    if (reloadPos) {\n      this.renderingShape.data()[0].x = this.propertyNodePostion.x;\n      this.renderingShape.data()[0].px = this.propertyNodePostion.x;\n      this.renderingShape.data()[0].y = this.propertyNodePostion.y;\n      this.renderingShape.data()[0].py = this.propertyNodePostion.y;\n    }\n\n    this.updateRenderingPosition();\n  };\n}\n","export default class DefaultRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {};\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"circle\",\n        bgColor: \"#800080\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#4d88ad\",\n        fontSize: \"22px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"dashed\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#45c3d6\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#d58d88\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#aaccff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"false\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"22px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.hasOwnProperty(type)) {\n      console.log(\"NO DEFINITION FOR NODE TYPE:\" + type);\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.hasOwnProperty(type)) {\n      console.log(\"NO DEFINITION FOR LINK TYPE:\" + type);\n\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject[type];\n  };\n}\n","export default class ShapeTools {\n  // we use the attributes of the shape to render it ;)\n  getShapeRadius = shape => {\n    // get the shape radius based on shape parameters;\n    return parseFloat(shape.attr(\"rx\"));\n  };\n\n  getShapeWidth = shape => {\n    // get the shape radius based on shape parameters;\n    return parseFloat(shape.attr(\"width\"));\n  };\n\n  getShapeHeight = shape => {\n    // get the shape radius based on shape parameters;\n    return parseFloat(shape.attr(\"height\"));\n  };\n}\n","import ShapeTools from \"./ShapeTools\";\n\nexport default class LineTools {\n  constructor() {\n    this.shapeTools = new ShapeTools();\n  }\n\n  computeCenterPoint(domain, range, offset) {\n    const cx = 0.5 * (range.x + domain.x) + offset;\n    const cy = 0.5 * (range.y + domain.y) + offset;\n    return { cx: cx, cy: cy };\n  }\n\n  computeShapeBasedCenterPoint(domain, range, offset) {\n    const domainOffset = 0.5 * parseInt(domain.renderingShape.attr(\"width\"));\n    const rangeOffset = 0.5 * parseInt(range.renderingShape.attr(\"width\"));\n\n    console.log(\"found shape offsets\", domainOffset, rangeOffset);\n\n    const cx =\n      domain.x +\n      domainOffset +\n      0.5 * (range.x - rangeOffset - domain.x + domainOffset);\n\n    // const cx = 0.5 * (range.x + domain.x) + offset;\n    const cy = 0.5 * (range.y + domain.y) + offset;\n    console.log(\"New center point is \" + cx, cy);\n\n    return { cx: cx, cy: cy };\n  }\n\n  computeIntersectionPointsWithProperty = (domain, range, link, offset) => {\n    let distOffset = 0;\n    if (offset) {\n      distOffset = offset;\n    }\n\n    const parentShape = link.renderingShape;\n    parentShape.data()[0].updateRenderingPosition();\n\n    const iP_Src = { x: domain.x, y: domain.y };\n    const iP_Prop = { x: parentShape.data()[0].x, y: parentShape.data()[0].y };\n    const iP_Tar = { x: range.x, y: range.y };\n\n    if (link.__internalType !== \"loop\") {\n      let offsetDirection = this.__computeNormalizedOffsetDirection(\n        iP_Src,\n        iP_Prop\n      );\n      this.__shapeBasedIntersection(\n        iP_Src,\n        domain,\n        offsetDirection,\n        distOffset\n      );\n\n      offsetDirection = this.__computeNormalizedOffsetDirection(\n        iP_Tar,\n        iP_Prop\n      );\n      this.__shapeBasedIntersection(iP_Tar, range, offsetDirection, distOffset);\n    } else {\n      let divisor = 2;\n      if (domain.numberOfLoops() > 0) {\n        divisor = domain.numberOfLoops();\n      }\n      const fairShareLoopAngle = 360 / divisor,\n        fairShareLoopAngleWithMargin = fairShareLoopAngle * 0.8,\n        loopAngle = Math.min(60, fairShareLoopAngleWithMargin);\n\n      const dx = iP_Prop.x - domain.x,\n        dy = iP_Prop.y - domain.y,\n        labelRadian = Math.atan2(dy, dx),\n        labelAngle = this.__calculateAngle(labelRadian);\n      const startAngle = labelAngle - loopAngle / 2;\n      const endAngle = labelAngle + loopAngle / 2;\n\n      // TODO UPDATE BASED ON SHAPE DEFINITIONS (rect, circle[x], ellipse )\n\n      const radius =\n        this.shapeTools.getShapeRadius(domain.renderingShape) + distOffset;\n      const width =\n        this.shapeTools.getShapeWidth(domain.renderingShape) + distOffset;\n      const height =\n        this.shapeTools.getShapeHeight(domain.renderingShape) + distOffset;\n\n      let usedRadius = Math.min(0.5 * width, 0.5 * height);\n      if (width === height) {\n        usedRadius = radius;\n      }\n\n      const arcFrom = this.__calculateRadian(startAngle),\n        arcTo = this.__calculateRadian(endAngle),\n        x1 = Math.cos(arcFrom) * usedRadius,\n        y1 = Math.sin(arcFrom) * usedRadius,\n        x2 = Math.cos(arcTo) * usedRadius,\n        y2 = Math.sin(arcTo) * usedRadius;\n\n      return [\n        [domain.x + x1, domain.y + y1],\n        [iP_Prop.x, iP_Prop.y],\n        [domain.x + x2, domain.y + y2]\n      ];\n    }\n    return [\n      [iP_Src.x, iP_Src.y],\n      [iP_Prop.x, iP_Prop.y],\n      [iP_Tar.x, iP_Tar.y]\n    ];\n  };\n\n  __calculateRadian(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n      angle = angle + 360;\n    }\n    return (Math.PI * angle) / 180;\n  }\n\n  __calculateAngle(radian) {\n    return radian * (180 / Math.PI);\n  }\n\n  computeIntersectionPoints = (domain, range, offset) => {\n    // get the shape parameter for domain;\n    let distOffset = 0;\n    if (offset) {\n      distOffset = offset;\n    }\n    const iP_Src = { x: domain.x, y: domain.y };\n    const iP_Tar = { x: range.x, y: range.y };\n    let offsetDirection = this.__computeNormalizedOffsetDirection(\n      domain,\n      range\n    );\n    this.__shapeBasedIntersection(iP_Src, domain, offsetDirection, distOffset);\n\n    offsetDirection = this.__computeNormalizedOffsetDirection(range, domain);\n    this.__shapeBasedIntersection(iP_Tar, range, offsetDirection, distOffset);\n    return [\n      [iP_Src.x, iP_Src.y],\n      [iP_Tar.x, iP_Tar.y]\n    ];\n  };\n\n  __computeNormalizedOffsetDirection(source, target) {\n    const x = target.x - source.x;\n    const y = target.y - source.y;\n\n    const len = Math.sqrt(x * x + y * y);\n    return { x: x / len, y: y / len };\n  }\n\n  __shapeBasedIntersection(IntPoint, node, offsetDirection, distOffset) {\n    const cfg = node.renderingConfig();\n    if (cfg.style.renderingType === \"circle\") {\n      const distanceToBorder =\n        this.shapeTools.getShapeRadius(node.renderingShape) + distOffset;\n\n      //   +distOffset;\n      // IntPoint.x = node.x;\n      // IntPoint.y = node.y;\n      IntPoint.x = node.x + distanceToBorder * offsetDirection.x;\n      IntPoint.y = node.y + distanceToBorder * offsetDirection.y;\n      // return;\n    } else if (\n      cfg.style.renderingType === \"rect\" ||\n      cfg.style.renderingType === \"ellipse\"\n    ) {\n      const width =\n        this.shapeTools.getShapeWidth(node.renderingShape) + distOffset;\n\n      const height =\n        this.shapeTools.getShapeHeight(node.renderingShape) + distOffset;\n\n      const distanceToBorderX = 0.5 * parseFloat(width);\n      const distanceToBorderY = 0.5 * parseFloat(height);\n      let scale;\n      if (Math.abs(offsetDirection.x) >= Math.abs(offsetDirection.y)) {\n        scale = 1.0 / Math.abs(offsetDirection.x);\n      } else {\n        scale = 1.0 / Math.abs(offsetDirection.y);\n      }\n      IntPoint.x = node.x + scale * distanceToBorderX * offsetDirection.x;\n      IntPoint.y = node.y + scale * distanceToBorderY * offsetDirection.y;\n      return IntPoint;\n    } else {\n      // default >> center of the node\n\n      IntPoint.x = node.x;\n      IntPoint.y = node.y;\n    }\n  }\n}\n","import * as d3 from \"d3\";\nimport LineTools from \"./LineTools\";\n\nexport default class DrawTools {\n  constructor(graph) {\n    // default one;\n    this.lineTools = new LineTools();\n    this.renderingConfigHandler = graph.getRenderingHandler();\n  }\n\n  renderShadowNode(groupContainer, renderingConfig, node) {\n    // node is used to get its data when we need to render it;\n    // the rendering order is the following\n    // 1) Shape\n    const renderingShape = groupContainer.append(\"rect\");\n    const shapeConfig = renderingConfig.style;\n    this.renderBaseShape(renderingShape, shapeConfig);\n    this.applyShapeStyle(renderingShape, shapeConfig);\n    const displayName = this.drawDisplayName(\n      groupContainer,\n      node.__displayName,\n      renderingConfig\n    );\n\n    this.applyAdditionalOptions(\n      groupContainer,\n      renderingShape,\n      displayName,\n      renderingConfig,\n      node\n    );\n    // handle options;\n    // 3 Additional Icons provided by extensions [TODO];\n    return { renderingShape: renderingShape, renderingText: displayName };\n  }\n\n  renderNode(groupContainer, renderingConfig, node) {\n    // node is used to get its data when we need to render it;\n    // the rendering order is the following\n    // 1) Shape\n    const renderingShape = groupContainer.append(\"rect\");\n    const shapeConfig = renderingConfig.style;\n    this.renderBaseShape(renderingShape, shapeConfig);\n    this.applyShapeStyle(renderingShape, shapeConfig);\n    const displayName = this.drawDisplayName(\n      groupContainer,\n      node.displayName(),\n      renderingConfig\n    );\n\n    this.applyAdditionalOptions(\n      groupContainer,\n      renderingShape,\n      displayName,\n      renderingConfig,\n      node\n    );\n    // handle options;\n    // 3 Additional Icons provided by extensions [TODO];\n    return { renderingShape: renderingShape, renderingText: displayName };\n  }\n\n  renderLink(\n    groupContainer,\n    propertyContainer,\n    arrowContainer,\n    renderingConfig,\n    link\n  ) {\n    const renderingLine = this.__createLinkLine(\n      groupContainer,\n      renderingConfig\n    );\n\n    let renderingShape = null;\n    let renderingText = null;\n    // we dont care about the arrows, they handle them selfs;\n    if (renderingConfig.options.drawArrowHead) {\n      this.__drawArrowHead(\n        groupContainer,\n        arrowContainer,\n        \"arrowHead_\" + link.id(),\n        renderingConfig.style.arrowHead\n      );\n    }\n    if (renderingConfig.options.drawArrowTail) {\n      this.__drawArrowTail(\n        groupContainer,\n        arrowContainer,\n        \"arrowTail_\" + link.id(),\n        renderingConfig.style.arrowTail\n      );\n    }\n    if (renderingConfig.options.drawPropertyNode) {\n      const groupContainer = null;\n      const renderingElements = this.__createRenderingShapeForPropertyNode(\n        propertyContainer,\n        groupContainer,\n        renderingConfig.style.propertyNode,\n        link\n      );\n      renderingShape = renderingElements.renderingShape;\n      renderingText = renderingElements.displayName;\n    }\n\n    return {\n      renderingLine: renderingLine,\n      renderingShape: renderingShape,\n      renderingText: renderingText\n    };\n  }\n\n  __createRenderingShapeForPropertyNode(\n    propertyContainer,\n    groupContainer,\n    cfg,\n    link\n  ) {\n    // create a group container for that thing\n    groupContainer = propertyContainer.append(\"g\");\n    const itemId =\n      \"PROPERTY_NODE_\" +\n      link.sourceNode.id() +\n      \"_\" +\n      link.id() +\n      \"_\" +\n      link.targetNode.id();\n    groupContainer.node().id = itemId;\n\n    // groupContainer.attr('id', 'PROPERTY_NODE_' + 0 + '_' + 1);\n    const dataObj = {\n      x: link.x,\n      y: link.y,\n      __id: itemId,\n      ref: link,\n      groupRoot: groupContainer\n    };\n    groupContainer.node().__data__ = dataObj;\n    dataObj.id = function() {\n      return this.__id;\n    };\n    dataObj.updateRenderingPosition = function() {\n      this.groupRoot.attr(\n        \"transform\",\n        \"translate(\" + this.x + \",\" + this.y + \")\"\n      );\n    };\n    dataObj.setPosition = function(x, y) {\n      this.x = x;\n      this.y = y;\n    };\n    const elements = this.renderNode(groupContainer, cfg, link); // just reuse of the node rendering function\n    return {\n      renderingShape: elements.renderingShape,\n      displayName: elements.displayName\n    };\n  }\n\n  __createLinkLine(group, config) {\n    const linkLine = group.append(\"path\"); // default if not found\n    this._addStrokeElements(linkLine, config.style.link, \"line\");\n    linkLine.style(\"fill\", \"none\");\n    return linkLine;\n  }\n\n  __drawArrowHead(parent, container, identifier, cfg) {\n    this.__drawArrowPrimitive(parent, container, identifier, cfg, \"marker-end\");\n  }\n  __drawArrowTail(parent, container, identifier, cfg) {\n    this.__drawArrowPrimitive(\n      parent,\n      container,\n      identifier,\n      cfg,\n      \"marker-start\"\n    );\n  }\n\n  __drawArrowPrimitive(parent, container, identifier, cfg, makerType) {\n    const scale = parseFloat(cfg.scaleFactor);\n    const v1 = scale * -14;\n    const v2 = scale * -10;\n    const v3 = scale * 28;\n    const v4 = scale * 20;\n\n    const vB_String = v1 + \" \" + v2 + \" \" + v3 + \" \" + v4;\n    const arrowHead = container\n      .append(\"marker\")\n      // .datum(property)\n      .attr(\"id\", identifier)\n      .attr(\"viewBox\", vB_String)\n      .attr(\"markerWidth\", scale * 10)\n      .attr(\"markerHeight\", scale * 10)\n      //.attr(\"markerUnits\", \"userSpaceOnUse\")\n      .attr(\"orient\", \"auto\");\n\n    parent.attr(makerType, \"url(#\" + identifier + \")\");\n    const renderingShape = arrowHead.append(\"path\");\n    if (cfg.renderingType === \"triangle\") {\n      const m1X = -12 * scale;\n      const m1Y = 8 * scale;\n      const m2X = -12 * scale;\n      const m2Y = -8 * scale;\n      renderingShape.attr(\n        \"d\",\n        \"M0,0L \" + m1X + \",\" + m1Y + \"L\" + m2X + \",\" + m2Y + \"L\" + 0 + \",\" + 0\n      );\n    }\n    if (cfg.renderingType === \"diamond\") {\n      const p0 = 0;\n      const p1 = -8 * scale;\n      const p2 = 8 * scale;\n      const pathString =\n        \"M\" +\n        p0 +\n        \",\" +\n        p1 +\n        \"L\" +\n        p2 +\n        \",\" +\n        p0 +\n        \"L\" +\n        p0 +\n        \",\" +\n        p2 +\n        \"L\" +\n        p1 +\n        \",\" +\n        p0 +\n        \"L\" +\n        p0 +\n        \",\" +\n        p1 +\n        \"L\" +\n        p2 +\n        \",\" +\n        p0 +\n        \"\";\n      renderingShape.attr(\"d\", pathString);\n    }\n\n    renderingShape.style(\"stroke\", cfg.strokeColor);\n    renderingShape.style(\"stroke-width\", cfg.strokeWidth);\n    renderingShape.style(\"fill\", cfg.fillColor);\n    if (cfg.strokeStyle !== \"solid\") {\n      if (cfg.strokeStyle === \"dashed\") {\n        renderingShape.style(\"stroke-dasharray\", 8);\n      }\n      if (cfg.strokeStyle === \"dotted\") {\n        renderingShape.style(\"stroke-dasharray\", 3);\n      }\n    }\n  }\n\n  updateLinePosition(link, line, src, tar, linkType, curve) {\n    // handling internal type overwrites;\n    if (linkType === \"loop\" || linkType === \"multiLink\") {\n      curve = true;\n    }\n\n    if (curve === false) {\n      const controlPoints = this.lineTools.computeIntersectionPoints(\n        src,\n        tar,\n        1\n      );\n      line.attr(\"d\", this.__directLineFunction(controlPoints));\n    } else {\n      const controlPoints = this.lineTools.computeIntersectionPointsWithProperty(\n        src,\n        tar,\n        link,\n        1\n      );\n      if (linkType === \"loop\") {\n        line.attr(\"d\", this.__loopLineFunction(controlPoints));\n      } else {\n        line.attr(\"d\", this.__curveLineFunction(controlPoints));\n      }\n    }\n  }\n\n  updatePropertyPosition(link, shape, src, tar, linkType, curve) {\n    if (linkType === \"loop\" || linkType === \"multiLink\") {\n      curve = true;\n    }\n    if (curve) {\n      if (shape) {\n        const parentGroup = shape.node().parentNode;\n        const x = d3.select(parentGroup).data()[0].x;\n        const y = d3.select(parentGroup).data()[0].y;\n\n        return { x, y };\n      }\n      return; // nothing to do here\n    }\n    if (shape) {\n      const parentGroup = shape.node().parentNode;\n      if (parentGroup) {\n        if (curve === false) {\n          const controlPoints = this.lineTools.computeIntersectionPointsWithProperty(\n            src,\n            tar,\n            link,\n            1\n          );\n          // const centerPoint = this.lineTools.computeCenterPoint(src, tar, 1);\n          const centerPoint = {\n            cx: 0.5 * (controlPoints[2][0] + controlPoints[0][0]),\n            cy: 0.5 * (controlPoints[2][1] + controlPoints[0][1])\n          };\n\n          d3.select(parentGroup)\n            .data()[0]\n            .setPosition(centerPoint.cx, centerPoint.cy);\n          d3.select(parentGroup)\n            .data()[0]\n            .updateRenderingPosition();\n        }\n      }\n    }\n  }\n\n  __directLineFunction = d3.svg.line();\n  __curveLineFunction = d3.svg.line().interpolate(\"cardinal\");\n  __loopLineFunction = d3.svg\n    .line()\n    .interpolate(\"cardinal\")\n    .tension(-1);\n\n  drawDisplayName = (group, text, cfg) => {\n    // 2) Label\n\n    if (cfg.options.drawDisplayName === true) {\n      return this._drawText(group, text, cfg.fontStyle);\n    }\n    // will return undefined when does not fit\n  };\n\n  measureTextWidth(text, fontFamily, fontSize) {\n    const d = d3.select(\"body\").append(\"text\");\n    d.attr(\"id\", \"width-test\");\n    d.attr(\n      \"style\",\n      \"position:absolute; float:left; white-space:nowrap; font-family:\" +\n        fontFamily +\n        \";font-size: \" +\n        fontSize\n    );\n\n    d.text(text);\n    const w = document.getElementById(\"width-test\").offsetWidth;\n    d.remove();\n    return w;\n  }\n  measureTextHeight(text, fontFamily, fontSize) {\n    const d = d3.select(\"body\").append(\"text\");\n    d.attr(\"id\", \"width-test\");\n    d.attr(\n      \"style\",\n      \"position:absolute; float:left; white-space:nowrap; font-family:\" +\n        fontFamily +\n        \";font-size: \" +\n        fontSize\n    );\n\n    d.text(text);\n    const w = document.getElementById(\"width-test\").offsetHeight;\n    d.remove();\n    return w;\n  }\n\n  applyAdditionalOptions = (group, shape, label, config, node) => {\n    const options = config.options;\n    if (options.addTitleForDisplayName) {\n      group.append(\"title\").text(label.text());\n    }\n\n    // apply position changes after the whole stuff;\n    if (options.fontSizeOverWritesShapeSize === true) {\n      const labelBBWidth = this.measureTextWidth(\n        label.text(),\n        config.fontStyle.fontFamily,\n        config.fontStyle.fontSize\n      );\n\n      shape.attr(\"x\", -0.5 * (labelBBWidth + options.overwriteOffset));\n      // shape.attr(\"y\", -0.5 * labelBB.height);\n      shape.attr(\"width\", labelBBWidth + options.overwriteOffset);\n\n      // shape.attr(\"height\", labelBB.height);\n    }\n\n    if (options.cropLongText) {\n      if (\n        this.measureTextWidth(\n          label.text(),\n          config.fontStyle.fontFamily,\n          config.fontStyle.fontSize\n        ) > parseFloat(shape.attr(\"width\"))\n      ) {\n        // crop that thing;\n        const croppedText = this.cropText(\n          label.text(),\n          config.fontStyle,\n          parseFloat(shape.attr(\"width\"))\n        );\n\n        label.text(croppedText);\n      }\n    }\n\n    if (\n      options.drawNestedAttributes === true &&\n      node.refereceResource &&\n      node.refereceResource.__aggregatedLink &&\n      node.refereceResource.__aggregatedLink.length > 0\n    ) {\n      // fetch aggregated links from resource;\n      const nestedLinks = node.refereceResource.__aggregatedLink;\n\n      const width = 220;\n      const height = parseFloat(shape.attr(\"height\")) + nestedLinks.length * 35;\n\n      shape.attr(\"x\", -0.5 * width);\n      shape.attr(\"y\", -0.5 * height);\n      shape.attr(\"width\", width);\n      shape.attr(\"height\", height);\n      // precompute the shapesize based on the types;\n\n      const labelBBHeight = this.measureTextHeight(\n        label.text(),\n        config.fontStyle.fontFamily,\n        config.fontStyle.fontSize\n      );\n      // this is height align CENTER;\n      // it sets the center of the labelBB into the center (0,0) of the rendering group;\n      const offset = -0.5 * height + labelBBHeight;\n      label.attr(\"dy\", offset + \"px\");\n\n      // draw headerline;\n      const line = group.append(\"line\");\n\n      const x = shape.attr(\"x\");\n      const y = shape.attr(\"y\");\n      const w = shape.attr(\"width\");\n\n      const fontSizeProperty = window\n        .getComputedStyle(label.node())\n        .getPropertyValue(\"font-size\");\n      const fontSize = parseFloat(fontSizeProperty);\n      const linePosY = parseFloat(y) + 8 + fontSize;\n      const linePosX = parseFloat(x) + parseFloat(w);\n      line\n        .attr(\"x1\", x)\n        .attr(\"y1\", linePosY)\n        .attr(\"x2\", linePosX)\n        .attr(\"y2\", linePosY);\n      line.style(\"stroke\", \"black\");\n      const nestedGroup = group.append(\"g\");\n      nestedGroup.attr(\"id\", \"NestedGroupForNode\" + node.id());\n\n      let offsetVal = 0;\n\n      // TODO: proper computation of element distances and uml styled height\n      const shift = 24 - nestedLinks.length * 15;\n\n      nestedLinks.forEach(link => {\n        // do crop the text;\n        const subGroupProperty = nestedGroup.append(\"g\");\n        const subGroupNode = nestedGroup.append(\"g\");\n\n        // get the rendering config for the link property;\n        const linkCFG = this.renderingConfigHandler.getLinkConfigFromType(\n          link.__linkType\n        );\n\n        const nodeCFG = this.renderingConfigHandler.getNodeConfigFromType(\n          link.__target.__nodeType\n        );\n\n        this.renderShadowNode(\n          subGroupProperty,\n          linkCFG.style.propertyNode,\n          link\n        );\n\n        // shift to left side;\n        subGroupProperty.attr(\n          \"transform\",\n          \"translate(\" + -55 + \",\" + (shift + offsetVal) + \")\"\n        );\n\n        this.renderShadowNode(subGroupNode, nodeCFG, link.__target);\n\n        subGroupNode.attr(\n          \"transform\",\n          \"translate(\" + 55 + \",\" + (shift + offsetVal) + \")\"\n        );\n\n        offsetVal += 35;\n        // just reuse of the node rendering function\n\n        // link.__displayName = this.cropText(\n        //   link.__displayName,\n        //   config.fontStyle,\n        //   100\n        // );\n        // link.__target.__displayName = this.cropText(\n        //   link.__target.__displayName,\n        //   config.fontStyle,\n        //   100\n        // );\n        //computeWidth and Height\n      });\n    }\n\n    if (\n      (!options.drawNestedAttributes ||\n        (node.refereceResource &&\n          node.refereceResource.__aggregatedLink &&\n          node.refereceResource.__aggregatedLink.length === 0)) &&\n      options.fontPositionV &&\n      options.fontPositionV === \"center\"\n    ) {\n      this._text_vAlignCenter(label, shape, config);\n    }\n\n    if (options.fontPositionH && options.fontPositionH === \"center\") {\n      this._text_hAlignCenter(label, shape, config);\n    }\n  };\n\n  _text_vAlignCenter = (label, shape, config) => {\n    const labelBBHeight = this.measureTextHeight(\n      label.text(),\n      config.fontStyle.fontFamily,\n      config.fontStyle.fontSize\n    );\n\n    // this is height align CENTER;\n    // it sets the center of the labelBB into the center (0,0) of the rendering group;\n    const offset = 0.25 * labelBBHeight;\n    label.attr(\"dy\", offset + \"px\");\n  };\n\n  _text_hAlignCenter = (label, shape, config) => {\n    const labelBBWidth = this.measureTextWidth(\n      label.text(),\n      config.fontStyle.fontFamily,\n      config.fontStyle.fontSize\n    );\n    const offset = -0.5 * labelBBWidth;\n    label.attr(\"dx\", offset + \"px\");\n  };\n\n  _drawText(container, text, cfg) {\n    const renderingTextElement = container.append(\"text\").text(text);\n\n    // apply different styles that are provided by the config\n    renderingTextElement.style(\"font-family\", cfg.fontFamily);\n    renderingTextElement.style(\"font-size\", cfg.fontSize);\n    renderingTextElement.style(\"fill\", cfg.fontColor);\n    renderingTextElement.style(\"pointer-events\", \"none\");\n    return renderingTextElement;\n  }\n\n  _addStrokeElements = (element, cfg, selector) => {\n    const color = cfg[selector + \"Color\"];\n    const width = cfg[selector + \"Width\"];\n    const style = cfg[selector + \"Style\"];\n\n    element.style(\"stroke\", color);\n    element.style(\"stroke-width\", width);\n    if (style !== \"solid\") {\n      if (style === \"dashed\") {\n        element.style(\"stroke-dasharray\", 8);\n      }\n      if (style === \"dotted\") {\n        element.style(\"stroke-dasharray\", 3);\n      }\n    }\n  };\n\n  applyShapeStyle = (targetPrimitive, renderingConfig) => {\n    targetPrimitive.attr(\"fill\", renderingConfig.bgColor);\n    this._addStrokeElements(targetPrimitive, renderingConfig, \"stroke\");\n  };\n\n  renderBaseShape = (targetPrimitive, renderingConfig) => {\n    const radius = parseInt(renderingConfig.radius);\n    const width = parseInt(renderingConfig.width);\n    const height = parseInt(renderingConfig.height);\n\n    // check if is uml style << TODO;\n    /**  render a pure circle **/\n    if (renderingConfig.renderingType === \"circle\") {\n      targetPrimitive.attr(\"x\", -radius);\n      targetPrimitive.attr(\"y\", -radius);\n      targetPrimitive.attr(\"width\", 2 * radius);\n      targetPrimitive.attr(\"height\", 2 * radius);\n      targetPrimitive.attr(\"rx\", radius);\n      targetPrimitive.attr(\"ry\", radius);\n    }\n\n    /**  render a rectangle with possible rounded corners provided by config **/\n    if (renderingConfig.renderingType === \"rect\") {\n      targetPrimitive.attr(\"x\", -0.5 * width);\n      targetPrimitive.attr(\"y\", -0.5 * height);\n      targetPrimitive.attr(\"width\", width);\n      targetPrimitive.attr(\"height\", height);\n      if (renderingConfig.roundedCorner) {\n        const tok = renderingConfig.roundedCorner.split(\",\");\n        targetPrimitive.attr(\"rx\", parseFloat(tok[0]));\n        targetPrimitive.attr(\"ry\", parseFloat(tok[1]));\n      }\n    }\n\n    /**  render an ellipse **/\n    if (renderingConfig.renderingType === \"ellipse\") {\n      targetPrimitive.attr(\"x\", -0.5 * width);\n      targetPrimitive.attr(\"y\", -0.5 * height);\n      targetPrimitive.attr(\"width\", width);\n      targetPrimitive.attr(\"height\", height);\n      targetPrimitive.attr(\"rx\", width);\n      targetPrimitive.attr(\"ry\", height);\n    }\n  };\n\n  // crop functions;\n\n  cropText(input, config, width) {\n    let truncatedText = input;\n    let textWidth;\n    let ratio;\n    let newTruncatedTextLength;\n    while (true) {\n      textWidth = this.measureTextWidth(\n        truncatedText,\n        config.fontFamily,\n        config.fontSize\n      );\n      if (textWidth <= width) {\n        break;\n      }\n      ratio = textWidth / width;\n      newTruncatedTextLength = Math.floor(truncatedText.length / ratio);\n      if (truncatedText.length === newTruncatedTextLength) {\n        break;\n      }\n      truncatedText = truncatedText.substring(0, newTruncatedTextLength);\n    }\n    if (input.length > truncatedText.length) {\n      return input.substring(0, truncatedText.length - 6) + \"...\";\n    }\n    return input;\n  }\n}\n","import BaseLayoutComponent from \"./BaseLayoutComponent\";\nimport * as d3 from \"d3\";\n\nexport default class ForceLayout extends BaseLayoutComponent {\n  constructor(graph) {\n    super(graph);\n    this.force = undefined;\n    this.forceLinks = [];\n    this.forceNodes = [];\n    this.linkDistance = \"auto\";\n    this.distanceValue = 300;\n    this.layoutSize = [];\n  }\n\n  pauseForceLayoutAnimation = doPause => {\n    if (doPause) {\n      this.stopForce();\n    } else {\n      this.resumeForce();\n    }\n  };\n\n  setLinkDistance(value) {\n    this.distanceValue = value;\n    if (this.force) {\n      this.force.linkDistance(value);\n    }\n  }\n  resumeForce() {\n    if (this.force) {\n      this.force.resume();\n    }\n  }\n  stopForce() {\n    if (this.force) {\n      this.force.stop();\n    }\n  }\n  toggleForce() {\n    if (this.force) {\n      if (this.force.alpha() === 0) {\n        this.force.resume();\n      } else {\n        this.force.stop();\n      }\n    }\n  }\n\n  initializeLayoutEngine() {\n    this.updateLayoutSize();\n\n    this.renderedNodes = this.graph.nodes;\n\n    this.renderedLinks = this.graph.links;\n    if (this.force) {\n      this.force.stop();\n    }\n    this.createForceElements();\n    this.force.start();\n    this.force.stop();\n  }\n\n  updateLayoutSize() {\n    const bb = this.graph.svgRoot.node().getBoundingClientRect();\n    this.layoutSize[0] = bb.width;\n    this.layoutSize[1] = bb.height;\n  }\n\n  recalculatePositions = () => {\n    this.renderedNodes.forEach(node => {\n      node.updateRenderingPosition();\n    });\n    this.renderedLinks.forEach(link => {\n      link.updateRenderingPosition();\n    });\n  };\n\n  createForceElements = () => {\n    const that = this;\n    if (this.force === undefined) {\n      this.force = d3.layout.force();\n    }\n\n    this.forceLinks = [];\n    this.forceNodes = [];\n    let i;\n    // for (i = 0; i < graph.propNodes.length; i++) {\n    //   if (graph.propNodes[i].visible()) {\n    //     // this is done when the property node it self is a force node >> it will return 2 links\n    //     this.forceLinks = this.forceLinks.concat(\n    //       graph.propNodes[i].getForceLink()\n    //     );\n    //   }\n    // }\n\n    // update force nodes based on visible flag\n    for (i = 0; i < this.renderedNodes.length; i++) {\n      if (this.renderedNodes[i].visible()) {\n        this.forceNodes.push(this.renderedNodes[i]);\n      }\n    }\n\n    for (i = 0; i < this.renderedLinks.length; i++) {\n      if (this.renderedLinks[i].visible()) {\n        this.forceLinks = this.forceLinks.concat(\n          this.renderedLinks[i].getForceLink()\n        );\n        this.forceNodes = this.forceNodes.concat(\n          this.renderedLinks[i].getForceNode()\n        );\n      }\n    }\n\n    this.force.nodes(this.forceNodes);\n    this.force.links(this.forceLinks);\n\n    // add reference to the layouthandler itself;\n    this.forceNodes.forEach(node => {\n      node.layoutHandlerReference = this;\n    });\n\n    this.forceLinks.forEach(link => {\n      link.layoutHandlerReference = this;\n    });\n\n    this.distanceValue = 400;\n    // create forceLinks;\n    this.force\n      .charge(function(element) {\n        return -400;\n      })\n      .linkDistance(this.computeLinkDistance) // just make sure that our links are not to long.\n      .linkStrength(0.5)\n      .size([that.layoutSize[0], that.layoutSize[1]])\n      .gravity(0.025);\n\n    this.recalculatePositions();\n    this.force.on(\"tick\", this.recalculatePositions);\n  };\n\n  computeLinkDistance(link) {\n    if (link.type === \"direct\") {\n      return 400;\n    }\n    if (link.type === \"loop\") {\n      return 150;\n    }\n    if (link.type === \"mlPart\") {\n      return 200;\n    }\n  }\n} // end of class definition\n","export default class BaseLayoutComponent {\n  constructor(graph) {\n    this.graph = graph;\n\n    this.renderedNodes = graph.nodes;\n    this.renderedLinks = graph.links;\n  }\n}\n","import * as d3 from \"d3\";\n\nexport default class GraphInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.zoom = undefined;\n    this.graphTranslation = [0, 0];\n    this.zoomFactor = 1.0;\n    this.transformAnimation = false;\n\n    this.zoomEnabled = true;\n    this.dragEnabled = true;\n  }\n\n  enableMouseZoom = val => {\n    this.zoomEnabled = val;\n  };\n  enableMouseDrag = val => {\n    this.dragEnabled = val;\n  };\n\n  applyGraphInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n    // graph interactions are zoom and drag operations\n    const that = this;\n\n    // Apply the zooming factor.\n    this.zoom = d3.behavior\n      .zoom()\n      .duration(150)\n      .scaleExtent([0.02, 5])\n      .on(\"zoom\", this.zoomed)\n      .on(\"zoomstart\", function() {\n        if (\n          d3.event.sourceEvent &&\n          d3.event.sourceEvent.buttons &&\n          d3.event.sourceEvent.buttons === 1\n        ) {\n          that.graphObject.svgRoot.style(\"cursor\", \"all-scroll\");\n        }\n      })\n      .on(\"zoomend\", function() {\n        that.graphObject.svgRoot.style(\"cursor\", \"auto\");\n      });\n\n    this.graphObject.svgRoot.call(this.zoom);\n    this.zoom = this.zoom.scaleExtent([0.02, 5]);\n    if (this.graphObject.graphRoot) {\n      this.zoom.event(this.graphObject.graphRoot);\n    }\n  };\n\n  resetUserLayout = () => {\n    console.log(\"Want to reset layout to prev zoom and translation\");\n    console.log(this.zoomFactor);\n    console.log(this.graphTranslation);\n    // const graph = this.graphObject;\n    // const graphContainer = graph.graphRoot;\n    // graphContainer.attr(\n    //   \"transform\",\n    //   \"translate(\" + this.graphTranslation + \")scale(\" + this.zoomFactor + \")\"\n    // );\n  };\n\n  zoomed = () => {\n    //   // TODO >>><<<<<<<<<<<\n    //   // console.log(\"<<<<>>>><<<>>>\");\n    //   // console.log(d3.event);\n    //\n    //   const that = this;\n    //   const graph = this.graphObject;\n    //   const graphContainer = graph.graphRoot;\n    //   let zoomEventByMWheel = false;\n    //   if (d3.event.sourceEvent) {\n    //     if (d3.event.sourceEvent.deltaY) {\n    //       zoomEventByMWheel = true;\n    //     }\n    //   } else {\n    //     // // TODO >>><<<<<<<<<<<\n    //     // console.log(\"Zoomed by double click oO \");\n    //     // this.zoomFactor = d3.event.scale;\n    //     // this.graphTranslation = d3.event.translate;\n    //     // console.log(this.zoomFactor, this.graphTranslation);\n    //   }\n    //   if (zoomEventByMWheel === false) {\n    //     if (this.transformAnimation === true) {\n    //       return;\n    //     }\n    //     if (this.zoomEnabled) {\n    //       this.zoomFactor = d3.event.scale;\n    //     }\n    //     if (this.dragEnabled) {\n    //       this.graphTranslation = d3.event.translate;\n    //       graphContainer.attr(\n    //         \"transform\",\n    //         \"translate(\" +\n    //           this.graphTranslation +\n    //           \")scale(\" +\n    //           this.zoomFactor +\n    //           \")\"\n    //       );\n    //     }\n    //     return;\n    //   }\n    //\n    //   if (this.zoomEnabled) {\n    //     this.zoomFactor = d3.event.scale;\n    //   }\n    //   if (this.dragEnabled && d3.event.sourceEvent === \"mousemove\") {\n    //     this.graphTranslation = d3.event.translate;\n    //   }\n    //\n    //   console.log(\"THis one is called at the end;\");\n    //   graphContainer\n    //     .transition()\n    //     .tween(\"attr.translate\", function() {\n    //       return function() {\n    //         // need the that ptr to the object\n    //         that.transformAnimation = true;\n    //         const tr = d3.transform(graphContainer.attr(\"transform\"));\n    //         that.graphTranslation[0] = tr.translate[0];\n    //         that.graphTranslation[1] = tr.translate[1];\n    //         that.zoomFactor = tr.scale[0];\n    //       };\n    //     })\n    //     .each(\"end\", function() {\n    //       that.transformAnimation = false;\n    //     })\n    //     .attr(\n    //       \"transform\",\n    //       \"translate(\" + that.graphTranslation + \")scale(\" + that.zoomFactor + \")\"\n    //     )\n    //     .ease(\"linear\")\n    //     .duration(250);\n    // };\n\n    if (d3.event.sourceEvent) {\n      d3.event.sourceEvent.preventDefault();\n      d3.event.sourceEvent.stopPropagation();\n    }\n\n    const that = this;\n    const graph = this.graphObject;\n    const graphContainer = graph.graphRoot;\n    let zoomEventByMWheel = false;\n    if (d3.event.sourceEvent) {\n      if (d3.event.sourceEvent.deltaY) {\n        zoomEventByMWheel = true;\n      }\n    }\n    if (zoomEventByMWheel === false) {\n      if (this.transformAnimation === true) {\n        return;\n      }\n      // this.zoomFactor = d3.event.scale;\n      // this.graphTranslation = d3.event.translate;\n      // <<TODO>> SET PARAMETERS FOR ENABLING ZOOM AND PANNIG\n      this.zoomFactor = d3.event.scale;\n      this.graphTranslation = d3.event.translate;\n      graphContainer.attr(\n        \"transform\",\n        \"translate(\" + this.graphTranslation + \")scale(\" + this.zoomFactor + \")\"\n      );\n      return;\n    }\n    /** animate the transition **/\n    this.zoomFactor = d3.event.scale;\n    this.graphTranslation = d3.event.translate;\n    graphContainer\n      .transition()\n      .tween(\"attr.translate\", function() {\n        return function() {\n          // need the that ptr to the object\n          that.transformAnimation = true;\n          const tr = d3.transform(graphContainer.attr(\"transform\"));\n          that.graphTranslation[0] = tr.translate[0];\n          that.graphTranslation[1] = tr.translate[1];\n          that.zoomFactor = tr.scale[0];\n        };\n      })\n      .each(\"end\", function() {\n        that.transformAnimation = false;\n      })\n      .attr(\n        \"transform\",\n        \"translate(\" + that.graphTranslation + \")scale(\" + that.zoomFactor + \")\"\n      )\n      .ease(\"linear\")\n      .duration(250);\n  };\n}\n","import * as d3 from \"d3\";\n\nexport default class NodeInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false;\n    this.hasNodeDobleClick = false;\n    this.hasNodeHover = true;\n  }\n\n  applyNodeInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Node Interactions are:\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasNodeHover) {\n        d.on(\"mouseover\", that.nodeHoverIn);\n        d.on(\"mouseout\", that.nodeHoverOut);\n      }\n    };\n\n    /** DEFINING OWN INTERNAL CLICK BEHAVIOR -- DO NOT OVERWRITE **/\n    this.clickBehaviour = function(d) {\n      if (that.hasNodeClick) {\n        d.on(\"click\", that.nodeClick);\n      }\n    };\n    this.doubleClickBehavoir = function(d) {\n      if (that.hasNodeDobleClick) {\n        d.on(\"click\", that.nodeDoubleClick);\n      }\n    };\n\n    // apply the node behavoir on the nodes;\n    const nodes = this.graphObject.nodes;\n    if (nodes.length > 0) {\n      nodes.forEach(n => {\n        if (n.groupRoot) {\n          n.groupRoot.call(this.dragBehaviour);\n          n.groupRoot.call(this.hoverBehaviour);\n          n.groupRoot.call(this.clickBehaviour);\n          n.groupRoot.call(this.doubleClickBehavoir);\n        }\n      });\n    }\n\n    // Hover\n    // Click\n    // DoubleClick\n  };\n\n  nodeHoverIn(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", \"green\");\n  }\n\n  nodeHoverOut(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", d.renderingConfig().style.bgColor);\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n    d3.event.stopPropagation(); // Prevent panning\n    d3.event.preventDefault();\n    d.layoutHandlerReference.toggleForce();\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    d3.event.sourceEvent.stopPropagation(); // Prevent panning\n    d.fixed = true;\n    d.groupRoot.style(\"cursor\", \"pointer\");\n  };\n\n  drag = d => {\n    d3.event.sourceEvent.stopPropagation(); // Prevent panning\n    d.setPosition(d3.event.x, d3.event.y);\n    d.px = d3.event.x;\n    d.py = d3.event.y;\n    d.updateRenderingPosition();\n\n    if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n      d.layoutHandlerReference.resumeForce();\n    }\n  };\n\n  dragEnd = d => {\n    if (!d.isAnchorNode) {\n      d.fixed = false;\n    }\n    d.groupRoot.style(\"cursor\", \"auto\");\n  };\n}\n","import * as d3 from \"d3\";\n\nexport default class LinkInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false; //TODO\n    this.hasNodeDobleClick = false; // TODO\n    this.hasLinkHover = true;\n    this.hasPropertyHover = true;\n  }\n\n  setHoverEnabled = val => {\n    this.hasLinkHover = val;\n    this.hasPropertyHover = val;\n  };\n  setNodeClickEnabled = val => {\n    this.hasNodeClick = val;\n  };\n  setNodeDoubleClickEnabled = val => {\n    this.hasNodeDobleClick = val;\n  };\n  setDragEnabled = val => {\n    this.hasNodeDragEnabeld = val;\n  };\n\n  applyLinkInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasLinkHover) {\n        d.on(\"mouseover\", that.linkHoverIn);\n        d.on(\"mouseout\", that.linkHoverOut);\n      }\n    };\n    this.propertyHoverBehaviour = function(d) {\n      if (that.hasPropertyHover) {\n        d.on(\"mouseover\", that.propertyHoverIn);\n        d.on(\"mouseout\", that.propertyHoverOut);\n      }\n    };\n\n    // /** DEFINING OWN INTERNAL CLICK BEHAVIOR -- DO NOT OVERWRITE **/\n    // this.clickBehaviour = function(d) {\n    //   if (that.hasNodeClick) {\n    //     d.on('click', that.nodeClick);\n    //   }\n    // };\n    // this.doubleClickBehavoir = function(d) {\n    //   if (that.hasNodeDobleClick) {\n    //     d.on('click', that.nodeDoubleClick);\n    //   }\n    // };\n\n    // apply the node behavoir on the nodes;\n    const links = this.graphObject.links;\n    if (links.length > 0) {\n      links.forEach(l => {\n        if (l.groupRoot) {\n          l.groupRoot.call(this.hoverBehaviour);\n          // try to get the parentOf shape;\n          if (l.renderingShape) {\n            const parentNode = l.renderingShape.node().parentNode;\n            if (parentNode) {\n              const shapeRoot = d3.select(parentNode);\n              if (shapeRoot) {\n                shapeRoot.call(this.propertyHoverBehaviour);\n                shapeRoot.call(this.dragBehaviour);\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // Hover\n    // Click\n    // DoubleClick\n  };\n\n  linkHoverIn(d) {\n    const shape = d.renderingLine;\n    shape.style(\"stroke\", \"red\");\n  }\n\n  linkHoverOut(d) {\n    const shape = d.renderingLine;\n    shape.style(\"stroke\", d.renderingConfig().style.link.lineColor);\n  }\n\n  propertyHoverIn = d => {\n    const shape = d.ref.renderingShape;\n    shape.style(\"fill\", \"red\");\n    // const that = this;\n    if (d.mouseEntered === true) {\n      return;\n    }\n    d.mouseEntered = true;\n    d.keepRendering = true;\n\n    if (d.unblockRendering) {\n      d.keepRendering = false;\n      d.unblockRendering = false;\n    }\n\n    // Testing internal types hovers\n    // if (d.ref.__internalType === \"multiLink\") {\n    //   const radius = 20;\n    //   const aBtn = d.groupRoot.append(\"g\");\n    //   aBtn.classed(\"MultiLinkHoverButton\", true);\n    //   // draw a button top left;\n    //   const targetPrimitive = aBtn.append(\"circle\");\n    //   targetPrimitive.attr(\"r\", radius);\n    //   targetPrimitive.attr(\"cx\", 50);\n    //   targetPrimitive.attr(\"cy\", -10);\n    //   targetPrimitive.style(\"fill\", \"#ccc\");\n    //\n    //   targetPrimitive.on(\"mouseover\", function(d) {\n    //     that.propertyHoverIn(d);\n    //     targetPrimitive.style(\"fill\", \"red\");\n    //   });\n    //   targetPrimitive.on(\"mouseout\", function(d) {\n    //     targetPrimitive.style(\"fill\", \"#444\");\n    //   });\n    //   targetPrimitive.on(\"click\", function(d) {\n    //     console.log(\"THAT BUTTON WAS CLICKED!\");\n    //     console.log(that.graphObject); // we could emit stuff;\n    //   });\n    // }\n  };\n\n  propertyHoverOut(d) {\n    const shape = d.ref.renderingShape;\n    shape.style(\"fill\", d.ref.renderingConfig().style.propertyNode.bgColor);\n    if (d.ref.__internalType === \"multiLink\") {\n      d3.selectAll(\".MultiLinkHoverButton\").remove();\n    }\n    d.mouseEntered = false;\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.fixed = true;\n      d.groupRoot.style(\"cursor\", \"pointer\");\n    }\n  };\n\n  drag = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.setPosition(d3.event.x, d3.event.y);\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      d.ref.updateRenderingPosition();\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n\n  dragEnd = d => {\n    if (this.hasNodeDragEnabeld) {\n      d.fixed = false;\n      d.groupRoot.style(\"cursor\", \"auto\");\n    }\n  };\n}\n","import GraphInteractions from \"./graphInteractions\";\nimport NodeInteractions from \"./relFinder_nodeInteractions\";\nimport LinkInteractions from \"./linkInteractions\";\n\nexport default class Interactions {\n  constructor() {\n    this.graphInteractions = null;\n    this.nodeInteractions = null;\n    this.linkInteractions = null;\n  }\n\n  applyInteractions(graph, redrawCall) {\n    /** GRAPH INTERACTION **/\n    if (!this.graphInteractions) {\n      console.warn(\n        \"NO GRAPH INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.graphInteractions = new GraphInteractions(graph);\n    }\n    this.graphInteractions.applyGraphInteractions(redrawCall);\n\n    /** NODE INTERACTION **/\n    if (!this.nodeInteractions) {\n      console.warn(\n        \"NO NODE INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.nodeInteractions = new NodeInteractions(graph);\n    }\n    this.nodeInteractions.applyNodeInteractions(redrawCall);\n\n    /** LINK INTERACTION **/\n    if (!this.linkInteractions) {\n      console.warn(\n        \"NO LINK INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.linkInteractions = new LinkInteractions(graph);\n    }\n    this.linkInteractions.applyLinkInteractions(redrawCall);\n  }\n}\n","import * as d3 from \"d3\";\n\nexport default class NodeInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false;\n    this.hasNodeDobleClick = false;\n    this.hasNodeHover = true;\n  }\n\n  setHoverEnabled = val => {\n    this.hasNodeHover = val;\n  };\n  setNodeClickEnabled = val => {\n    this.hasNodeClick = val;\n  };\n  setNodeDoubleClickEnabled = val => {\n    this.hasNodeDobleClick = val;\n  };\n  setDragEnabled = val => {\n    this.hasNodeDragEnabeld = val;\n  };\n\n  applyNodeInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Node Interactions are:\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasNodeHover) {\n        d.on(\"mouseover\", that.nodeHoverIn);\n        d.on(\"mouseout\", that.nodeHoverOut);\n      }\n    };\n\n    /** DEFINING OWN INTERNAL CLICK BEHAVIOR -- DO NOT OVERWRITE **/\n    this.clickBehaviour = function(d) {\n      if (that.hasNodeClick) {\n        d.on(\"click\", that.nodeClick);\n      }\n    };\n    this.doubleClickBehavoir = function(d) {\n      if (that.hasNodeDobleClick) {\n        d.on(\"click\", that.nodeDoubleClick);\n      }\n    };\n\n    // apply the node behavoir on the nodes;\n    const nodes = this.graphObject.nodes;\n    if (nodes.length > 0) {\n      nodes.forEach(n => {\n        if (n.groupRoot) {\n          n.groupRoot.call(this.dragBehaviour);\n          n.groupRoot.call(this.hoverBehaviour);\n          n.groupRoot.call(this.clickBehaviour);\n          n.groupRoot.call(this.doubleClickBehavoir);\n        }\n      });\n    }\n\n    // Hover\n    // Click\n    // DoubleClick\n  };\n\n  nodeHoverIn(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", \"green\");\n  }\n\n  nodeHoverOut(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", d.renderingConfig().style.bgColor);\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n    console.log(\"Node has been double clicked\");\n    d3.event.stopPropagation(); // Prevent panning\n    d3.event.preventDefault();\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n    console.log(\"Node has been single  clicked\");\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.fixed = true;\n      d.groupRoot.style(\"cursor\", \"pointer\");\n    }\n  };\n\n  drag = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.setPosition(d3.event.x, d3.event.y);\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      d.updateRenderingPosition();\n\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n\n  dragEnd = d => {\n    if (this.hasNodeDragEnabeld) {\n      d.fixed = false;\n      d.groupRoot.style(\"cursor\", \"auto\");\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n}\n","import * as d3 from \"d3\";\nimport NodePrimitive from \"./renderingElements/NodePrimitive\";\nimport LinkPrimitive from \"./renderingElements/LinkPrimitive\";\nimport DefaultRenderingHandler from \"./renderingConfigs/defaultRenderingHandler\";\nimport DrawTools from \"./DrawTools\";\nimport ForceLayout from \"./Layout/ForceLayout\";\nimport Interactions from \"./Interactions/interactions\";\nimport GraphInteractions from \"./Interactions/graphInteractions\";\nimport NodeInteractions from \"./Interactions/nodeInteractions\";\nimport LinkInteractions from \"./Interactions/linkInteractions\";\nexport default class GraphRenderer {\n  constructor() {\n    this.GRAPH_TYPE = \"ABSTRACT_RENDERING_TYPE\";\n\n    this.model = null;\n    this.layoutHandler = null;\n    this.renderingConfig = null;\n    this.interactionHandler = null;\n    this.drawTools = null;\n\n    this.nodes = [];\n    this.links = [];\n\n    this.nodeMap = {};\n    this.linkMap = {};\n\n    this.divRoot = null;\n    this.svgRoot = null;\n    this.graphRoot = null;\n\n    // this can be overwritten (but it gives a proper ordering of the layers)\n    this.layerObject = [\"arrows\", \"links\", \"properties\", \"nodes\"];\n\n    this.graphBgColor = \"#ECF0F1\";\n  }\n\n  /** Exposed functions >> DO NOT OVERWRITE **/\n  setGraphBackgroundColor = val => {\n    this.graphBgColor = val;\n  };\n\n  setRenderingContainer = divId => {\n    this.divRoot = divId;\n  };\n\n  setDrawTools = tools => {\n    this.drawTools = tools;\n  };\n\n  setModel = model => {\n    this.model = model;\n  };\n\n  setRenderingConfig = config => {\n    this.renderingConfig = config;\n  };\n\n  getRenderingHandler = () => {\n    return this.renderingConfig;\n  };\n\n  setInteractionHandler = handler => {\n    this.interactionHandler = handler;\n  };\n\n  configureGraphInteractions = state => {\n    // get the required configFlags;\n\n    const zoom = state.graph_mouseZoom;\n    const drag = state.graph_mouseDrag;\n\n    if (!this.interactionHandler) {\n      this.interactionHandler = new Interactions();\n    }\n    if (!this.interactionHandler.graphInteractions) {\n      this.interactionHandler.graphInteractions = new GraphInteractions(this);\n    }\n\n    this.interactionHandler.graphInteractions.enableMouseZoom(zoom);\n    this.interactionHandler.graphInteractions.enableMouseDrag(drag);\n\n    // node link interactions ;;;\n\n    const nodeDrag = state.node_mouseDrag;\n    const nodeHover = state.node_mouseHover;\n    const nodeClick = state.node_mouseSingleClick;\n    const nodeDoubleClick = state.node_mouseDoubleClick;\n\n    if (!this.interactionHandler.nodeInteractions) {\n      this.interactionHandler.nodeInteractions = new NodeInteractions(this);\n    }\n\n    this.interactionHandler.graphInteractions.enableMouseZoom(zoom);\n    this.interactionHandler.graphInteractions.enableMouseDrag(drag);\n\n    this.interactionHandler.nodeInteractions.setNodeClickEnabled(nodeClick);\n    this.interactionHandler.nodeInteractions.setNodeDoubleClickEnabled(\n      nodeDoubleClick\n    );\n    this.interactionHandler.nodeInteractions.setHoverEnabled(nodeHover);\n    this.interactionHandler.nodeInteractions.setDragEnabled(nodeDrag);\n\n    // link interactions\n    if (!this.interactionHandler.linkInteractions) {\n      this.interactionHandler.linkInteractions = new LinkInteractions(this);\n    }\n\n    const linkDrag = state.link_mouseDrag;\n    const linkHover = state.link_mouseHover;\n\n    this.interactionHandler.linkInteractions.setHoverEnabled(linkHover);\n    this.interactionHandler.linkInteractions.setDragEnabled(linkDrag);\n\n    this.setGraphBackgroundColor(state.graphBgColor);\n  };\n\n  createRenderingElements() {\n    if (!this.model) {\n      console.error(\"NO MODEL SET ! \");\n    }\n    if (!this.renderingConfig) {\n      // create a default renderingConfigHandler;\n      console.warn(\n        \"NO RENDERING CONFIG HANDLER SET ! WILL CREATE A DEFAULT ONE FOR YOU!\"\n      );\n      this.renderingConfig = new DefaultRenderingHandler();\n    }\n    if (!this.drawTools) {\n      // create a default renderingConfigHandler;\n      console.warn(\n        \"NO DRAWTOOLS  HANDLER SET ! WILL CREATE A DEFAULT ONE FOR YOU!\"\n      );\n      this.drawTools = new DrawTools(this);\n    }\n\n    if (!this.layoutHandler) {\n      // create a default renderingConfigHandler;\n      console.warn(\n        \"NO LAYOUT  HANDLER SET ! WILL CREATE A DEFAULT ONE FOR YOU! << FORCE DIRECTED LAYOUT>>>\"\n      );\n      this.layoutHandler = new ForceLayout(this);\n    }\n  }\n\n  resetUserNavigation = () => {\n    console.log(\"Wannt to reset the user navigation ???  TRUE\");\n    // what is the zoom and translation factor?\n    if (this.interactionHandler) {\n      if (this.interactionHandler.graphInteractions) {\n        this.interactionHandler.graphInteractions.resetUserLayout();\n      }\n    }\n  };\n\n  initializeRenderingContainer = () => {\n    if (!this.divRoot) {\n      console.error(\"No div found for the graph \");\n      return;\n    }\n    // clear rendering containers;\n    this._clearRenderingContainers();\n    // create the renderingContainers\n    this._createRenderingContainers();\n  };\n\n  _clearRenderingContainers = () => {\n    if (this.graphRoot) {\n      this.graphRoot.selectAll(\"defs\").remove();\n      this.graphRoot.selectAll(\"g\").remove();\n      this.graphRoot.remove();\n    }\n    if (this.svgRoot) {\n      this.svgRoot.remove();\n    }\n\n    if (d3.select(\"#\" + this.divRoot + \"_svgRoot\")) {\n      // we have on from some other initialization.. remove that\n      d3.select(\"#\" + this.divRoot + \"_svgRoot\").remove();\n    }\n  };\n\n  _updateSVG_Size = () => {\n    if (this.svgRoot) {\n      // TODO\n      const divNode = d3.select(\"#\" + this.divRoot);\n      const divBoundingBox = divNode.node().getBoundingClientRect();\n      this.svgRoot.style(\"width\", divBoundingBox.width + \"px\");\n      this.svgRoot.style(\"height\", divBoundingBox.height + \"px\");\n    }\n  };\n\n  _createRenderingContainers = () => {\n    const divNode = d3.select(\"#\" + this.divRoot);\n    this.svgRoot = divNode.append(\"svg\");\n    this.svgRoot.node().id = this.divRoot + \"_svgRoot\";\n    this.svgRoot.style(\"background\", this.graphBgColor);\n\n    // adjust svgSize to the container size;\n    this._checkForPaddingInDivNode();\n    const divBoundingBox = divNode.node().getBoundingClientRect();\n    this.svgRoot.style(\"width\", divBoundingBox.width + \"px\");\n    this.svgRoot.style(\"height\", divBoundingBox.height + \"px\");\n\n    // createGraphGroup; // why you ask? so we can compute the bounding size of it later (zoom to graph Extent functions)\n\n    this.graphRoot = this.svgRoot.append(\"g\");\n    this.graphRoot.style(\"overflow\", \"hidden\");\n\n    this._createLayers();\n    // add Layers\n  };\n\n  _createLayers = () => {\n    const root = this.graphRoot;\n    const layerNamePrefix = this.divRoot;\n    this.layerObject.forEach(function(layer) {\n      if (layer === \"arrows\") {\n        const markerContainer = root.append(\"defs\");\n        markerContainer.node().id = layerNamePrefix + \"_\" + layer;\n      } else {\n        const renderingLayer = root.append(\"g\");\n        renderingLayer.node().id = layerNamePrefix + \"_\" + layer;\n      }\n    });\n  };\n\n  _checkForPaddingInDivNode = () => {\n    const divNode = d3.select(\"#\" + this.divRoot);\n    if (\n      divNode.style(\"padding-left\") ||\n      divNode.style(\"padding-right\") ||\n      divNode.style(\"padding-top\") ||\n      divNode.style(\"padding-bottom\")\n    ) {\n      let noError = 0;\n      if (\n        divNode.style(\"padding-left\") &&\n        (divNode.style(\"padding-left\") === \"0\" ||\n          divNode.style(\"padding-left\") === \"0px\")\n      ) {\n        noError++;\n      }\n      if (\n        divNode.style(\"padding-right\") &&\n        (divNode.style(\"padding-right\") === \"0\" ||\n          divNode.style(\"padding-right\") === \"0px\")\n      ) {\n        noError++;\n      }\n\n      if (\n        divNode.style(\"padding-top\") &&\n        (divNode.style(\"padding-top\") === \"0\" ||\n          divNode.style(\"padding-top\") === \"0px\")\n      ) {\n        noError++;\n      }\n      if (\n        divNode.style(\"padding-bottom\") &&\n        (divNode.style(\"padding-bottom\") === \"0\" ||\n          divNode.style(\"padding-bottom\") === \"0px\")\n      ) {\n        noError++;\n      }\n      if (noError !== 4) {\n        console.error(\n          \"DO NOT PUT PADDING INTO THE RENDERING DIV! \\n Will nevertheless try to render it \"\n        );\n      }\n    }\n  };\n\n  // SOME RENDERING STUFF\n  createNodePrimitive = node => {\n    const nodePrimitive = new NodePrimitive();\n    nodePrimitive.id(node.__nodeLinkIdentifier);\n    nodePrimitive.displayName(node.__displayName);\n    nodePrimitive.renderingConfig(\n      this.renderingConfig.getNodeConfigFromType(node.__nodeType)\n    );\n    nodePrimitive.refereceResource = node;\n    nodePrimitive.drawTools(this.drawTools);\n\n    this.nodes.push(nodePrimitive);\n    this.nodeMap[nodePrimitive.id()] = nodePrimitive;\n  };\n\n  createLinkPrimitive = link => {\n    const linkPrimitive = new LinkPrimitive();\n    linkPrimitive.id(link.__nodeLinkIdentifier);\n    linkPrimitive.displayName(link.__displayName);\n\n    if (link.__linkType !== \"axiomLink\") {\n      linkPrimitive.renderingConfig(\n        this.renderingConfig.getLinkConfigFromType(link.__linkType)\n      );\n    } else {\n      linkPrimitive.renderingConfig(\n        this.renderingConfig.getLinkConfigFromType(link.__linkAxiom)\n      );\n    }\n    // console.log(linkPrimitive.displayName(), linkPrimitive.renderingConfig());\n    linkPrimitive.drawTools(this.drawTools);\n\n    // fetch the source and target from the map;\n    linkPrimitive.setSourceNode(\n      this.nodeMap[link.__source.__nodeLinkIdentifier]\n    );\n    linkPrimitive.setTargetNode(\n      this.nodeMap[link.__target.__nodeLinkIdentifier]\n    );\n\n    if (\n      this.nodeMap[link.__source.__nodeLinkIdentifier] ===\n      this.nodeMap[link.__target.__nodeLinkIdentifier]\n    ) {\n      linkPrimitive.setInternalType(\"loop\");\n      const item = this.nodeMap[link.__source.__nodeLinkIdentifier];\n      item.numberOfLoops(item.numberOfLoops() + 1);\n    }\n    this.links.push(linkPrimitive);\n    this.linkMap[linkPrimitive.id()] = linkPrimitive;\n  };\n\n  updateMultiLinkTypes = link => {\n    if (link.__internalType === \"loop\") {\n      return;\n    }\n    const src = link.sourceNode;\n    const tar = link.targetNode;\n\n    // this is a pair;\n    // lets see if we have multi link;\n    let isMultiLink = false;\n    src.outgoingLinks.forEach(out => {\n      if (out.__internalType === \"loop\" || out.id() === link.id()) {\n        return;\n      }\n      if (out.targetNode.id() === tar.id()) {\n        isMultiLink = true;\n      }\n    });\n\n    tar.outgoingLinks.forEach(out => {\n      if (out.__internalType === \"loop\" || out.id() === link.id()) {\n        return;\n      }\n      if (out.targetNode.id() === src.id()) {\n        isMultiLink = true;\n      }\n    });\n    if (isMultiLink) {\n      link.setInternalType(\"multiLink\");\n    }\n\n    // kill multiLink if we have no label to draw!;\n    if (link.renderingConfig().options.drawPropertyNode === false) {\n      link.setInternalType(\"singleLink\");\n    }\n  };\n\n  redrawRenderingPrimitives = () => {\n    this._drawRenderingPrimitivesForNodes();\n    this._drawRenderingPrimitivesForLinks();\n\n    // // applyInteractions\n    // if (this.interactionHandler) {\n    //   this.interactionHandler.applyInteractions(this, true);\n    // } else {\n    //   console.log(\"No Interaction Handler set, the graph will be static!\");\n    // }\n    //\n    // if (this.layoutHandler) {\n    //   this.layoutHandler.initializeLayoutEngine();\n    //   this.layoutHandler.resumeForce();\n    // } else {\n    //   console.log(\"No Layout Handler set, the graph will be static!\");\n    // }\n  };\n\n  drawRenderingPrimitives = () => {\n    // for each renderingNode, we need something that calls its draw function;\n\n    this._drawRenderingPrimitivesForNodes();\n    this._drawRenderingPrimitivesForLinks();\n\n    // applyInteractions\n    if (this.interactionHandler) {\n      this.interactionHandler.applyInteractions(this);\n    } else {\n      console.log(\"No Interaction Handler set, the graph will be static!\");\n    }\n\n    if (this.layoutHandler) {\n      this.layoutHandler.initializeLayoutEngine();\n      this.layoutHandler.resumeForce();\n    } else {\n      console.log(\"No Layout Handler set, the graph will be static!\");\n    }\n  };\n\n  _drawRenderingPrimitivesForLinks = () => {\n    const linkContainer = d3.select(\"#\" + this.divRoot + \"_links\");\n    const propertyContainer = d3.select(\"#\" + this.divRoot + \"_properties\");\n    const arrowContainer = d3.select(\"#\" + this.divRoot + \"_arrows\");\n\n    this.renderedLinks = this.createRenderingPrimitives(\n      linkContainer,\n      this.links,\n      \"LinkItem\"\n    );\n\n    // execute the rendering function of the nodes;\n    this.renderedLinks.each(function(item) {\n      if (item.visible()) {\n        item.render(d3.select(this), propertyContainer, arrowContainer);\n      } else {\n        d3.select(this).remove();\n      }\n    });\n  };\n\n  _drawRenderingPrimitivesForNodes = () => {\n    const nodeContainer = d3.select(\"#\" + this.divRoot + \"_nodes\");\n    this.renderedNodes = this.createRenderingPrimitives(\n      nodeContainer,\n      this.nodes,\n      \"NodeItem\"\n    );\n\n    // execute the rendering function of the nodes;\n    this.renderedNodes.each(function(item) {\n      if (item.visible()) {\n        item.render(d3.select(this));\n      } else {\n        d3.select(this).remove();\n      }\n    });\n  };\n\n  createRenderingPrimitives(container, data, typeClass) {\n    return container\n      .selectAll(\".\" + typeClass)\n      .data(data)\n      .enter()\n      .append(\"g\")\n      .classed(typeClass, true)\n      .attr(\"id\", function(d) {\n        return d.id();\n      });\n  }\n}\n","import GraphRenderer from \"./graph\";\nimport Interactions from \"./Interactions/interactions\";\nexport default class VOWLRenderer extends GraphRenderer {\n  constructor() {\n    super();\n    this.GRAPH_TYPE = \"VOWL_RENDERING_TYPE\";\n\n    this.layoutHandler = null;\n    this.renderingConfig = null;\n    this.interactionHandler = new Interactions();\n  }\n\n  /** Exposed functions >> DO NOT OVERWRITE **/\n\n  createRenderingElements() {\n    super.createRenderingElements();\n\n    this.model.nodes.forEach(node => {\n      this.createNodePrimitive(node);\n    });\n\n    // set the position of the test nodes;\n\n    this.nodes[0].setPosition(60, 150);\n    this.nodes[1].setPosition(300, 150);\n\n    this.model.links.forEach(link => {\n      this.createLinkPrimitive(link);\n    });\n\n    let i = 0;\n    this.links.forEach(link => {\n      this.updateMultiLinkTypes(link);\n      link.setPosition(200, i * 50);\n      i++;\n    });\n\n    // TODO SAME FOR LINKS!;\n  }\n}\n","import * as d3 from \"d3\";\n\nexport default class GraphInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.zoom = undefined;\n    this.graphTranslation = [0, 0];\n    this.zoomFactor = 1.0;\n    this.transformAnimation = false;\n\n    this.zoomEnabled = true;\n    this.dragEnabled = true;\n  }\n\n  enableMouseZoom = val => {\n    this.zoomEnabled = val;\n  };\n  enableMouseDrag = val => {\n    this.dragEnabled = val;\n  };\n\n  applyGraphInteractions = redrawCall => {\n    if (redrawCall) {\n      console.log(\"THIS IS THE REDRAW CALL\", \"for graph interactions\");\n      return;\n    }\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n    // graph interactions are zoom and drag operations\n    const that = this;\n\n    // Apply the zooming factor.\n    this.zoom = d3.behavior\n      .zoom()\n      .duration(150)\n      .scaleExtent([0.02, 5])\n      .on(\"zoom\", this.zoomed)\n      .on(\"zoomstart\", function() {\n        if (\n          d3.event.sourceEvent &&\n          d3.event.sourceEvent.buttons &&\n          d3.event.sourceEvent.buttons === 1\n        ) {\n          that.graphObject.svgRoot.style(\"cursor\", \"all-scroll\");\n        }\n      })\n      .on(\"zoomend\", function() {\n        that.graphObject.svgRoot.style(\"cursor\", \"auto\");\n      });\n\n    this.graphObject.svgRoot.call(this.zoom);\n    this.zoom = this.zoom.scaleExtent([0.02, 5]);\n    if (this.graphObject.graphRoot) {\n      this.zoom.event(this.graphObject.graphRoot);\n    }\n  };\n\n  resetUserLayout = () => {\n    console.log(\"Want to reset layout to prev zoom and translation\");\n    console.log(this.zoomFactor);\n    console.log(this.graphTranslation);\n    const graph = this.graphObject;\n    const graphContainer = graph.graphRoot;\n    graphContainer.attr(\n      \"transform\",\n      \"translate(\" + this.graphTranslation + \")scale(\" + this.zoomFactor + \")\"\n    );\n  };\n\n  zoomed = () => {\n    //   // TODO >>><<<<<<<<<<<\n    //   // console.log(\"<<<<>>>><<<>>>\");\n    //   // console.log(d3.event);\n    //\n    //   const that = this;\n    //   const graph = this.graphObject;\n    //   const graphContainer = graph.graphRoot;\n    //   let zoomEventByMWheel = false;\n    //   if (d3.event.sourceEvent) {\n    //     if (d3.event.sourceEvent.deltaY) {\n    //       zoomEventByMWheel = true;\n    //     }\n    //   } else {\n    //     // // TODO >>><<<<<<<<<<<\n    //     // console.log(\"Zoomed by double click oO \");\n    //     // this.zoomFactor = d3.event.scale;\n    //     // this.graphTranslation = d3.event.translate;\n    //     // console.log(this.zoomFactor, this.graphTranslation);\n    //   }\n    //   if (zoomEventByMWheel === false) {\n    //     if (this.transformAnimation === true) {\n    //       return;\n    //     }\n    //     if (this.zoomEnabled) {\n    //       this.zoomFactor = d3.event.scale;\n    //     }\n    //     if (this.dragEnabled) {\n    //       this.graphTranslation = d3.event.translate;\n    //       graphContainer.attr(\n    //         \"transform\",\n    //         \"translate(\" +\n    //           this.graphTranslation +\n    //           \")scale(\" +\n    //           this.zoomFactor +\n    //           \")\"\n    //       );\n    //     }\n    //     return;\n    //   }\n    //\n    //   if (this.zoomEnabled) {\n    //     this.zoomFactor = d3.event.scale;\n    //   }\n    //   if (this.dragEnabled && d3.event.sourceEvent === \"mousemove\") {\n    //     this.graphTranslation = d3.event.translate;\n    //   }\n    //\n    //   console.log(\"THis one is called at the end;\");\n    //   graphContainer\n    //     .transition()\n    //     .tween(\"attr.translate\", function() {\n    //       return function() {\n    //         // need the that ptr to the object\n    //         that.transformAnimation = true;\n    //         const tr = d3.transform(graphContainer.attr(\"transform\"));\n    //         that.graphTranslation[0] = tr.translate[0];\n    //         that.graphTranslation[1] = tr.translate[1];\n    //         that.zoomFactor = tr.scale[0];\n    //       };\n    //     })\n    //     .each(\"end\", function() {\n    //       that.transformAnimation = false;\n    //     })\n    //     .attr(\n    //       \"transform\",\n    //       \"translate(\" + that.graphTranslation + \")scale(\" + that.zoomFactor + \")\"\n    //     )\n    //     .ease(\"linear\")\n    //     .duration(250);\n    // };\n\n    if (d3.event.sourceEvent) {\n      d3.event.sourceEvent.preventDefault();\n      d3.event.sourceEvent.stopPropagation();\n    }\n\n    const that = this;\n    const graph = this.graphObject;\n    const graphContainer = graph.graphRoot;\n    let zoomEventByMWheel = false;\n    if (d3.event.sourceEvent) {\n      if (d3.event.sourceEvent.deltaY) {\n        zoomEventByMWheel = true;\n      }\n    }\n    if (zoomEventByMWheel === false) {\n      if (this.transformAnimation === true) {\n        return;\n      }\n      // this.zoomFactor = d3.event.scale;\n      // this.graphTranslation = d3.event.translate;\n      // <<TODO>> SET PARAMETERS FOR ENABLING ZOOM AND PANNIG\n      this.zoomFactor = d3.event.scale;\n      this.graphTranslation = d3.event.translate;\n      graphContainer.attr(\n        \"transform\",\n        \"translate(\" + this.graphTranslation + \")scale(\" + this.zoomFactor + \")\"\n      );\n      return;\n    }\n    /** animate the transition **/\n    this.zoomFactor = d3.event.scale;\n    this.graphTranslation = d3.event.translate;\n    graphContainer\n      .transition()\n      .tween(\"attr.translate\", function() {\n        return function() {\n          // need the that ptr to the object\n          that.transformAnimation = true;\n          const tr = d3.transform(graphContainer.attr(\"transform\"));\n          that.graphTranslation[0] = tr.translate[0];\n          that.graphTranslation[1] = tr.translate[1];\n          that.zoomFactor = tr.scale[0];\n        };\n      })\n      .each(\"end\", function() {\n        that.transformAnimation = false;\n      })\n      .attr(\n        \"transform\",\n        \"translate(\" + that.graphTranslation + \")scale(\" + that.zoomFactor + \")\"\n      )\n      .ease(\"linear\")\n      .duration(250);\n  };\n}\n","import * as d3 from \"d3\";\nimport \"./nodeLoaderAnimation.css\";\nexport default class NodeInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false;\n    this.hasNodeDobleClick = false;\n    this.hasNodeHover = true;\n    console.log(\"CREATING ORKG NODE INTERACTIONS\");\n  }\n\n  setHoverEnabled = val => {\n    this.hasNodeHover = val;\n  };\n  setNodeClickEnabled = val => {\n    this.hasNodeClick = val;\n  };\n  setNodeDoubleClickEnabled = val => {\n    this.hasNodeDobleClick = val;\n  };\n  setDragEnabled = val => {\n    this.hasNodeDragEnabeld = val;\n  };\n\n  applyNodeInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Node Interactions are:\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasNodeHover) {\n        d.on(\"mouseover\", that.nodeHoverIn);\n        d.on(\"mouseout\", that.nodeHoverOut);\n      }\n    };\n\n    /** DEFINING OWN INTERNAL CLICK BEHAVIOR -- DO NOT OVERWRITE **/\n    this.clickBehaviour = function(d) {\n      if (that.hasNodeClick) {\n        d.on(\"click\", that.nodeClick);\n      }\n    };\n    this.doubleClickBehavoir = function(d) {\n      if (that.hasNodeDobleClick) {\n        d.on(\"click\", that.nodeDoubleClick);\n      }\n    };\n\n    // apply the node behavoir on the nodes;\n    const nodes = this.graphObject.nodes;\n    if (nodes.length > 0) {\n      nodes.forEach(n => {\n        if (n.groupRoot) {\n          n.groupRoot.call(this.dragBehaviour);\n          n.groupRoot.call(this.hoverBehaviour);\n          n.groupRoot.call(this.clickBehaviour);\n          n.groupRoot.call(this.doubleClickBehavoir);\n\n          this.addCollapseExpandButton(n);\n        }\n      });\n    }\n\n    // Hover\n    // Click\n    // DoubleClick\n  };\n\n  collapseButton_mouseHoverIn = node => {\n    node.singleCirc.classed(\"collapseExpandButtonHovered\", true);\n  };\n  collapseButton_mouseHoverOut = node => {\n    node.singleCirc.classed(\"collapseExpandButtonHovered\", false);\n  };\n\n  addCollapseExpandButton = d => {\n    //  console.log(d);\n    const that = this;\n    if (d.collapseExapandGroup) {\n      d.collapseExapandGroup.remove();\n    }\n    // create the hover thing;\n    const offsetX = Math.sqrt(50 * 25);\n\n    d.collapseExapandGroup = d.groupRoot.append(\"g\");\n    d.singleCirc = d.collapseExapandGroup.append(\"circle\");\n    const radius = 15;\n    d.singleCirc.attr(\"r\", radius);\n    d.singleCirc.attr(\"cx\", offsetX);\n    d.singleCirc.attr(\"cy\", -offsetX);\n    d.singleCirc.classed(\"collapseExpandButton\", true);\n\n    d.collapseExapandGroup.on(\"mouseover\", () => {\n      that.collapseButton_mouseHoverIn(d);\n    });\n    d.collapseExapandGroup.on(\"mouseout\", () => {\n      that.collapseButton_mouseHoverOut(d);\n    });\n\n    // console.log(d);\n    //  console.log(d.status);\n    // console.log(\"Reference Type\", d.refereceResource.__nodeType);\n\n    if (!d.status && d.refereceResource.__nodeType.indexOf(\"Resource\") !== -1) {\n      d.status = \"unknown\";\n    }\n    // console.log(\"NODE STATUS\", d.status);\n\n    switch (d.status) {\n      case \"unknown\":\n        d.collapseExapandGroup.append(\"title\").text(\"explore element\");\n        // create icon for that;\n        const icon = d.collapseExapandGroup.append(\"path\");\n        icon.attr(\"id\", \"searchIcon\");\n        icon.style(\"fill\", \"#000\");\n        icon.style(\"stroke-width\", \"0\");\n        icon.attr(\n          \"d\",\n          \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n        );\n        icon.attr(\"transform\", \"translate(24,-48)\");\n\n        d.collapseExapandGroup.on(\"click\", function(e) {\n          console.log(\"WANT TO GET MORE DATA FOR NODE (EXPLORE) !\");\n          console.log(e);\n          that.graphObject.exploreSingleNode(e);\n          console.log(\"Want to collapse a node \");\n        });\n\n        break;\n      case \"collapsed\":\n        d.collapseExapandGroup.append(\"title\").text(\"expand node\");\n        d.collapseExapandGroup\n          .append(\"polygon\")\n          .attr(\"points\", \"15.5,5 11,5 16,12 11,19 15.5,19 20.5,12 \")\n          .attr(\"transform\", \"translate(25,-48)\");\n        d.collapseExapandGroup\n          .append(\"polygon\")\n          .attr(\"points\", \"8.5,5 4,5 9,12 4,19 8.5,19 13.5,12 \")\n          .attr(\"transform\", \"translate(25,-48)\");\n\n        d.collapseExapandGroup.on(\"click\", function(e) {\n          // that.graph.singleNodeExpansion(that);\n          console.log(e);\n          console.log(\"Want to collapse a node \");\n        });\n        break;\n      case \"expanded\":\n        d.collapseExapandGroup.append(\"title\").text(\"collapse node\");\n\n        d.collapseExapandGroup\n          .append(\"polygon\")\n          .attr(\"points\", \"15.5,5 11,5 16,12 11,19 15.5,19 20.5,12 \")\n          .attr(\"transform\", \"translate(47,-48), scale(-1,1)\");\n        d.collapseExapandGroup\n          .append(\"polygon\")\n          .attr(\"points\", \"8.5,5 4,5 9,12 4,19 8.5,19 13.5,12 \")\n          .attr(\"transform\", \"translate(47,-48), scale(-1,1)\");\n\n        d.collapseExapandGroup.on(\"click\", function() {\n          console.log(\"want to expand a node \");\n        });\n        break;\n      default:\n        console.log(\"leaf node should not have hovers\");\n        d.collapseExapandGroup.classed(\"hidden\", true);\n    }\n  };\n\n  nodeHoverIn(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", \"red\");\n  }\n\n  nodeHoverOut(d) {\n    const shape = d.renderingShape;\n    shape.style(\"fill\", d.renderingConfig().style.bgColor);\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n    //  console.log(\"Node has been double clicked\");\n    d3.event.stopPropagation(); // Prevent panning\n    d3.event.preventDefault();\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n    //  console.log(\"Node has been single  clicked\");\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.fixed = true;\n      d.groupRoot.style(\"cursor\", \"pointer\");\n    }\n  };\n\n  drag = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.setPosition(d3.event.x, d3.event.y);\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      d.updateRenderingPosition();\n\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n\n  dragEnd = d => {\n    if (this.hasNodeDragEnabeld) {\n      d.fixed = false;\n      d.groupRoot.style(\"cursor\", \"auto\");\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n}\n","import * as d3 from \"d3\";\n\nexport default class LinkInteractions {\n  constructor(graph) {\n    this.graphObject = graph;\n    this.dragBehaviour = null;\n    this.hasNodeClick = false; //TODO\n    this.hasNodeDobleClick = false; // TODO\n    this.hasLinkHover = true;\n    this.hasPropertyHover = true;\n  }\n\n  setHoverEnabled = val => {\n    this.hasLinkHover = val;\n    this.hasPropertyHover = val;\n  };\n  setNodeClickEnabled = val => {\n    this.hasNodeClick = val;\n  };\n  setNodeDoubleClickEnabled = val => {\n    this.hasNodeDobleClick = val;\n  };\n  setDragEnabled = val => {\n    this.hasNodeDragEnabeld = val;\n  };\n\n  applyLinkInteractions = () => {\n    if (!this.graphObject) {\n      console.error(\"NO GRAPH OBJECT FOUND\");\n      return;\n    }\n\n    // Drag,\n    this.dragBehaviour = d3.behavior\n      .drag()\n      .origin(function(d) {\n        return d;\n      })\n      .on(\"dragstart\", this.dragStart)\n      .on(\"drag\", this.drag)\n      .on(\"dragend\", this.dragEnd);\n\n    /** DEFINING OWN INTERNAL HOVER BEHAVIOR -- DO NOT OVERWRITE **/\n    const that = this;\n    this.hoverBehaviour = function(d) {\n      if (that.hasLinkHover) {\n        d.on(\"mouseover\", that.linkHoverIn);\n        d.on(\"mouseout\", that.linkHoverOut);\n      }\n    };\n    this.propertyHoverBehaviour = function(d) {\n      if (that.hasPropertyHover) {\n        d.on(\"mouseover\", that.propertyHoverIn);\n        d.on(\"mouseout\", that.propertyHoverOut);\n      }\n    };\n\n    // /** DEFINING OWN INTERNAL CLICK BEHAVIOR -- DO NOT OVERWRITE **/\n    // this.clickBehaviour = function(d) {\n    //   if (that.hasNodeClick) {\n    //     d.on('click', that.nodeClick);\n    //   }\n    // };\n    // this.doubleClickBehavoir = function(d) {\n    //   if (that.hasNodeDobleClick) {\n    //     d.on('click', that.nodeDoubleClick);\n    //   }\n    // };\n\n    // apply the node behavoir on the nodes;\n    const links = this.graphObject.links;\n    if (links.length > 0) {\n      links.forEach(l => {\n        if (l.groupRoot) {\n          l.groupRoot.call(this.hoverBehaviour);\n          // try to get the parentOf shape;\n          if (l.renderingShape) {\n            const parentNode = l.renderingShape.node().parentNode;\n            if (parentNode) {\n              const shapeRoot = d3.select(parentNode);\n              if (shapeRoot) {\n                shapeRoot.call(this.propertyHoverBehaviour);\n                shapeRoot.call(this.dragBehaviour);\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // Hover\n    // Click\n    // DoubleClick\n  };\n\n  linkHoverIn(d) {\n    const shape = d.renderingLine;\n    shape.style(\"stroke\", \"red\");\n  }\n\n  linkHoverOut(d) {\n    const shape = d.renderingLine;\n    shape.style(\"stroke\", d.renderingConfig().style.link.lineColor);\n  }\n\n  propertyHoverIn = d => {\n    const shape = d.ref.renderingShape;\n    shape.style(\"fill\", \"red\");\n    // const that = this;\n    if (d.mouseEntered === true) {\n      return;\n    }\n    d.mouseEntered = true;\n    d.keepRendering = true;\n\n    if (d.unblockRendering) {\n      d.keepRendering = false;\n      d.unblockRendering = false;\n    }\n\n    // Testing internal types hovers\n    // if (d.ref.__internalType === \"multiLink\") {\n    //   const radius = 20;\n    //   const aBtn = d.groupRoot.append(\"g\");\n    //   aBtn.classed(\"MultiLinkHoverButton\", true);\n    //   // draw a button top left;\n    //   const targetPrimitive = aBtn.append(\"circle\");\n    //   targetPrimitive.attr(\"r\", radius);\n    //   targetPrimitive.attr(\"cx\", 50);\n    //   targetPrimitive.attr(\"cy\", -10);\n    //   targetPrimitive.style(\"fill\", \"#ccc\");\n    //\n    //   targetPrimitive.on(\"mouseover\", function(d) {\n    //     that.propertyHoverIn(d);\n    //     targetPrimitive.style(\"fill\", \"red\");\n    //   });\n    //   targetPrimitive.on(\"mouseout\", function(d) {\n    //     targetPrimitive.style(\"fill\", \"#444\");\n    //   });\n    //   targetPrimitive.on(\"click\", function(d) {\n    //     console.log(\"THAT BUTTON WAS CLICKED!\");\n    //     console.log(that.graphObject); // we could emit stuff;\n    //   });\n    // }\n  };\n\n  propertyHoverOut(d) {\n    const shape = d.ref.renderingShape;\n    shape.style(\"fill\", d.ref.renderingConfig().style.propertyNode.bgColor);\n    if (d.ref.__internalType === \"multiLink\") {\n      d3.selectAll(\".MultiLinkHoverButton\").remove();\n    }\n    d.mouseEntered = false;\n  }\n\n  nodeDoubleClick(d) {\n    // add Handlers\n  }\n  nodeClick(d) {\n    // add handers; >> this is where we want to overwrite something;\n  }\n\n  // split the dragger functions for better reuse;\n  dragStart = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.fixed = true;\n      d.groupRoot.style(\"cursor\", \"pointer\");\n    }\n  };\n\n  drag = d => {\n    if (this.hasNodeDragEnabeld) {\n      d3.event.sourceEvent.stopPropagation(); // Prevent panning\n      d.setPosition(d3.event.x, d3.event.y);\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      d.ref.updateRenderingPosition();\n      if (d.layoutHandlerReference && d.layoutHandlerReference.force) {\n        d.layoutHandlerReference.resumeForce();\n      }\n    }\n  };\n\n  dragEnd = d => {\n    if (this.hasNodeDragEnabeld) {\n      d.fixed = false;\n      d.groupRoot.style(\"cursor\", \"auto\");\n    }\n  };\n}\n","import GraphInteractions from \"./graphInteractions\";\nimport NodeInteractions from \"./nodeInteractions\";\nimport LinkInteractions from \"./linkInteractions\";\n\nexport default class Interactions {\n  constructor() {\n    console.log(\"CREATING ORKG INTERACTIONS !>>>>>>>>>>>>> \");\n    this.graphInteractions = null;\n    this.nodeInteractions = null;\n    this.linkInteractions = null;\n  }\n\n  initializeInteractions(graph) {\n    this.graphInteractions = new GraphInteractions(graph);\n    this.nodeInteractions = new NodeInteractions(graph);\n    this.linkInteractions = new LinkInteractions(graph);\n  }\n\n  applyInteractions(graph, redrawCall) {\n    /** GRAPH INTERACTION **/\n    if (!this.graphInteractions) {\n      console.warn(\n        \"NO GRAPH INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.graphInteractions = new GraphInteractions(graph);\n    }\n    this.graphInteractions.applyGraphInteractions(redrawCall);\n\n    /** NODE INTERACTION **/\n    if (!this.nodeInteractions) {\n      console.warn(\n        \"NO NODE INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.nodeInteractions = new NodeInteractions(graph);\n    }\n    this.nodeInteractions.applyNodeInteractions(redrawCall);\n\n    /** LINK INTERACTION **/\n    if (!this.linkInteractions) {\n      console.warn(\n        \"NO LINK INTERACTIONS DEFINED!  << Creating default ones >> \"\n      );\n      this.linkInteractions = new LinkInteractions(graph);\n    }\n    this.linkInteractions.applyLinkInteractions(redrawCall);\n  }\n}\n","import GraphRenderer from \"./graph\";\nimport Interactions from \"./Interactions/ORKG_Interactions/interactions\";\nimport \"./Interactions/ORKG_Interactions/nodeLoaderAnimation.css\";\nimport OrkgDataLoader from \"../../DataAccessComponent/OrkgDataLoader\";\nimport ORKGParser from \"../../Parsers/ORKGParser\";\nimport BaseVertexEdgeMapper from \"../../Mappers/BaseVertexEdgeMapper\";\nimport BaseNodeLinkMapper from \"../../Mappers/BaseNodeLinkMapper\";\nexport default class VOWLRenderer extends GraphRenderer {\n  constructor() {\n    super();\n    this.GRAPH_TYPE = \"ORKG_RENDERING_TYPE\";\n\n    this.layoutHandler = null;\n    this.renderingConfig = null;\n    this.interactionHandler = new Interactions();\n    this.interactionHandler.initializeInteractions(this);\n\n    this.orkgDataLoader = new OrkgDataLoader();\n  }\n\n  /** Exposed functions >> DO NOT OVERWRITE **/\n  setExploreAnimation(node, val) {\n    if (val === true) {\n      const renderingGroup = node.groupRoot;\n      node.renderingAnimationGroup = renderingGroup.append(\"rect\");\n      const radius = 43;\n      node.renderingAnimationGroup.attr(\"x\", -radius);\n      node.renderingAnimationGroup.attr(\"y\", -radius);\n      node.renderingAnimationGroup.attr(\"width\", 2 * radius);\n      node.renderingAnimationGroup.attr(\"height\", 2 * radius);\n      node.renderingAnimationGroup.attr(\"rx\", radius);\n      node.renderingAnimationGroup.attr(\"ry\", radius);\n\n      node.renderingAnimationGroup.style(\"stroke-width\", \"7px\");\n      node.renderingAnimationGroup.classed(\"loadingAnimation\", true);\n    } else {\n      if (this.renderingAnimationGroup) {\n        this.renderingAnimationGroup.remove();\n      }\n    }\n  }\n\n  getStatementsBySubject = async idObj => {\n    //\"TESTING Thing\";\n\n    this.orkgDataLoader.setRequestResourceId(idObj.id);\n    let result = \"\";\n    await this.orkgDataLoader.execute();\n    console.log(\"DONE FETCHING MORE STATEMENTS\");\n    console.log(this.orkgDataLoader.getResult());\n    const parser = new ORKGParser();\n    parser.setInputData(this.orkgDataLoader.getResult());\n    parser.execute();\n    const resourceModel = parser.getResult();\n    const mapper_1 = new BaseVertexEdgeMapper();\n    const mapper_2 = new BaseNodeLinkMapper();\n    mapper_1.setInputData(resourceModel);\n    mapper_1.execute();\n    mapper_2.setInputData(mapper_1.getResult());\n    mapper_2.execute();\n    console.log(\">>>>> EXECTUED SECOND MAPPER >>> NOW SHOW MODEL !!!\");\n    console.log(mapper_2.getResult().resultingModel.getResult());\n    result = mapper_2.getResult().resultingModel.getResult();\n\n    console.log(\"<<<<<<<<<<<<<<<<<<<this.is the result\", result);\n    return result;\n  };\n\n  getDataFromApi = async resourceId => {\n    try {\n      const newModel = await this.getStatementsBySubject({ id: resourceId });\n      console.log(\"WE HAVE NEW MODEL >>>> \", newModel);\n      if (newModel.nodes.length === 0 && newModel.link === 0) {\n        return {}; // we dont have incremental data\n      } else {\n        // result is the incremental data we get;\n        console.log(\"WE HAVE A NEW MODEL TO BE INTEGRATED!\");\n        return newModel;\n      }\n    } catch (error) {\n      return {}; // TODO: handle unsaved resources\n    }\n  };\n\n  async singleNodeExploration(node, redrawWhenFinished = true) {\n    const idToFetch = node.__id;\n    node.nodeHasBeenExplored = true;\n    const incrementalData = await this.getDataFromApi(idToFetch);\n\n    if (!incrementalData.nodes) {\n      this.setExploreAnimation(node, false);\n      node.status = \"leafNode\";\n      //  node.redraw(); // updated status >> drawing correct color and button;\n    } else {\n      console.log(\"WE HAVE NEW DATA TO BE INTEGRATED!\");\n\n      // create the new nodes;\n      incrementalData.nodes.forEach(node => {\n        if (!this.nodeMap[node.__nodeLinkIdentifier]) {\n          console.log(\"create Node\", node);\n          this.createNodePrimitive(node);\n        }\n      });\n\n      incrementalData.links.forEach(link => {\n        if (!this.linkMap[link.__nodeLinkIdentifier]) {\n          console.log(\"create Link\", link);\n          this.createLinkPrimitive(link);\n        } else {\n          link.__nodeLinkIdentifier += \"$$Clone\";\n          this.createLinkPrimitive(link);\n        }\n      });\n\n      node.status = \"expanded\";\n      // node.redraw(); // updated status >> drawing correct color and button;\n    }\n\n    // this.interactionHandler.nodeInteractions.applyNodeInteractions();\n    this.drawNewElements();\n    // redraw\n  }\n\n  // we will have to call a redraw function;\n  //   if (redrawWhenFinished) {\n  //     this.clearGraphAnimation(); // this removes the rendering elements\n  //   }\n  //   let iterator = that.classNodes.length + 1;\n  //   const parentPosition = [node.x, node.y];\n  //   const nodeRef = [];\n  //   incrementalData.nodes.forEach(node => {\n  //     if (\n  //       node.id !== idToFetch &&\n  //       this.mapOfResources[node.id] === undefined\n  //     ) {\n  //       // create a node;\n  //       const aNode = that.createNode(node);\n  //       aNode.id(aNode.id() + iterator);\n  //       this.Id2NodeMap[aNode.id()] = aNode;\n  //       nodeRef.push(aNode);\n  //       if (aNode.type() === \"resource\") {\n  //         aNode.status = \"unknown\";\n  //       }\n  //       // put parent position to the child node for the expand animation\n  //       aNode.x = parentPosition[0];\n  //       aNode.y = parentPosition[1];\n  //       that.classNodes.push(aNode);\n  //       iterator++;\n  //     }\n  //   });\n  //   iterator = that.propNodes.length + 1;\n  //   if (incrementalData.edges) {\n  //     incrementalData.edges.forEach(edge => {\n  //       const anEdge = that.createEdge(edge, iterator);\n  //       that.propNodes.push(anEdge);\n  //       this.Id2PropnodeMap[anEdge.id()] = anEdge;\n  //       iterator++;\n  //     });\n  //   }\n  //   if (redrawWhenFinished) {\n  //     console.log(\"FORCE A REDRAW OF NODES \");\n  //\n  //     // this.computeDepth();\n  //     // this.redrawGraphAfterExpand(nodeRef, node);\n  //     // this.buildDictionary();\n  //   }\n  // }\n\n  exploreSingleNode(node) {\n    console.log(\"GRAPH REQUEST A NODE EXPLORATION TASK\");\n    this.setExploreAnimation(node, true);\n    this.singleNodeExploration(node, true);\n  }\n\n  drawNewElements() {\n    // this.initializeRenderingContainer();\n    // this.resetUserNavigation();\n\n    // clear the layers;\n    this.graphRoot.selectAll(\"defs\").remove();\n    this.graphRoot.selectAll(\"g\").remove();\n\n    this._createLayers();\n\n    console.log(this.renderedLinks);\n    console.log(this.renderedNodes);\n    this.renderedNodes = [];\n    this.renderedLinks = [];\n    console.log(\"calling the redraw function for orkg graph\");\n    this.redrawRenderingPrimitives();\n\n    if (this.interactionHandler) {\n      this.interactionHandler.applyInteractions(this, true);\n    } else {\n      console.log(\"No Interaction Handler set, the graph will be static!\");\n    }\n    //\n    if (this.layoutHandler) {\n      this.layoutHandler.initializeLayoutEngine();\n      this.layoutHandler.resumeForce();\n    } else {\n      console.log(\"No Layout Handler set, the graph will be static!\");\n    }\n  }\n\n  createRenderingElements() {\n    super.createRenderingElements();\n\n    this.model.nodes.forEach(node => {\n      this.createNodePrimitive(node);\n    });\n\n    // set the position of the test nodes;\n\n    this.nodes[0].setPosition(60, 150);\n    this.nodes[1].setPosition(300, 150);\n\n    this.model.links.forEach(link => {\n      this.createLinkPrimitive(link);\n    });\n\n    let i = 0;\n    this.links.forEach(link => {\n      this.updateMultiLinkTypes(link);\n      link.setPosition(200, i * 50);\n      i++;\n    });\n\n    // TODO SAME FOR LINKS!;\n  }\n}\n","export default class DefaultRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {},\n      links: {}\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"circle\",\n        bgColor: \"#959796\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#000000\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#ffffff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"true\",\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000000\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: true,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      // console.log(\"NO DEFINITION FOR NODE TYPE:\" + type);\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      // console.log(\"NO DEFINITION FOR LINK TYPE:\" + type);\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","export default class VOWLRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {\n        \"owl:Thing\": {\n          style: {\n            renderingType: \"circle\",\n            bgColor: \"#ffffff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 100,\n            height: 50\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        \"owl:Class\": {\n          style: {\n            renderingType: \"circle\",\n            bgColor: \"#aaccff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 50\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        \"owl:equivalentClass\": {\n          style: {\n            renderingType: \"circle\",\n            bgColor: \"#aaccff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dotted\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 50,\n            doubleStrokes: true\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        \"rdfs:Literal\": {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 50,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        Literal: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 50,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      links: {\n        \"owl:datatypeProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#99CC66\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        },\n\n        \"rdfs:subClassOf\": {\n          style: {\n            link: {\n              lineStyle: \"dashed\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#ECF0F1\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        },\n\n        \"owl:equivalentClass\": {\n          style: {\n            link: {\n              lineStyle: \"dashed\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#ffffff\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#ECF0F1\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        },\n\n        \"owl:objectProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#aaccff\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"curve\" // line or curve\n          }\n        }\n      }\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"circle\",\n        bgColor: \"#ffffff\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#f9fff8\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#d58d88\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#fefdff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"true\",\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      console.log(\"NO DEFINITION FOR NODE TYPE:\" + type);\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      console.log(\"NO DEFINITION FOR LINK TYPE:\" + type);\n\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","export default class DefaultRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {\n        auxForDataTypeProperties: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#99CC66\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 30,\n            roundedCorner: \"20, 20\"\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n\n        auxForObjectProperties: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#aaccff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 30,\n            roundedCorner: \"20, 20\"\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      links: {\n        auxLink: {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#b0b1b1\",\n\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: true,\n                strokeWidth: \"1px\",\n                strokeStyle: \"dashed\",\n                radius: 50,\n                width: 100,\n                height: 25,\n                roundedCorner: \"10, 10\"\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        }\n      }\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"ellipse\",\n        bgColor: \"#959796\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#000000\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#ffffff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"true\",\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000000\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      console.log(\"NO DEFINITION FOR NODE TYPE:\" + type);\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      console.log(\"NO DEFINITION FOR LINK TYPE:\" + type);\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","export default class UMLRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {\n        \"rdfs:Literal\": {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 50,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n        Literal: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#a6fff3\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 50,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      links: {\n        \"owl:datatypeProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#99CC66\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        },\n\n        \"owl:objectProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#aaccff\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: false,\n                overwriteOffset: 0,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        }\n      }\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"rect\",\n        bgColor: \"#ffffff\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50,\n        roundedCorner: \"10,10\"\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: true,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#000000\"\n        },\n        arrowTail: {\n          renderingType: \"diamond\",\n          scaleFactor: 2,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#d6d5d5\"\n        },\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#ffffff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"true\",\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000000\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      console.log(\"NO DEFINITION FOR NODE TYPE:\" + type);\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      console.log(\"NO DEFINITION FOR LINK TYPE:\" + type);\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","export default class DefaultRenderingHandler {\n  constructor() {\n    this.renderingConfigObject = {\n      nodes: {\n        Resource: {\n          style: {\n            renderingType: \"circle\",\n            bgColor: \"#aaccff\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"solid\",\n            strokeColor: \"#000\",\n            radius: 50,\n            width: 100,\n            height: 50\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        },\n        Literal: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#FFCC33\",\n            strokeElement: true,\n            strokeWidth: \"1px\",\n            strokeStyle: \"dashed\",\n            strokeColor: \"#000\",\n            radius: 30,\n            width: 50,\n            height: 20\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000\",\n            fontSize: \"12px\"\n          },\n\n          options: {\n            drawDisplayName: true,\n            drawNestedAttributes: false,\n            cropLongText: false,\n            addTitleForDisplayName: true,\n            fontSizeOverWritesShapeSize: true,\n            overwriteOffset: 20,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      links: {\n        \"owl:datatypeProperty\": {\n          style: {\n            link: {\n              lineStyle: \"solid\",\n              lineWidth: \"2px\",\n              lineColor: \"#000000\"\n            },\n            arrowHead: {\n              renderingType: \"triangle\",\n              scaleFactor: 1,\n              strokeWidth: \"2px\",\n              strokeStyle: \"solid\",\n              strokeColor: \"#000000\",\n              fillColor: \"#000000\"\n            },\n\n            propertyNode: {\n              style: {\n                renderingType: \"rect\",\n                bgColor: \"#99CC66\",\n                roundedCorner: \"0,0\",\n                fontSizeOverWritesShapeSize: \"true\",\n                overWriteOffset: \"5\",\n                strokeElement: \"false\",\n                radius: 50,\n                width: 100,\n                height: 25\n              },\n              fontStyle: {\n                fontFamily: \"Helvetica,Arial,sans-serif\",\n                fontColor: \"#000000\",\n                fontSize: \"12px\"\n              },\n              options: {\n                drawDisplayName: true,\n                cropLongText: true,\n                addTitleForDisplayName: true,\n                overwritesShapeSize: true,\n                overwriteOffset: 10,\n                fontPositionH: \"center\",\n                fontPositionV: \"center\"\n              }\n            }\n          },\n          options: {\n            drawPropertyNode: true,\n            drawArrowHead: true,\n            drawArrowTail: false,\n            link_renderingType: \"line\" // line or curve\n          }\n        }\n      }\n    };\n\n    this.defaultNodeCFG = {\n      style: {\n        renderingType: \"circle\",\n        bgColor: \"#aaccff\",\n        strokeElement: true,\n        strokeWidth: \"1px\",\n        strokeStyle: \"solid\",\n        strokeColor: \"#000\",\n        radius: 50,\n        width: 100,\n        height: 50\n      },\n      fontStyle: {\n        fontFamily: \"Helvetica,Arial,sans-serif\",\n        fontColor: \"#000000\",\n        fontSize: \"12px\"\n      },\n\n      options: {\n        drawDisplayName: true,\n        drawNestedAttributes: false,\n        cropLongText: true,\n        addTitleForDisplayName: true,\n        overwritesShapeSize: false,\n        overwriteOffset: 0,\n        fontPositionH: \"center\",\n        fontPositionV: \"center\"\n      }\n    };\n\n    this.defaultLinkCFG = {\n      style: {\n        link: {\n          lineStyle: \"solid\",\n          lineWidth: \"2px\",\n          lineColor: \"#000000\"\n        },\n        arrowHead: {\n          renderingType: \"triangle\",\n          scaleFactor: 1,\n          strokeWidth: \"2px\",\n          strokeStyle: \"solid\",\n          strokeColor: \"#000000\",\n          fillColor: \"#000000\"\n        },\n\n        propertyNode: {\n          style: {\n            renderingType: \"rect\",\n            bgColor: \"#aaccff\",\n            roundedCorner: \"0,0\",\n            fontSizeOverWritesShapeSize: \"true\",\n            overWriteOffset: \"5\",\n            strokeElement: \"false\",\n            radius: 50,\n            width: 100,\n            height: 25\n          },\n          fontStyle: {\n            fontFamily: \"Helvetica,Arial,sans-serif\",\n            fontColor: \"#000000\",\n            fontSize: \"12px\"\n          },\n          options: {\n            drawDisplayName: true,\n            cropLongText: true,\n            addTitleForDisplayName: true,\n            overwritesShapeSize: false,\n            overwriteOffset: 0,\n            fontPositionH: \"center\",\n            fontPositionV: \"center\"\n          }\n        }\n      },\n      options: {\n        drawPropertyNode: true,\n        drawArrowHead: true,\n        drawArrowTail: false,\n        link_renderingType: \"line\" // line or curve\n      }\n    };\n  }\n  getNodeConfigFromType = type => {\n    if (!this.renderingConfigObject.nodes.hasOwnProperty(type)) {\n      // console.log(\"NO DEFINITION FOR NODE TYPE:\" + type);\n      return this.defaultNodeCFG;\n    }\n    return this.renderingConfigObject.nodes[type];\n  };\n\n  getLinkConfigFromType = type => {\n    if (!this.renderingConfigObject.links.hasOwnProperty(type)) {\n      // console.log(\"NO DEFINITION FOR LINK TYPE:\" + type);\n      return this.defaultLinkCFG;\n    }\n    return this.renderingConfigObject.links[type];\n  };\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectDataSource } from \"./redux/actions\";\nimport { connect } from \"react-redux\";\n\nimport VOWLRenderer from \"../Implementation/Renderes/gizmoRenderer/vowlGraph\";\nimport OrkgGraph from \"../Implementation/Renderes/gizmoRenderer/orkgGraph\";\nimport BasicRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/BasicRenderingHandler\";\nimport VOWLRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/VOWLRenderingHandler\";\nimport StaticLocalVowlJSONLoader from \"../Implementation/DataAccessComponent/StaticLocalVowlJSONLoader\";\nimport BaseVertexEdgeMapper from \"../Implementation/Mappers/BaseVertexEdgeMapper\";\nimport BaseNodeLinkMapper from \"../Implementation/Mappers/BaseNodeLinkMapper\";\nimport VOWLParser from \"../Implementation/Parsers/VOWLParser\";\nimport SparqlParser from \"../Implementation/Parsers/SparqlParser\";\nimport RDFStyledRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/RDFStyledRenderingHandler\";\nimport UMLStyledRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/UMLStyledRenderingHandler\";\nimport DBPediaLoader from \"../Implementation/DataAccessComponent/DBPediaLoader\";\nimport VowlNodeLinkMapper from \"../Implementation/Mappers/VowlNodeLinkMapper\";\nimport RDFNodeLinkMapper from \"../Implementation/Mappers/RDFNodeLinkMapper\";\nimport WikiDataLoader from \"../Implementation/DataAccessComponent/WikiDataLoader\";\nimport WikiDataExampleParser from \"../Implementation/Parsers/WikiDataParserExample\";\nimport OrkgDataLoader from \"../Implementation/DataAccessComponent/OrkgDataLoader\";\nimport ORKGParser from \"../Implementation/Parsers/ORKGParser\";\nimport OrkgRenderingHandler from \"../Implementation/Renderes/gizmoRenderer/renderingConfigs/OrkgRenderingHandler\";\nimport UMLNodeLinkMapper from \"../Implementation/Mappers/UMLNodeLinkMapper\";\n\nclass VisualizationPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.renderingModule = \"null\";\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (\n      this.props.store.createPreviewVisualization !==\n        prevProps.store.createPreviewVisualization &&\n      prevProps.store.createPreviewVisualization === true\n    ) {\n      // clear the visualizations\n      this.renderingModule._clearRenderingContainers();\n    }\n\n    if (\n      this.props.store.createPreviewVisualization !==\n        prevProps.store.createPreviewVisualization &&\n      this.props.store.createPreviewVisualization === true\n    ) {\n      // create the rendering modules;\n      let renderingModule = new VOWLRenderer();\n\n      let renderingConfig = new BasicRenderingHandler();\n      // tell the renderer to use a specific rendering handler;\n\n      if (this.props.store.renderingModuleConfig.configSelected === \"VOWL\") {\n        renderingConfig = new VOWLRenderingHandler();\n      }\n      if (this.props.store.renderingModuleConfig.configSelected === \"RDF\") {\n        console.log(\"Creating RDF Styled Rendering Handler\");\n        renderingConfig = new RDFStyledRenderingHandler();\n      }\n      if (this.props.store.renderingModuleConfig.configSelected === \"UML\") {\n        console.log(\"Creating RDF Styled Rendering Handler\");\n        renderingConfig = new UMLStyledRenderingHandler();\n      }\n      if (this.props.store.renderingModuleConfig.configSelected === \"ORKG\") {\n        renderingModule = new OrkgGraph();\n        console.log(\"Creating ORKG Rendering Handler\");\n        renderingConfig = new OrkgRenderingHandler();\n      }\n\n      renderingModule.setRenderingConfig(renderingConfig);\n\n      // initialize the pipeline;\n      // <<<<<<<<<TODO>>>>>> WILL HAVE TO MAKE THIS TO LET\n      let dah = new StaticLocalVowlJSONLoader();\n      let parser = new VOWLParser();\n      const mapper_1 = new BaseVertexEdgeMapper();\n      let mapper_2 = new BaseNodeLinkMapper();\n\n      // DATA SOURCE AND THEIR PARSERS\n      if (this.props.store.selectedDataSource === \"DBPedia\") {\n        dah = new DBPediaLoader();\n        parser = new SparqlParser();\n      }\n      if (this.props.store.selectedDataSource === \"WikiData\") {\n        dah = new WikiDataLoader();\n        parser = new WikiDataExampleParser();\n      }\n      if (this.props.store.selectedDataSource === \"ORKG\") {\n        dah = new OrkgDataLoader();\n        parser = new ORKGParser();\n      }\n\n      // NODE LINK MAPPERS\n      if (this.props.store.selectedNodeLinkMapper === \"VOWL\") {\n        mapper_2 = new VowlNodeLinkMapper();\n      }\n      if (this.props.store.selectedNodeLinkMapper === \"RDF\") {\n        mapper_2 = new RDFNodeLinkMapper();\n      }\n      if (this.props.store.selectedNodeLinkMapper === \"UML\") {\n        mapper_2 = new UMLNodeLinkMapper();\n      }\n\n      dah.execute().then(() => {\n        console.log(\"DAH Output >> \", dah.getResult());\n        parser.setInputData(dah.getResult());\n        parser.execute();\n        const resourceModel = parser.getResult();\n        console.log(resourceModel);\n        mapper_1.setInputData(resourceModel);\n        mapper_1.execute().then(() => {\n          mapper_2.setInputData(mapper_1.getResult());\n          mapper_2.execute().then(() => {\n            console.log(\">>> EVERYTHIN IS PREPARED \");\n            console.log(mapper_2.getResult().resultingModel.getResult());\n            renderingModule.setRenderingContainer(\"visualizationPreviewArea\"); // set div for rendering\n            renderingModule.configureGraphInteractions(\n              this.props.store.renderingModuleConfig\n            );\n            renderingModule.setModel(\n              mapper_2.getResult().resultingModel.getResult()\n            ); // set node-link model\n            // do the rendering magic\n            renderingModule.initializeRenderingContainer();\n            renderingModule.createRenderingElements();\n            renderingModule.drawRenderingPrimitives();\n            this.renderingModule = renderingModule;\n          });\n        });\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <div\n          // className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderBottomRightRadius: \"0\",\n            borderBottomLeftRadius: \"0\",\n            height: \"40px\",\n            width: \"100%\",\n\n            color: \"white\",\n            backgroundColor: \"#ad2f38\"\n          }}\n        >\n          <div style={{ width: \"100%\", textAlign: \"left\", padding: \"5px\" }}>\n            {this.props.title}\n          </div>\n        </div>\n\n        <div\n          className=\"pr-md-5 pt-sm-2 pb-sm-2 pl-sm-2 pr-sm-2 clearfix\"\n          style={{\n            borderRadius: \"10px\",\n            borderWidth: \"1px\",\n            borderColor: \"rgb(219,221,229)\",\n            borderStyle: \"solid\",\n            borderTopRightRadius: \"0\",\n            borderTopLeftRadius: \"0\",\n            color: \"black\",\n            backgroundColor: \"#ffffff\",\n            marginTop: \"-1px\",\n            position: \"relative\",\n\n            width: \"100%\"\n          }}\n        >\n          <div\n            id=\"visualizationPreviewArea\"\n            style={{\n              height: this.props.store.createPreviewVisualization\n                ? \"600px\"\n                : \"10px\",\n              width: \"100%\"\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nVisualizationPreview.propTypes = {\n  title: PropTypes.string,\n  store: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    store: state.store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // dispatch(selectDataSource());\n  return {\n    selectDataSource: payload => dispatch(selectDataSource(payload))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VisualizationPreview);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport PipeLineVis from \"./PipeLineVis\";\nimport VisualizationPreview from \"./VisualizationPreview\";\nconst expandContentContainerAnimation = ({\n  expandedLeft,\n  oldLeftExpanded,\n  newWidth,\n  oldWidth,\n  leftWidth,\n  rightWidth\n}) => {\n  // do we need animation?\n  const needTransitionAnimation = !(expandedLeft === oldLeftExpanded);\n\n  if (needTransitionAnimation) {\n    return keyframes`\n  from {\n    left: ${expandedLeft ? 0 : leftWidth}px;\n    width:${oldWidth}px\n  }\n  to {\n    width: ${newWidth}px\n    left: ${expandedLeft ? leftWidth : 0}px;\n  }\n  `;\n  } else {\n    return keyframes`\n  from {\n    width:${oldWidth}px\n  }\n  to {\n    width: ${newWidth}px\n  }\n  `;\n  }\n};\n\nconst ContentContainer = styled.div`\n    animation-name: ${expandContentContainerAnimation};\n    animation-duration: 20ms;\n    position: relative;\n    width:${props => props.newWidth}px\n    left: ${props => (props.expandedLeft ? props.leftWidth : 0)}px;\n`;\n\nexport default class MainWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: true,\n      minWidth: 300,\n\n      title: props.title,\n      initialRendering: true,\n      updateFlipFlop: false\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // if (prevProps.leftSideBarExpanded !== this.props.leftSideBarExpanded) {\n    //   this.setState({ initialRendering: false });\n    // }\n  };\n\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <ContentContainer\n        id=\"MainWidget\"\n        expandedLeft={this.props.leftSideBarExpanded}\n        expandedRight={this.props.rightSideBarExpanded}\n        oldWidth={this.props.oldWidth}\n        newWidth={this.props.newWidth}\n        leftWidth={this.props.leftSidebarWidth}\n        rightWidth={this.props.rightSidebarWidth}\n        oldLeftExpanded={this.props.oldLeftSidebarState}\n        initialRendering={this.state.initialRendering}\n        style={{\n          height: \"100%\",\n          width: window.innerWidth - 200,\n          left: \"200px\"\n        }}\n      >\n        <div\n          style={{\n            width: \"80%\",\n            height: \"100%\",\n            // border: \"1px solid black\",\n            position: \"relative\",\n            left: \"10%\"\n            // backgroundColor: \"gray\"\n          }}\n        >\n          <PipeLineVis title=\"Pipeline Visualization\" /> <br />\n          <VisualizationPreview\n            style={{ marginTop: \"10px\" }}\n            title=\"Visualization Preview\"\n          />\n        </div>\n      </ContentContainer>\n    );\n  }\n}\n\nMainWidget.propTypes = {\n  title: PropTypes.string,\n  oldWidth: PropTypes.number,\n  newWidth: PropTypes.number,\n  height: PropTypes.number,\n  leftSidebarWidth: PropTypes.number.isRequired,\n  rightSidebarWidth: PropTypes.number.isRequired,\n  oldLeftSidebarState: PropTypes.bool.isRequired,\n  leftSideBarExpanded: PropTypes.bool.isRequired,\n  rightSideBarExpanded: PropTypes.bool.isRequired\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport PropTypes from \"prop-types\";\nimport LeftSideBar from \"./UI/LeftSideBar\";\nimport RightSideBar from \"./UI/RightSideBar\";\nimport MainWidget from \"./UI/MainWidget\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leftSidebarExpanded: true,\n      rightSidebarExpanded: true,\n      oldMainWidgetWidth: 500,\n      newMainWidgetWidth: 500,\n      windowWidth: 500,\n      mainWidgetHeight: 200,\n      componentInitialized: false,\n      oldLeftSideState: true,\n      leftSidebarWidth: 320,\n      rightSidebarWidth: 300\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    this.updateMainWidgetSize();\n    // if (!this.state.componentInitialized) {\n    //   let result = this.state.windowWidth;\n    //   if (this.state.leftSidebarExpanded) {\n    //     result -= this.state.leftSidebarWidth;\n    //   }\n    //   if (this.state.rightSidebarExpanded) {\n    //     result -= this.state.rightSidebarWidth + 300;\n    //   }\n    //   this.setState({\n    //     oldLeftSideState: prevState.leftSidebarExpanded,\n    //     oldMainWidgetWidth: this.state.newMainWidgetWidth,\n    //     newMainWidgetWidth: result,\n    //     componentInitialized: true\n    //   });\n    // }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  leftSideBarUpdateEvent = expanded => {\n    // child provides information about its expand status;\n    //its status is forwarded to the mainWidget which then changes its width and position\n    let result = this.state.windowWidth;\n    if (expanded) {\n      result -= this.state.leftSidebarWidth + 300;\n    }\n    if (this.state.rightSidebarExpanded) {\n      result -= this.state.rightSidebarWidth;\n    }\n    this.setState({\n      leftSidebarExpanded: expanded,\n      oldLeftSideState: this.state.leftSidebarExpanded,\n      oldMainWidgetWidth: this.state.newMainWidgetWidth,\n      newMainWidgetWidth: result\n    });\n  };\n\n  rightSideBarUpdateEvent = expanded => {\n    // child provides information about its expand status;\n    //its status is forwarded to the mainWidget which then changes its width and position\n    let result = this.state.windowWidth;\n    if (expanded) {\n      result -= this.state.rightSidebarWidth;\n    }\n    if (this.state.leftSidebarExpanded) {\n      result -= this.state.leftSidebarWidth + 300;\n    }\n    this.setState({\n      oldLeftSideState: this.state.leftSidebarExpanded,\n      rightSidebarExpanded: expanded,\n      oldMainWidgetWidth: this.state.newMainWidgetWidth,\n      newMainWidgetWidth: result\n    });\n    this.updateMainWidgetSize();\n  };\n\n  updateDimensions = () => {\n    let result = window.innerWidth;\n    if (this.state.leftSidebarExpanded) {\n      result -= this.state.leftSidebarWidth + 300;\n    }\n    if (this.state.rightSidebarExpanded) {\n      result -= this.state.rightSidebarWidth;\n    }\n\n    this.setState({\n      windowHeight: window.innerHeight,\n      leftSidebarExpanded: this.state.leftSidebarExpanded,\n      oldLeftSideState: this.state.leftSidebarExpanded,\n      oldMainWidgetWidth: result,\n      newMainWidgetWidth: result,\n      windowWidth: window.innerWidth\n    });\n  };\n\n  updateMainWidgetSize = () => {\n    // get document by ids;\n    const heightLeft = document\n      .getElementById(\"LeftSidebarContainer\")\n      .getBoundingClientRect().height;\n    const heightRight = document\n      .getElementById(\"RightSidebarContainer\")\n      .getBoundingClientRect().height;\n\n    const newHeight = Math.max(heightRight, heightLeft);\n    if (newHeight !== this.state.mainWidgetHeight) {\n      this.setState({ mainWidgetHeight: newHeight });\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: this.state.windowHeight,\n          backgroundColor: \"#3f3a40\",\n          margin: \"auto\",\n          padding: \"10px\"\n        }}\n      >\n        <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n          <MainWidget\n            leftSideBarExpanded={this.state.leftSidebarExpanded}\n            rightSideBarExpanded={this.state.rightSidebarExpanded}\n            leftSidebarWidth={this.state.leftSidebarWidth}\n            rightSidebarWidth={this.state.rightSidebarWidth}\n            oldWidth={this.state.oldMainWidgetWidth}\n            newWidth={this.state.newMainWidgetWidth}\n            oldLeftSidebarState={this.state.oldLeftSideState}\n            height={this.state.mainWidgetHeight}\n            title=\"MAIN\"\n          />\n          <LeftSideBar\n            width={this.state.leftSidebarWidth}\n            title=\"Modules Selection\"\n            loading={false}\n            updateEvent={this.leftSideBarUpdateEvent}\n          />\n          <RightSideBar\n            width={this.state.rightSidebarWidth}\n            title=\"Module Options\"\n            loading={false}\n            updateEvent={this.rightSideBarUpdateEvent}\n            heightUpdateEvent={this.updateMainWidgetSize}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as type from \"./types\";\nconst initialState = {\n  selectedDataSource: \"Ontology File\",\n  selectedDataSourceConfig: {},\n  selectedVertexEdgeMapper: \"Basic Mapper\",\n  selectedVertexEdgeMapperConfig: {},\n  selectedNodeLinkMapper: \"Basic Mapper\",\n  selectedNodeLinkMapperConfig: {},\n  createPreviewVisualization: false,\n  renderingModuleConfig: {\n    // graph defs\n    graph_mouseZoom: true,\n    graph_mouseDrag: true,\n    // node defs\n    node_mouseDrag: true,\n    node_mouseHover: true,\n    node_mouseSingleClick: true,\n    node_mouseDoubleClick: true,\n\n    // graphBgColor\n    graphBgColor: \"white\",\n\n    configSelected: \"Default\",\n\n    // links\n    link_mouseDrag: true,\n    link_mouseHover: true\n    // TODO the clicking interactions\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case type.SELECT_DATASOURCE: {\n      return {\n        ...state,\n        selectedDataSource: action.payload.selectedDataSource\n      };\n    }\n    case type.SELECT_VERTEXEDGE_MAPPER: {\n      return {\n        ...state,\n        selectedVertexEdgeMapper: action.payload.selectedVertexEdgeMapper\n      };\n    }\n    case type.SELECT_NODELINK_MAPPER: {\n      return {\n        ...state,\n        selectedNodeLinkMapper: action.payload.selectedNodeLinkMapper\n      };\n    }\n    case type.CREATE_PREVIEW_VISUALIZATION: {\n      return {\n        ...state,\n        createPreviewVisualization: action.payload.createPreviewVisualization\n      };\n    }\n    case type.UPDATE_RENDERING_MODULE_CONFIG: {\n      return {\n        ...state,\n        renderingModuleConfig: action.payload\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./UI/redux/rootReducer\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // enable redux debug tools\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer(history),\n    composeEnhancers(applyMiddleware(thunk, routerMiddleware(history)))\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport configureStore, { history } from \"./store\";\nconst store = configureStore();\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport store from \"./store\";\n\nexport default history =>\n  combineReducers({\n    router: history ? connectRouter(history) : null,\n    store\n  });\n"],"sourceRoot":""}